{"version":3,"file":"static/js/644.b0e99530.chunk.js","mappings":"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","sources":["components/insights/InsightCard.js","components/insights/Graph.js","pages/Insights/Insights.js"],"sourcesContent":["import React from \"react\";\nimport { IoInformationCircleOutline } from \"react-icons/io5\";\n\nconst InsightCard = ({ data }) => {\n  console.log(data);\n  return (\n    <div className=\"rounded-2xl h-36 w-full p-4 bg-primary\">\n      <div className=\"flex flex-col gap-3\">\n        <div className=\"flex items-center  gap-2\">\n          <p className=\"font-inter font-semibold text-lg\">{data?.title}</p>\n          <IoInformationCircleOutline className=\"size-5\" title=\"test\" />\n        </div>\n        <div className=\"font-inter font-medium text-2xl\">{data?.value}</div>\n      </div>\n    </div>\n  );\n};\n\nexport default InsightCard;\n","import React from \"react\";\nimport { Line } from \"react-chartjs-2\";\nimport {\n  Chart as ChartJS,\n  LineElement,\n  PointElement,\n  LinearScale,\n  CategoryScale,\n  Title,\n} from \"chart.js\";\n\nChartJS.register(LineElement, PointElement, LinearScale, CategoryScale, Title);\n\nconst LineChart = () => {\n  // Sample data for the chart\n  const data = {\n    labels: [\n      \"2024-10-01\",\n      \"2024-10-04\",\n      \"2024-10-07\",\n      \"2024-10-10\",\n      \"2024-10-13\",\n    ],\n    datasets: [\n      {\n        label: \"Parameter 0\",\n        data: [0, 1, 0, 2, 1],\n        borderColor: \"rgba(75, 192, 192, 1)\",\n        backgroundColor: \"rgba(75, 192, 192, 0.2)\",\n        fill: true,\n        tension: 0.1, // For a smooth line\n      },\n      {\n        label: \"Parameter 1\",\n        data: [1, 2, 1, 0, 2],\n        borderColor: \"rgba(255, 99, 132, 1)\",\n        backgroundColor: \"rgba(255, 99, 132, 0.2)\",\n        fill: true,\n        tension: 0.1,\n      },\n      {\n        label: \"Parameter 2\",\n        data: [2, 0, 1, 1, 0],\n        borderColor: \"rgba(54, 162, 235, 1)\",\n        backgroundColor: \"rgba(54, 162, 235, 0.2)\",\n        fill: true,\n        tension: 0.1,\n      },\n    ],\n  };\n\n  // Chart options\n  const options = {\n    responsive: true,\n    plugins: {\n      legend: {\n        position: \"top\",\n      },\n      title: {\n        display: true,\n        text: \"Line Chart Example\",\n      },\n    },\n  };\n\n  return <Line data={data} options={options} />;\n};\n\nexport default LineChart;\n","import React, { useEffect, useState } from \"react\";\nimport { InsightCard, LineChart } from \"../../components/insights\";\nimport { IoInformationCircleOutline } from \"react-icons/io5\";\nimport { toast } from \"react-toastify\";\nimport axiosInstance from \"../../utils/axiosInstance\";\nimport { useSelector } from \"react-redux\";\n\nconst Insights = () => {\n  const profileId = useSelector((state) => state.profile.profileId);\n  const [analytics, setAnalytics] = useState([]);\n  const [platformViews, setPlatformViews] = useState([]);\n  const [topPlatform, setTopPlatform] = useState(null);\n  const [loading, setLoading] = useState(false);\n\n  async function getAnalytics() {\n    try {\n      setLoading(true);\n      const response = await axiosInstance.post(\"/analytics\", {\n        profile_id: profileId,\n        // from_date: \"21-05-2023\",\n        // to_data: \"06-10-2023\",\n      });\n      if (response.status === 200) {\n        setLoading(false);\n        const { profile_views, link_views, connections, platform_views, top_platform } = response?.data;\n        setAnalytics([\n          { id: 1, title: \"Profile Views\", value: profile_views },\n          { id: 2, title: \"Link Views\", value: link_views },\n          { id: 3, title: \"Connections\", value: connections },\n        ]);\n        setPlatformViews(platform_views);\n        setTopPlatform(top_platform);\n      }\n    } catch (error) {\n      toast.error(error.response.data.message, {\n        position: \"bottom-right\",\n        autoClose: 5000,\n        hideProgressBar: true,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined,\n        theme: \"light\",\n      });\n    }\n  }\n\n  useEffect(() => {\n    getAnalytics();\n  }, [profileId]);\n\n  return (\n    <section className=\"\">\n      <div className=\"grid lg:grid-cols-2 grid-cols-1 gap-6\">\n        <div className=\"lg:col-span-2 grid lg:grid-cols-3 grid-cols-1 gap-4\">\n          {loading ? (\n              <>\n                {[1, 2, 3].map((id) => (\n                    <div\n                        key={id}\n                        className=\"rounded-2xl h-36 w-full p-4 bg-gray-200 animate-pulse\"\n                    >\n                      <div className=\"flex flex-col gap-3\">\n                        <div className=\"flex items-center gap-2\">\n                          <p className=\"font-inter font-semibold text-lg\">\n                            Loading...\n                          </p>\n                          <IoInformationCircleOutline className=\"size-5\" />\n                        </div>\n                        <div className=\"font-inter font-medium text-2xl\">...</div>\n                      </div>\n                    </div>\n                ))}\n              </>\n          ) : (\n              <>\n                {analytics?.map((result) => (\n                    <InsightCard key={result.id} data={result} />\n                ))}\n              </>\n          )}\n        </div>\n\n        <div className=\"rounded-2xl w-full p-4 bg-primary\">\n          <div className=\"flex flex-col gap-3\">\n            <div className=\"flex items-center gap-2\">\n              <p className=\"font-inter font-semibold text-lg\">Platform Views</p>\n            </div>\n            <div className=\"space-y-4\">\n              {platformViews.length > 0 ? (\n                  platformViews.map((platform) => (\n                      <div key={platform.title} className=\"flex items-center justify-between gap-4 p-4 bg-white rounded-lg shadow\">\n                        <div className=\"flex items-center gap-2\">\n                          <img src={`${process.env.REACT_APP_SERVER}${platform.icon}`}\n                               alt={platform.title} className=\"w-10 h-10\" />\n                          <p className=\"font-inter font-medium\">{platform.title}</p>\n                        </div>\n                        <p className=\"font-inter text-sm text-gray-600\">{platform.clicks} clicks</p>\n                      </div>\n                  ))\n              ) : (\n                  <div className=\"flex items-center justify-center p-4 bg-white rounded-lg shadow\">\n                    <p className=\"font-inter text-sm text-gray-600\">No platform views available</p>\n                  </div>\n              )}\n            </div>\n          </div>\n        </div>\n\n        <div className=\"rounded-2xl w-full p-4 bg-primary\">\n          <div className=\"flex flex-col gap-3\">\n            <div className=\"flex items-center gap-2\">\n              <p className=\"font-inter font-semibold text-lg\">Top Platform</p>\n            </div>\n            <div className=\"space-y-4\">\n              {topPlatform ? (\n                  <div key={topPlatform.title} className=\"flex items-center justify-between gap-4 p-4 bg-white rounded-lg shadow\">\n                    <div className=\"flex items-center gap-2\">\n                      <img src={`${process.env.REACT_APP_SERVER}${topPlatform.icon}`}\n                           alt={topPlatform.title} className=\"w-10 h-10\" />\n                      <p className=\"font-inter font-medium\">{topPlatform.title}</p>\n                    </div>\n                    <p className=\"font-inter text-sm text-gray-600\">{topPlatform.clicks} clicks</p>\n                  </div>\n              ) : (\n                  <div className=\"flex items-center justify-center p-4 bg-white rounded-lg shadow\">\n                    <p className=\"font-inter text-sm text-gray-600\">No top platform available</p>\n                  </div>\n              )}\n            </div>\n          </div>\n        </div>\n\n      </div>\n    </section>\n  );\n};\n\nexport default Insights;\n"],"names":["_ref","data","console","log","_jsx","className","children","_jsxs","title","IoInformationCircleOutline","value","ChartJS","register","LineElement","PointElement","LinearScale","CategoryScale","Title","Insights","profileId","useSelector","state","profile","analytics","setAnalytics","useState","platformViews","setPlatformViews","topPlatform","setTopPlatform","loading","setLoading","useEffect","async","response","axiosInstance","post","profile_id","status","profile_views","link_views","connections","platform_views","top_platform","id","error","toast","message","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","theme","getAnalytics","_Fragment","map","result","InsightCard","length","platform","src","icon","alt","clicks"],"sourceRoot":""}