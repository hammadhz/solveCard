{"version":3,"file":"static/js/816.aab9db9c.chunk.js","mappings":"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","sources":["components/profile/ProfileNav.js","components/profile/About.js","components/modal/AddLinksModal.js","components/modal/AddLinkInfoModal.js","components/modal/AddLinkBaseModal.js","components/profile/Link.js","components/profile/ProfileEd.js","components/profile/ProfileViewCard.js","components/profile/ProfileView.js","components/profile/ProfileEdit.js","components/profile/ProfileCard.js","components/profile/AddProfileCard.js","utils/base64ToBlob.js"],"sourcesContent":["import React from \"react\";\nimport { CiUser } from \"react-icons/ci\";\nimport { AiOutlineLink } from \"react-icons/ai\";\nimport { RiFilterLine } from \"react-icons/ri\";\nimport { MdOutlineEmail, MdOutlineQrCode2 } from \"react-icons/md\";\nimport { useDispatch } from \"react-redux\";\nimport { sectionLink } from \"../../context/slice/profileSlice\";\n\nconst ProfileNav = () => {\n  const dispatch = useDispatch();\n\n  const handleLinks = (link) => {\n    dispatch(sectionLink(link));\n  };\n\n  return (\n    <nav\n      className=\"h-full w-full lg:w-1/5 flex justify-center px-2 overflow-y-auto rounded-xl bg-white\"\n      id=\"profileNav\"\n    >\n      <div className=\"flex flex-col gap-8 items-start py-6 w-full\">\n        {/* Section: Content */}\n        <div className=\"flex flex-col w-full gap-2\">\n          <h3 className=\"pl-3 font-inter font-semibold text-xl text-gray-600 uppercase\">\n            Content\n          </h3>\n\n          {/* About Link */}\n          <div\n            className=\"flex gap-2 items-center p-2 rounded hover:bg-gray-200 cursor-pointer transition duration-300 group\"\n            onClick={() => handleLinks(\"about\")}\n          >\n            <CiUser className=\"text-lg text-black group-hover:text-black transition duration-300\" />\n            <p className=\"font-inter font-medium text-sm text-gray-700 group-hover:text-black transition duration-300\">\n              About\n            </p>\n          </div>\n\n          {/* Links Link */}\n          <div\n            className=\"flex gap-2 items-center p-2 rounded hover:bg-gray-200 cursor-pointer transition duration-300 group\"\n            onClick={() => handleLinks(\"links\")}\n          >\n            <AiOutlineLink className=\"text-lg text-black group-hover:text-black transition duration-300\" />\n            <p className=\"font-inter font-medium text-sm text-gray-700 group-hover:text-black transition duration-300\">\n              Links\n            </p>\n          </div>\n\n          {/* Links View */}\n          {/*<div*/}\n          {/*  className=\"flex gap-2 items-center p-2 rounded hover:bg-gray-200 cursor-pointer transition duration-300 group\"*/}\n          {/*  onClick={() => handleLinks(\"linkView\")}*/}\n          {/*>*/}\n          {/*  <AiOutlineLink className=\"text-lg text-black group-hover:text-black transition duration-300\" />*/}\n          {/*  <p className=\"font-inter font-medium text-sm text-gray-700 group-hover:text-black transition duration-300\">*/}\n          {/*    Links View*/}\n          {/*  </p>*/}\n          {/*</div>*/}\n        </div>\n\n        {/* Section: Lead Capture */}\n        {/*<div className=\"flex flex-col w-full gap-2\">*/}\n        {/*  <h3 className=\"pl-3 font-inter font-semibold text-xl text-gray-600 uppercase\">*/}\n        {/*    Lead Capture*/}\n        {/*  </h3>*/}\n\n        {/*  /!* Lead Capture Form *!/*/}\n        {/*  <div className=\"flex gap-2 items-center p-2 rounded hover:bg-gray-200 cursor-pointer transition duration-300 group\">*/}\n        {/*    <RiFilterLine className=\"text-lg text-black group-hover:text-black transition duration-300\" />*/}\n        {/*    <p className=\"font-inter font-medium text-sm text-gray-700 group-hover:text-black transition duration-300\">*/}\n        {/*      Lead Capture Form*/}\n        {/*    </p>*/}\n        {/*  </div>*/}\n\n        {/*  /!* Follow Up Email *!/*/}\n        {/*  <div className=\"flex gap-2 items-center p-2 rounded hover:bg-gray-200 cursor-pointer transition duration-300 group\">*/}\n        {/*    <MdOutlineEmail className=\"text-lg text-black group-hover:text-black transition duration-300\" />*/}\n        {/*    <p className=\"font-inter font-medium text-sm text-gray-700 group-hover:text-black transition duration-300\">*/}\n        {/*      Follow Up Email*/}\n        {/*    </p>*/}\n        {/*  </div>*/}\n        {/*</div>*/}\n\n        {/* Section: QR Code */}\n        {/*<div className=\"flex flex-col w-full gap-2\">*/}\n        {/*  <h3 className=\"pl-3 font-inter font-semibold text-xl text-gray-600 uppercase\">*/}\n        {/*    QR Code*/}\n        {/*  </h3>*/}\n\n        {/*  /!* QR Code *!/*/}\n        {/*  <div className=\"flex gap-2 items-center p-2 rounded hover:bg-gray-200 cursor-pointer transition duration-300 group\">*/}\n        {/*    <MdOutlineQrCode2 className=\"text-lg text-black group-hover:text-black transition duration-300\" />*/}\n        {/*    <p className=\"font-inter font-medium text-sm text-gray-700 group-hover:text-black transition duration-300\">*/}\n        {/*      QR Code*/}\n        {/*    </p>*/}\n        {/*  </div>*/}\n\n        {/*  /!* Follow Up Email *!/*/}\n        {/*  <div className=\"flex gap-2 items-center p-2 rounded hover:bg-gray-200 cursor-pointer transition duration-300 group\">*/}\n        {/*    <MdOutlineEmail className=\"text-lg text-black group-hover:text-black transition duration-300\" />*/}\n        {/*    <p className=\"font-inter font-medium text-sm text-gray-700 group-hover:text-black transition duration-300\">*/}\n        {/*      Follow Up Email*/}\n        {/*    </p>*/}\n        {/*  </div>*/}\n        {/*</div>*/}\n      </div>\n    </nav>\n  );\n};\n\nexport default ProfileNav;\n","import React, {useState, useRef, useEffect} from \"react\";\nimport {Button, Input, TextArea} from \"../form\";\nimport {useForm} from \"react-hook-form\";\nimport {RxAvatar} from \"react-icons/rx\";\nimport {IoInformationCircleOutline} from \"react-icons/io5\";\nimport {MdColorize, MdOutlinePhotoLibrary, MdCancel} from \"react-icons/md\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {\n    profileCoverUpdate,\n    photoUpdate,\n    setThemeColor as updateThemeColor,\n    setTextColor as updateTextColor,\n    setProfileViewData, setProfileData, setPlatform,\n} from \"../../context/slice/profileSlice\";\nimport axiosInstance from \"../../utils/axiosInstance\";\nimport {useParams} from \"react-router-dom\";\nimport imageCompression from \"browser-image-compression\";\nimport {toast} from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport {base64ToBlob} from \"../../utils/base64ToBlob\";\nimport {TiCancel} from \"react-icons/ti\";\nimport NavLink from \"../NavLink\";\nimport edit from \"../../assets/svgs/edit.svg\";\n\nconst MAX_FILE_SIZE = 6 * 1024 * 1024;\nconst About = () => {\n    const { id } = useParams();\n    const dispatch = useDispatch();\n    const { register } = useForm();\n    const userData = useSelector((state) => state.profile.profileData);\n\n    const photoInputRef = useRef(null);\n    const coverPhotoInputRef = useRef(null);\n\n    const [themeColor, setThemeColor] = useState(\"\");\n    const [textColor, setTextColor] = useState(\"\");\n    const [backgroundColors, setBackgroundColors] = useState([]);\n    const [buttonColors, setButtonColors] = useState([]);\n\n    const [loading, setLoading] = useState(false);\n    const [picData, setPicData] = useState({ photo: \"\", cover_photo: \"\" });\n    const [blobCon, setBlobCon] = useState({ photo: \"\", cover_photo: \"\" });\n    const [userProfile, setUserProfile] = useState({\n        card_title: \"\", name: \"\", company: \"\", job_title: \"\", address: \"\", bio: \"\",\n        photo: \"\", cover_photo: \"\", work_position: \"\", user_direct: 0, private: 0\n    });\n\n    useEffect(() => {\n        if (userData) {\n            setUserProfile(prev => ({ ...prev, ...userData }));\n            console.log(\"userData\", userData.photo, userData.cover_photo);\n            setPicData({ photo: userData.photo || \"\", cover_photo: userData.cover_photo || \"\" });\n            setThemeColor(userData.background_color_code);\n            dispatch(updateThemeColor(userData.background_color_code));\n            dispatch(updateTextColor(userData.button_color_code ?? \"#000000\"));\n            setTextColor(userData.button_color_code);\n            // dispatch(setProfileViewData(userData));\n        }\n    }, [userData, dispatch]);\n\n    useEffect(() => {\n        dispatch(setProfileViewData(userProfile));\n    }, [userProfile, dispatch]);\n\n    useEffect(() => {\n        const fetchBackgroundColors = async () => {\n            try {\n                const response = await axiosInstance.get(\"/backgroundColors\");\n                setBackgroundColors(response.data.Backgrounds);\n            } catch (error) {\n                console.error(\"Error fetching background colors:\", error);\n            }\n        };\n        const fetchButtonColors = async () => {\n            try {\n                const response = await axiosInstance.get(\"/buttonColors\");\n                setButtonColors(response.data.buttonColors);\n            } catch (error) {\n                console.error(\"Error fetching button colors:\", error);\n            }\n        }\n        fetchBackgroundColors();\n        fetchButtonColors();\n    }, []);\n\n    const handleFileUpload = async (e, type) => {\n        const file = e.target.files[0];\n        if (!file || file.size > MAX_FILE_SIZE) {\n            toast.error(`${type} picture size must be less than 6MB.`);\n            return;\n        }\n\n        try {\n            const compressedFile = await imageCompression(file, { maxSizeMB: 4, useWebWorker: true });\n            const reader = new FileReader();\n            reader.onloadend = () => {\n                setBlobCon(prev => ({ ...prev, [type]: base64ToBlob(reader.result) }));\n                setUserProfile(prev => ({ ...prev, [type]: reader.result }));\n            };\n            reader.readAsDataURL(compressedFile);\n        } catch (error) {\n            console.error(`Error compressing ${type} image:`, error);\n        }\n    };\n\n    const handleInputChange = (e) => {\n        setUserProfile(prev => ({ ...prev, [e.target.name]: e.target.value }));\n    };\n\n    const handleCheckChange = (e) => {\n        setUserProfile(prev => ({ ...prev, [e.target.name]: Number(e.target.checked) }));\n    };\n\n    const removeImage = (type) => {\n        setUserProfile(prev => ({ ...prev, [type]: \"\" }));\n        setPicData(prev => ({ ...prev, [type]: \"\" }));\n    };\n\n    const handleThemeColor = (id, color) => {\n        setThemeColor(id);\n        dispatch(updateThemeColor(color));\n    };\n\n    const handleTextColor = (id, color) => {\n        setTextColor(id);\n        dispatch(updateTextColor(color));\n    };\n\n    const submitUpdateProfile = async (e) => {\n        e.preventDefault();\n        setLoading(true);\n\n        const requiredFields = [\"card_title\", \"name\", \"company\", \"job_title\", \"address\", \"bio\", \"work_position\"];\n        for (const field of requiredFields) {\n            if (!userProfile[field]) {\n                toast.error(`Please enter your ${field.replace(\"_\", \" \")}`);\n                setLoading(false);\n                return;\n            }\n        }\n\n        let body = { ...userProfile, profile_id: id, branding_color: \"#d5d5d5\",\n            cover_photo: blobCon.cover_photo || undefined,\n            photo: blobCon.photo || undefined\n        };\n\n        const selectedTheme = backgroundColors.find(\n            (theme) => theme.id === themeColor || theme.color_code === themeColor\n        );\n        let selectedTextColor = buttonColors.find(\n            (theme) => theme.id === textColor || theme.color_code === textColor\n        );\n\n        if (!selectedTextColor) {\n            setTextColor(buttonColors[0].id);\n            selectedTextColor = buttonColors[0];\n        }\n        setThemeColor(selectedTheme.id);\n        setTextColor(selectedTextColor.id);\n\n        console.log('direct', userData.user_direct, userProfile.user_direct, body)\n        try {\n            const response = await axiosInstance.post(\"/updateProfile\", body);\n            if (response.status === 200) {\n                // if (userData.user_direct !== userProfile.user_direct) {\n                //     const directResponse = await axiosInstance.post(\"/profileDirect\", { profile_id: id });\n                //     console.log('directResponse', directResponse.data)\n                // }\n                // if (userData.private !== userProfile.private) {\n                //     await axiosInstance.post(\"/privateProfile\", { profile_id: id });\n                // }\n                await axiosInstance.post(\"/updateBackgroundColor\", { profile_id: id, bg_color_id: selectedTheme.id });\n                await axiosInstance.post(\"/updateButtonColor\", { profile_id: id, btn_color_id: selectedTextColor.id });\n                toast.success(response.data.message);\n                dispatch(setProfileData({ ...userProfile, cover_photo: picData.cover_photo, photo: picData.photo, background_color_code: selectedTheme.color_code, button_color_code: selectedTextColor.color_code }));\n                console.log('final', response.data)\n            }\n        } catch (error) {\n            toast.error(error.response?.data?.message || \"Error updating profile\");\n        } finally {\n            setLoading(false);\n        }\n    };\n\n\n    return (\n        <div className=\"w-full h-full lg:p-4 py-8 px-6 rounded-lg bg-white overflow-hidden\">\n            <form\n                onSubmit={submitUpdateProfile}\n                className=\"relative w-full h-full bg-white\"\n                id=\"profileEdit\"\n                encType=\"multipart/form-data\"\n            >\n                <div className=\"sticky top-0 bg-white pb-4 z-10\">\n                    <h1 className=\"font-inter font-bold text-xl\">About</h1>\n                </div>\n\n                <div className=\"h-[calc(100%-7rem)] overflow-y-auto\">\n                    <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-4 w-full pr-2\">\n                    <div className=\"w-full\">\n                        <label\n                            htmlFor=\"card-title\"\n                            className=\"block mb-2 text-sm font-medium text-gray-900\"\n                        >\n                            Card Title\n                        </label>\n                        <Input\n                            type={\"text\"}\n                            name={\"card_title\"}\n                            intent={\"primary\"}\n                            id={\"card-title\"}\n                            size={\"md\"}\n                            value={userProfile?.card_title}\n                            classes={\"w-full block p-2.5\"}\n                            roundness={\"round-sm\"}\n                            placeholder={\"Card Title\"}\n                            custom={\"custom\"}\n                            eventAction={handleInputChange}\n                        />\n                    </div>\n                    <div className=\"w-full\">\n                        <label\n                            htmlFor=\"work_position\"\n                            className=\"block mb-2 text-sm font-inter font-medium text-gray-900\"\n                        >\n                            Card Layout\n                        </label>\n                        <select\n                            onChange={handleInputChange}\n                            name=\"work_position\"\n                            value={userProfile?.work_position}\n                            className=\"w-full block px-2.5 py-3.5 font-inter outline-none bg-primary placeholder:text-sm placeholder:font-normal rounded-md\"\n                        >\n                            <option value=\"left\">Left</option>\n                            <option value=\"center\">Center</option>\n                            <option value=\"right\">Right</option>\n                        </select>\n                    </div>\n\n                    {/* Profile Picture Section */}\n                    <div className=\"flex flex-col gap-4 items-center\">\n                        {/* Title with Information Icon */}\n                        <div className=\"flex items-center gap-2\">\n                            <p className=\"font-inter text-sm font-medium text-gray-900\">\n                                Profile Picture\n                            </p>\n                            <IoInformationCircleOutline\n                                className=\"text-xl text-gray-500\"\n                                title=\"Maximum size: 2MB\"\n                            />\n                        </div>\n                        {userData?.photo && picData?.photo && (\n                            <div className=\"h-full w-full  relative\">\n                                <img\n                                    src={`${process.env.REACT_APP_SERVER}${picData.photo}`}\n                                    className=\"rounded-full h-full aspect-square w-2/5 mx-auto object-cover\"\n                                    alt=\"profile_pic\"\n                                />\n                                <MdCancel\n                                    className=\"absolute size-5 -top-2 right-1/2 -translate-x-1/2 text-red-500 bg-white rounded-full cursor-pointer\"\n                                    onClick={() => removeImage(\"photo\")}\n                                />\n                            </div>\n                        )}\n                        {/* Profile Picture Upload Area */}\n                        {userProfile.photo && !picData?.photo && (\n                            <div className=\"w-full h-full relative\">\n                                <img\n                                    src={userProfile.photo}\n                                    className=\"rounded-full h-full aspect-square mx-auto object-cover\"\n                                    alt=\"\"\n                                />\n                                <MdCancel\n                                    className=\"absolute size-5 -top-2 right-1/2 -translate-x-1/2 text-red-500 bg-white rounded-full cursor-pointer\"\n                                    onClick={() => removeImage(\"photo\")}\n                                />\n                            </div>\n                        )}\n                        {!picData.photo && !userProfile.photo && (\n                            <div\n                                onClick={() => photoInputRef.current.click()}\n                                className=\"flex justify-center items-center rounded-full w-28 h-28 border border-dashed border-gray-400 bg-white hover:bg-gray-100 transition-all cursor-pointer\"\n                            >\n                                <div className=\"flex flex-col items-center justify-center gap-1\">\n                                    <RxAvatar className=\"text-4xl text-gray-500\"/>\n                                    <p className=\"font-inter text-xs text-gray-500 text-center\">\n                                        Select or drag file\n                                    </p>\n                                </div>\n                            </div>\n                        )}\n                        <input\n                            type=\"file\"\n                            ref={photoInputRef}\n                            accept=\".jpg, .png, .jpeg\"\n                            className=\"hidden\"\n                            onChange={(e) => handleFileUpload(e, \"photo\")}\n                        />\n                    </div>\n\n                    {/* Cover Photo Section */}\n                    <div className=\"flex flex-col gap-4 items-center\">\n                        {/* Title with Information Icon */}\n                        <div className=\"flex items-center gap-2\">\n                            <p className=\"font-inter text-sm font-medium text-gray-900\">\n                                Cover Photo\n                            </p>\n                            <IoInformationCircleOutline\n                                className=\"text-xl text-gray-500\"\n                                title=\"Maximum size: 5MB\"\n                            />\n                        </div>\n                        {userData?.cover_photo && picData?.cover_photo && (\n                            <div className=\"h-full w-full relative\">\n                                <img\n                                    src={`${process.env.REACT_APP_SERVER}${picData?.cover_photo}`}\n                                    className=\"max-h-24 w-full rounded-lg object-cover\"\n                                    alt=\"cover_pic\"\n                                />\n                                <MdCancel\n                                    className=\"absolute top-0 right-0 text-red-500 bg-white rounded-full cursor-pointer\"\n                                    onClick={() => removeImage(\"cover_photo\")}\n                                />\n                            </div>\n                        )}\n                        {/* Cover Photo Upload Area */}\n                        {userProfile?.cover_photo && !picData?.cover_photo && (\n                            <div className=\"h-full w-full relative\">\n                                <img\n                                    src={userProfile?.cover_photo}\n                                    className=\"max-h-24 w-full rounded-lg object-cover\"\n                                    alt=\"cover_pic\"\n                                />\n                                <MdCancel\n                                    className=\"absolute top-0 right-0 text-red-500 bg-white rounded-full cursor-pointer\"\n                                    onClick={() => removeImage(\"cover_photo\")}\n                                />\n                            </div>\n                        )}\n                        {!picData.cover_photo && !userProfile.cover_photo && (\n                            <div\n                                onClick={() => coverPhotoInputRef.current.click()}\n                                className=\"flex items-center justify-center rounded-lg h-28 w-full border border-dashed border-gray-400 bg-white hover:bg-gray-100 transition-all cursor-pointer\"\n                            >\n                                <div className=\"flex flex-col items-center gap-2\">\n                                    <MdOutlinePhotoLibrary className=\"text-3xl text-gray-500\"/>\n                                    <p className=\"font-inter text-xs text-gray-500 text-center\">\n                                        Select image, gif, video, or drag & drop\n                                    </p>\n                                </div>\n                            </div>\n                        )}\n                        <input\n                            type=\"file\"\n                            accept=\".jpg, .png, .jpeg\"\n                            ref={coverPhotoInputRef}\n                            className=\"hidden\"\n                            onChange={(e) => handleFileUpload(e, \"cover_photo\")}\n                        />\n                    </div>\n\n                    {/* <div className=\"flex justify-center items-center  gap-4\">\n            <div className=\"flex flex-col items-start w-full gap-2\">\n              <p className=\"font-inter text-sm font-normal\">Card Name:</p>\n              <Input\n                type={\"text\"}\n                intent={\"secondary\"}\n                size={\"lg\"}\n                classes={\"w-full !p-2\"}\n                roundness={\"round-md\"}\n                nameField={\"card\"}\n                register={register}\n              />\n            </div>\n            <div className=\"flex flex-col items-start w-full gap-2\">\n              <p className=\"font-inter text-sm font-normal\">Card Name:</p>\n              <Input\n                type={\"text\"}\n                intent={\"secondary\"}\n                size={\"lg\"}\n                classes={\"w-full !p-2\"}\n                roundness={\"round-md\"}\n                nameField={\"card\"}\n                register={register}\n              />\n            </div>\n          </div>\n\n          <div className=\"flex justify-center items-center  gap-4\">\n            <div className=\"flex flex-col items-start w-full gap-2\">\n              <p className=\"font-inter text-sm font-normal\">Card Name:</p>\n              <Input\n                type={\"text\"}\n                intent={\"secondary\"}\n                size={\"lg\"}\n                classes={\"w-full !p-2\"}\n                roundness={\"round-md\"}\n                nameField={\"card\"}\n                register={register}\n              />\n            </div>\n            <div className=\"flex flex-col items-start w-full gap-2\">\n              <p className=\"font-inter text-sm font-normal\">Card Name:</p>\n              <Input\n                type={\"text\"}\n                intent={\"secondary\"}\n                size={\"lg\"}\n                classes={\"w-full !p-2\"}\n                roundness={\"round-md\"}\n                nameField={\"card\"}\n                register={register}\n              />\n            </div>\n          </div> */}\n\n                    <div className=\"w-full\">\n                        <label\n                            htmlFor=\"first-name\"\n                            className=\"block mb-2 text-sm font-medium text-gray-900\"\n                        >\n                            Name\n                        </label>\n                        <Input\n                            type={\"text\"}\n                            name={\"name\"}\n                            intent={\"primary\"}\n                            id={\"first-name\"}\n                            size={\"md\"}\n                            value={userProfile?.name}\n                            classes={\"w-full block p-2.5 \"}\n                            roundness={\"round-sm\"}\n                            placeholder={\"first name\"}\n                            custom={\"custom\"}\n                            eventAction={handleInputChange}\n                        />\n                        {/* <input\n                    type=\"text\"\n                    name=\"first-name\"\n                    id=\"first-name\"\n                    className=\"bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 dark:bg-gray-600 dark:border-gray-500 dark:placeholder-gray-400\"\n                    placeholder=\"John\"\n                    required\n                  /> */}\n                    </div>\n                  {/*  <div className=\"w-full\">*/}\n                  {/*      <label*/}\n                  {/*          htmlFor=\"last-name\"*/}\n                  {/*          className=\"block mb-2 text-sm font-medium text-gray-900\"*/}\n                  {/*      >*/}\n                  {/*          Email*/}\n                  {/*      </label>*/}\n                  {/*      <Input*/}\n                  {/*          type={\"email\"}*/}\n                  {/*          name={\"email\"}*/}\n                  {/*          intent={\"primary\"}*/}\n                  {/*          id={\"email\"}*/}\n                  {/*          size={\"md\"}*/}\n                  {/*          value={userProfile?.email}*/}\n                  {/*          classes={\"w-full block p-2.5 \"}*/}\n                  {/*          roundness={\"round-sm\"}*/}\n                  {/*          placeholder={\"Email\"}*/}\n                  {/*          custom={\"custom\"}*/}\n                  {/*          eventAction={handleInputChange}*/}\n                  {/*      />*/}\n                  {/*      /!* <input*/}\n                  {/*  type=\"text\"*/}\n                  {/*  name=\"last-name\"*/}\n                  {/*  id=\"last-name\"*/}\n                  {/*  className=\"bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 dark:bg-gray-600 dark:border-gray-500 dark:placeholder-gray-400\"*/}\n                  {/*  placeholder=\"Doe\"*/}\n                  {/*  required*/}\n                  {/*/> *!/*/}\n                  {/*  </div>*/}\n\n                    <div className=\"w-full\">\n                        <label\n                            htmlFor=\"company\"\n                            className=\"block mb-2 text-sm font-inter font-medium text-gray-900\"\n                        >\n                            Company\n                        </label>\n                        <Input\n                            type={\"text\"}\n                            name={\"company\"}\n                            intent={\"primary\"}\n                            id={\"company\"}\n                            size={\"md\"}\n                            value={userProfile.company}\n                            classes={\"w-full block p-2.5 \"}\n                            roundness={\"round-sm\"}\n                            placeholder={\"company\"}\n                            custom={\"custom\"}\n                            eventAction={handleInputChange}\n                        />\n                        {/* <input\n                    type=\"text\"\n                    name=\"last-name\"\n                    id=\"last-name\"\n                    className=\"bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 dark:bg-gray-600 dark:border-gray-500 dark:placeholder-gray-400\"\n                    placeholder=\"Doe\"\n                    required\n                  /> */}\n                    </div>\n                    <div className=\"w-full\">\n                        <label\n                            htmlFor=\"job_title\"\n                            className=\"block mb-2 text-sm font-medium text-gray-900\"\n                        >\n                            Job Title\n                        </label>\n                        <Input\n                            type={\"text\"}\n                            name={\"job_title\"}\n                            intent={\"primary\"}\n                            id={\"job_title\"}\n                            size={\"md\"}\n                            classes={\"w-full block p-2.5 \"}\n                            roundness={\"round-sm\"}\n                            placeholder={\"Job Title\"}\n                            custom={\"custom\"}\n                            value={userProfile.job_title}\n                            eventAction={handleInputChange}\n                        />\n                    </div>\n\n\n                    {/*<div className=\"w-full\">*/}\n                    {/*    <label*/}\n                    {/*        htmlFor=\"dob\"*/}\n                    {/*        className=\"block mb-2 text-sm font-medium text-gray-900\"*/}\n                    {/*    >*/}\n                    {/*        DOB*/}\n                    {/*    </label>*/}\n                    {/*    <Input*/}\n                    {/*        type={\"date\"}*/}\n                    {/*        name={\"dob\"}*/}\n                    {/*        intent={\"primary\"}*/}\n                    {/*        id={\"dob\"}*/}\n                    {/*        size={\"md\"}*/}\n                    {/*        value={userProfile.dob}*/}\n                    {/*        classes={\"w-full block p-2.5 \"}*/}\n                    {/*        roundness={\"round-sm\"}*/}\n                    {/*        placeholder={\"dob\"}*/}\n                    {/*        custom={\"custom\"}*/}\n                    {/*        eventAction={handleInputChange}*/}\n                    {/*    />*/}\n                    {/*</div>*/}\n                    {/*<div className=\"w-full\">*/}\n                    {/*    <label*/}\n                    {/*        htmlFor=\"gender\"*/}\n                    {/*        className=\"block mb-2 text-sm font-inter font-medium text-gray-900\"*/}\n                    {/*    >*/}\n                    {/*        Gender*/}\n                    {/*    </label>*/}\n                    {/*    <select*/}\n                    {/*        onChange={handleInputChange}*/}\n                    {/*        name=\"gender\"*/}\n                    {/*        className=\"w-full block px-2.5 py-3.5  font-inter outline-none bg-primary placeholder:text-sm placeholder:font-normal rounded-md\"*/}\n                    {/*    >*/}\n                    {/*        <option value={\"1\"}>Male</option>*/}\n                    {/*        <option value={\"2\"}>Female</option>*/}\n                    {/*        <option value={\"3\"}>Not Share</option>*/}\n                    {/*    </select>*/}\n                    {/*</div>*/}\n\n                    <div className=\"w-full\">\n                        <label\n                            htmlFor=\"address\"\n                            className=\"block mb-2 text-sm font-inter font-medium text-gray-900\"\n                        >\n                            Address\n                        </label>\n                        <TextArea\n                            rows={\"2\"}\n                            intent={\"primary\"}\n                            classes={\"w-full !rounded-md p-2\"}\n                            name={\"address\"}\n                            placeholder={\"Address\"}\n                            value={userProfile?.address}\n                            eventAction={handleInputChange}\n                        ></TextArea>\n                    </div>\n                    <div className=\"flex flex-col gap-2 w-full\">\n                        <label\n                            htmlFor=\"bio\"\n                            className=\"block text-sm font-inter font-medium text-gray-900\"\n                        >\n                            Bio\n                        </label>\n                        <TextArea\n                            rows={\"2\"}\n                            intent={\"primary\"}\n                            placeholder={\"Bio\"}\n                            classes={\"w-full !rounded-md p-2\"}\n                            name={\"bio\"}\n                            value={userProfile?.bio}\n                            eventAction={handleInputChange}\n                        ></TextArea>\n                    </div>\n\n                    {/* theme */}\n                    <div className=\"lg:col-span-2 flex flex-col gap-2 w-full\">\n                        <label\n                            htmlFor=\"last-name\"\n                            className=\"block mb-2 text-sm font-inter font-medium text-gray-900 \"\n                        >\n                            Choose Theme:\n                        </label>\n                        <div className=\"w-full bg-primary min-h-16 rounded-lg py-2 px-3\">\n                            <div className=\"flex flex-col gap-4\">\n                                {/* card theme */}\n                                <div\n                                    className=\"w-full rounded-lg flex lg:flex-row md:flex-row flex-col lg:gap-0 md:gap-0 gap-3 items-center justify-between bg-white border border-primary p-4\">\n                                    <label\n                                        htmlFor=\"\"\n                                        className=\"block text-sm font-inter font-medium text-gray-900 \"\n                                    >\n                                        Profile/Card Theme\n                                    </label>\n                                    <div className=\"flex items-center justify-end flex-grow gap-2\">\n                                        {backgroundColors?.map((color) => (\n                                            <div\n                                                key={color.id}\n                                                className=\"rounded-full w-6 h-6 cursor-pointer border\"\n                                                style={{ backgroundColor: color.color_code }}\n                                                onClick={() => handleThemeColor(color.id, color.color_code)}\n                                            ></div>\n                                        ))}\n                                    </div>\n                                </div>\n\n                                {/* link color */}\n                                <div\n                                    className=\"w-full rounded-lg flex flex-col gap-2 bg-white border border-primary p-4\">\n                                    <div className=\"pb-4 flex items-center justify-between\">\n                                        <label\n                                            htmlFor=\"\"\n                                            className=\"block text-sm font-inter font-medium text-gray-900 \"\n                                        >\n                                            Link Color\n                                        </label>\n                                        <div className=\"flex items-center justify-end flex-grow gap-2\">\n                                            {buttonColors?.map((color) => (\n                                                <div\n                                                    key={color.id}\n                                                    className=\"rounded-full w-6 h-6 cursor-pointer border\"\n                                                    style={{ backgroundColor: color.color_code }}\n                                                    onClick={() => handleTextColor(color.id, color.color_code)}\n                                                ></div>\n                                            ))}\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className=\"w-full bg-primary rounded-lg p-2\">\n                        <div className=\"bg-white p-1.5 rounded-lg flex items-center justify-between\">\n                            <label\n                                htmlFor=\"last-name\"\n                                className=\"block  text-sm font-inter font-medium text-gray-900\"\n                            >\n                                Card Private\n                            </label>\n                            <div>\n                                <label className=\"inline-flex items-center cursor-pointer\">\n                                    <input\n                                        type=\"checkbox\"\n                                        name=\"private\"\n                                        value={userProfile.private}\n                                        checked={userProfile.private}\n                                        className=\"sr-only peer\"\n                                        onChange={handleCheckChange}\n                                    />\n                                    <div\n                                        className=\"relative w-11 h-6 bg-gray-200 peer-focus:outline-none peer-focus:ring-4 peer-focus:ring-white  rounded-full peer peer-checked:after:translate-x-full rtl:peer-checked:after:-translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-[2px] after:start-[2px] after:bg-white after:border-gray-300 after:border after:rounded-full after:h-5 after:w-5 after:transition-all peer-checked:bg-black\"></div>\n                                </label>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"w-full bg-primary rounded-lg p-2\">\n                        <div className=\"bg-white p-1.5 rounded-lg flex items-center justify-between\">\n                            <label\n                                htmlFor=\"last-name\"\n                                className=\"block  text-sm font-inter font-medium text-gray-900\"\n                            >\n                                User Direct\n                            </label>\n                            <div>\n                                <label className=\"inline-flex items-center cursor-pointer\">\n                                    <input\n                                        type=\"checkbox\"\n                                        name=\"user_direct\"\n                                        value={userProfile.user_direct}\n                                        checked={userProfile.user_direct}\n                                        className=\"sr-only peer\"\n                                        onChange={handleCheckChange}\n                                    />\n                                    <div\n                                        className=\"relative w-11 h-6 bg-gray-200 peer-focus:outline-none peer-focus:ring-4 peer-focus:ring-white  rounded-full peer peer-checked:after:translate-x-full rtl:peer-checked:after:-translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-[2px] after:start-[2px] after:bg-white after:border-gray-300 after:border after:rounded-full after:h-5 after:w-5 after:transition-all peer-checked:bg-black\"></div>\n                                </label>\n                            </div>\n                        </div>\n                    </div>\n\n            {/*        <div className=\"lg:col-span-2 w-full flex justify-center items-center\">*/}\n            {/*            <Button*/}\n            {/*                type={\"submit\"}*/}\n            {/*                intent={\"secondary\"}*/}\n            {/*                children={\"Update\"}*/}\n            {/*                size={\"lg\"}*/}\n            {/*                roundness={\"round\"}*/}\n            {/*                classes={\"!bg-black !text-white\"}*/}\n            {/*                loading={loading}*/}\n            {/*            />*/}\n            {/*            /!* <Button*/}\n            {/*  intent={\"secondary\"}*/}\n            {/*  children={\"Cancel\"}*/}\n            {/*  size={\"lg\"}*/}\n            {/*  roundness={\"round\"}*/}\n            {/*  classes={\"!bg-black !text-white\"}*/}\n            {/*/> *!/*/}\n            {/*        </div>*/}\n\n                </div>\n                </div>\n                <div className=\"sticky bottom-0 left-0 right-0 pt-4 w-full bg-white flex justify-end items-center gap-4\">\n                    <Button\n                        intent={\"primary\"}\n                        children={\"Update\"}\n                        size={\"lg\"}\n                        loading={loading}\n                        roundness={\"round\"}\n                        classes={\"!bg-black !text-white\"}\n                    />\n                    <NavLink\n                        intent={\"secondary\"}\n                        size={\"lg\"}\n                        content={\"Cancel\"}\n                        classes={\"gap-2 !py-3 !px-6\"}\n                        href={`/dashboard`}\n                    />\n                </div>\n            </form>\n        </div>\n    );\n};\n\nexport default About;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { FaLinkedin, FaInstagram, FaFacebook } from \"react-icons/fa\";\nimport { AiOutlineGlobal, AiOutlineMail, AiOutlinePhone } from \"react-icons/ai\";\nimport { FiPlus } from \"react-icons/fi\";\nimport { Button } from \"../form\";\n\nconst AddLinksModal = ({ closeModal, openLinkInfoModal }) => {\n  const linkOptions = [\n    {\n      icon: <FaLinkedin className=\"text-2xl text-gray-600\" />,\n      name: \"LinkedIn\",\n    },\n    {\n      icon: <FaInstagram className=\"text-2xl text-gray-600\" />,\n      name: \"Instagram\",\n    },\n    {\n      icon: <FaFacebook className=\"text-2xl text-gray-600\" />,\n      name: \"Facebook\",\n    },\n    {\n      icon: <AiOutlineGlobal className=\"text-2xl text-gray-600\" />,\n      name: \"Website\",\n    },\n    {\n      icon: <AiOutlineMail className=\"text-2xl text-gray-600\" />,\n      name: \"Email\",\n    },\n    {\n      icon: <AiOutlinePhone className=\"text-2xl text-gray-600\" />,\n      name: \"Phone\",\n    },\n  ];\n\n  return ReactDOM.createPortal(\n    <div\n      id=\"authentication-modal\"\n      tabIndex=\"-1\"\n      aria-hidden=\"false\"\n      className=\"overflow-y-auto overflow-x-hidden fixed top-0 right-0 left-0 z-50 flex justify-center items-center w-full h-full bg-black bg-opacity-50\"\n    >\n      <div className=\"relative p-4 w-full max-w-lg max-h-full\">\n        <div className=\"relative bg-white rounded-lg shadow dark:bg-gray-700\">\n          <div className=\"flex items-center justify-between p-4 md:p-5 border-b rounded-t dark:border-gray-600\">\n            <h3 className=\"text-xl font-semibold text-gray-900 dark:text-white\">\n              Add Links\n            </h3>\n            <button\n              type=\"button\"\n              onClick={closeModal}\n              className=\"text-gray-400 bg-transparent hover:bg-gray-200 hover:text-gray-900 rounded-lg text-sm w-8 h-8 inline-flex justify-center items-center dark:hover:bg-gray-600 dark:hover:text-white\"\n            >\n              <svg\n                className=\"w-3 h-3\"\n                aria-hidden=\"true\"\n                xmlns=\"http://www.w3.org/2000/svg\"\n                fill=\"none\"\n                viewBox=\"0 0 14 14\"\n              >\n                <path\n                  stroke=\"currentColor\"\n                  strokeLinecap=\"round\"\n                  strokeLinejoin=\"round\"\n                  strokeWidth=\"2\"\n                  d=\"m1 1 6 6m0 0 6 6M7 7l6-6M7 7l-6 6\"\n                />\n              </svg>\n              <span className=\"sr-only\">Close modal</span>\n            </button>\n          </div>\n          <div className=\"p-4 md:p-5\">\n            <div className=\"flex flex-col gap-4 w-full\">\n              {linkOptions.map((link, index) => (\n                <div\n                  key={index}\n                  className=\"flex items-center justify-between p-4 bg-white hover:bg-gray-100 cursor-pointer rounded-lg border border-gray-300\"\n                  onClick={openLinkInfoModal}\n                >\n                  <div className=\"flex items-center gap-4\">\n                    {link.icon}\n                    <p className=\"text-base font-inter font-medium text-gray-900\">\n                      {link.name}\n                    </p>\n                  </div>\n                  <FiPlus className=\"text-xl text-gray-600\" />\n                </div>\n              ))}\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>,\n    document.body\n  );\n};\n\nexport default AddLinksModal;\n","import React, { useState } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Button, Input } from \"../form\";\n\nconst AddLinkInfoModal = ({ closeModal, selectedLink }) => {\n  const [form, setForm] = useState({\n    linkTitle: selectedLink?.name || \"\",\n    linkURL: \"\",\n  });\n\n  const handleInputChange = (e) => {\n    const { name, value } = e.target;\n    setForm({ ...form, [name]: value });\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    // Handle form submission logic here, such as saving the link\n  };\n\n  return ReactDOM.createPortal(\n    <div\n      id=\"authentication-modal\"\n      tabIndex=\"-1\"\n      aria-hidden=\"false\"\n      className=\"overflow-y-auto overflow-x-hidden fixed top-0 right-0 left-0 z-50 flex justify-center items-center w-full h-full bg-black bg-opacity-50\"\n    >\n      <div className=\"relative p-4 w-full max-w-lg max-h-full\">\n        <div className=\"relative bg-white rounded-lg shadow dark:bg-gray-700\">\n          <div className=\"flex items-center justify-between p-4 md:p-5 border-b rounded-t dark:border-gray-600\">\n            <h3 className=\"text-xl font-semibold text-gray-900 dark:text-white\">\n              Add Link Information\n            </h3>\n            <button\n              type=\"button\"\n              onClick={closeModal}\n              className=\"text-gray-400 bg-transparent hover:bg-gray-200 hover:text-gray-900 rounded-lg text-sm w-8 h-8 inline-flex justify-center items-center dark:hover:bg-gray-600 dark:hover:text-white\"\n            >\n              <svg\n                className=\"w-3 h-3\"\n                aria-hidden=\"true\"\n                xmlns=\"http://www.w3.org/2000/svg\"\n                fill=\"none\"\n                viewBox=\"0 0 14 14\"\n              >\n                <path\n                  stroke=\"currentColor\"\n                  strokeLinecap=\"round\"\n                  strokeLinejoin=\"round\"\n                  strokeWidth=\"2\"\n                  d=\"m1 1 6 6m0 0 6 6M7 7l6-6M7 7l-6 6\"\n                />\n              </svg>\n              <span className=\"sr-only\">Close modal</span>\n            </button>\n          </div>\n          <div className=\"p-4 md:p-5\">\n            <form onSubmit={handleSubmit} className=\"space-y-4\">\n              <div className=\"flex items-center gap-4\">\n                {selectedLink?.icon}\n                <h4 className=\"text-lg font-inter font-medium text-gray-900\">\n                  {selectedLink?.name}\n                </h4>\n              </div>\n              <div className=\"w-full\">\n                <label\n                  htmlFor=\"link-title\"\n                  className=\"block mb-2 text-sm font-medium text-gray-900 dark:text-white\"\n                >\n                  Link Title\n                </label>\n                <Input\n                  type={\"text\"}\n                  nameField={\"linkTitle\"}\n                  intent={\"primary\"}\n                  id={\"link-title\"}\n                  size={\"md\"}\n                  classes={\"w-full block p-2.5 \"}\n                  roundness={\"round-sm\"}\n                  custom={\"custom\"}\n                />\n              </div>\n              <div className=\"w-full\">\n                <label\n                  htmlFor=\"link-url\"\n                  className=\"block mb-2 text-sm font-medium text-gray-900 dark:text-white\"\n                >\n                  Link URL\n                </label>\n                <Input\n                  type={\"url\"}\n                  nameField={\"linkURL\"}\n                  intent={\"primary\"}\n                  id={\"link-url\"}\n                  size={\"md\"}\n                  classes={\"w-full block p-2.5 \"}\n                  roundness={\"round-sm\"}\n                  custom={\"custom\"}\n                  placeholder={\"https://example.com\"}\n                />\n              </div>\n              <div className=\"flex justify-end gap-4\">\n                <Button\n                  intent={\"secondary\"}\n                  children={\"Cancel\"}\n                  size={\"md\"}\n                  roundness={\"round\"}\n                  classes={\"\"}\n                  onClick={closeModal}\n                />\n                <Button\n                  intent={\"primary\"}\n                  children={\"Add\"}\n                  size={\"lg\"}\n                  roundness={\"round\"}\n                  classes={\"!bg-blue-500 !text-white\"}\n                  type={\"submit\"}\n                />\n              </div>\n            </form>\n          </div>\n        </div>\n      </div>\n    </div>,\n    document.body\n  );\n};\n\nexport default AddLinkInfoModal;\n","import React, { useEffect, useState } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Button, Input } from \"../form\";\nimport axiosInstance from \"../../utils/axiosInstance\";\nimport { toast } from \"react-toastify\";\nimport {useDispatch} from \"react-redux\";\nimport {pushPlatform} from \"../../context/slice/profileSlice\";\n\nconst AddLinkBaseModal = ({ closeModal, data, id, handleUpdate }) => {\n  const [updateLink, setUpdateLink] = useState(\"\");\n  const [pathLink, setPathLink] = useState(\"\");\n  const dispatch = useDispatch();\n\n  const extractUsername = (url) => {\n    const lastSlashIndex = url.lastIndexOf(\"/\");\n    return url.substring(lastSlashIndex + 1);\n  };\n\n  const handleUpdateLink = (e) => {\n    const path = e.target.value;\n    // const path = pathInput.replace(data?.baseUrl, \"\");\n    // setPathLink(pathInput);\n    setUpdateLink(path);\n    const username = extractUsername(path);\n    setPathLink(username);\n  };\n\n  useEffect(() => {\n    if (data?.baseUrl) {\n      setUpdateLink(data?.baseUrl);\n    }\n    if (data?.path) {\n      setUpdateLink(data?.baseUrl + data?.path);\n    }\n  }, [data?.baseUrl, data?.path]);\n\n  const submitUpdateLink = async (e) => {\n    e.preventDefault();\n    try {\n      const response = await axiosInstance.post(\"/addPlatform\", {\n        platform_id: data?.id,\n        path: pathLink.replace(data?.baseUrl, \"\"),\n        profile_id: id,\n      });\n      if (response.status === 200) {\n        dispatch(pushPlatform({\n          id: data?.id,\n          icon: data?.img,\n          path: pathLink.replace(data?.baseUrl, \"\"),\n        }))\n        toast.success(response.data.message, {\n          position: \"bottom-right\",\n          autoClose: 5000,\n          hideProgressBar: true,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined,\n          theme: \"light\",\n        });\n        handleUpdate();\n        closeModal();\n      }\n    } catch (error) {\n      toast.error(error.response.data.message, {\n        position: \"bottom-right\",\n        autoClose: 5000,\n        hideProgressBar: true,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined,\n        theme: \"light\",\n      });\n    }\n  };\n\n  return ReactDOM.createPortal(\n    <div\n      id=\"authentication-modal\"\n      tabIndex=\"-1\"\n      aria-hidden=\"false\"\n      className=\"overflow-y-auto overflow-x-hidden fixed top-0 right-0 left-0 z-50 flex justify-center items-center w-full h-full bg-black bg-opacity-50\"\n    >\n      <div className=\"relative p-4 w-full max-w-[320px] max-h-full\">\n        <div className=\"relative bg-white rounded-lg shadow \">\n          <div className=\"flex items-center justify-between p-4 md:p-5 border-b rounded-t dark:border-gray-600\">\n            <h3 className=\"text-xl font-semibold text-gray-900 dark:text-gray-900\">\n              Add Link\n            </h3>\n            <button\n              type=\"button\"\n              onClick={closeModal}\n              className=\"text-gray-400 bg-transparent hover:bg-gray-200 hover:text-gray-900 rounded-lg text-sm w-8 h-8 inline-flex justify-center items-center dark:hover:bg-gray-900 dark:hover:text-white\"\n            >\n              <svg\n                className=\"w-3 h-3\"\n                aria-hidden=\"true\"\n                xmlns=\"http://www.w3.org/2000/svg\"\n                fill=\"none\"\n                viewBox=\"0 0 14 14\"\n              >\n                <path\n                  stroke=\"currentColor\"\n                  strokeLinecap=\"round\"\n                  strokeLinejoin=\"round\"\n                  strokeWidth=\"2\"\n                  d=\"m1 1 6 6m0 0 6 6M7 7l6-6M7 7l-6 6\"\n                />\n              </svg>\n              <span className=\"sr-only\">Close modal</span>\n            </button>\n          </div>\n          <div className=\"p-4 md:p-5\">\n            <form\n              onSubmit={submitUpdateLink}\n              className=\"space-y-4 text-center w-full\"\n            >\n              <div className=\"flex justify-center items-center size-10 rounded-full bg-tertiary-green-30 mx-auto\">\n                <img\n                  src={`${process.env.REACT_APP_SERVER}${data.img}`}\n                  className=\"size-6\"\n                  alt=\"\"\n                />\n              </div>\n              <h1 className=\"text-black dark:text-black\">\n                Add {data.title} Link\n              </h1>\n              <div>\n                <Input\n                  intent={\"primary\"}\n                  size={\"lg\"}\n                  roundness={\"round-md\"}\n                  label={\"Link Title\"}\n                  placeholder={\n                    data?.baseUrl ? data?.baseUrl : \"Enter your base\"\n                  }\n                  custom={\"custom\"}\n                  classes={\"w-full\"}\n                  name={\"link\"}\n                  value={updateLink}\n                  eventAction={handleUpdateLink}\n                />\n              </div>\n\n              <Button\n                intent={\"primary\"}\n                size={\"lg\"}\n                roundness={\"round\"}\n                children={\"Add\"}\n                classes={\"!w-1/2 !p-2 !mx-auto\"}\n              />\n            </form>\n          </div>\n        </div>\n      </div>\n    </div>,\n    document.body\n  );\n};\n\nexport default AddLinkBaseModal;\n","import React, { useState, useEffect } from \"react\";\nimport { FiPlus, FiEdit } from \"react-icons/fi\";\nimport { useSelector } from \"react-redux\";\nimport AddLinksModal from \"../modal/AddLinksModal\";\nimport AddLinkInfoModal from \"../modal/AddLinkInfoModal\";\nimport axiosInstance from \"../../utils/axiosInstance\";\nimport { useParams } from \"react-router-dom\";\nimport AddLinkBaseModal from \"../modal/AddLinkBaseModal\";\nimport { toast } from \"react-toastify\";\n\nconst Link = () => {\n  const { id } = useParams();\n  const [isOpenModal, setIsOpenModal] = useState(false);\n  const [isLinkInfoOpenModal, setIsLinkInfoOpenModal] = useState(false);\n  const [addLinkOpenModal, setAddLinkOpenModal] = useState(false);\n  const [addLinkData, setAddLinkData] = useState({\n    id: \"\",\n    title: \"\",\n    img: \"\",\n    baseUrl: \"\",\n  });\n  const [links, setLinks] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [update, setUpdate] = useState(true);\n\n  const userData = useSelector((state) => state?.auth);\n  // const handleSelectColor = (color) => {\n  //   dispatch(selectColor(color));\n  // };\n\n  // const handleLinkSelectColor = (color) => {\n  //   dispatch(selectLinkColor(color));\n  // };\n\n  // const togglePicker = () => {\n  //   setPickerOpen(!isPickerOpen);\n  // };\n\n  const handleAddLink = () => {\n    setIsOpenModal(true);\n  };\n\n  const handleCloseModal = () => {\n    setIsOpenModal(false);\n  };\n\n  const handleAddInfo = () => {\n    setIsLinkInfoOpenModal(true);\n  };\n\n  const handleCloseModalLink = () => {\n    setIsLinkInfoOpenModal(false);\n  };\n\n  async function getLinks() {\n    try {\n      const response = await axiosInstance.post(\"/categories\", {\n        profile_id: id,\n      });\n      const { categories } = response.data;\n      // const value = categories[0];\n      setLinks(categories);\n      setLoading(false);\n    } catch (error) {\n      setLoading(true);\n      toast.error(error.response.data.message, {\n        position: \"bottom-right\",\n        autoClose: 5000,\n        hideProgressBar: true,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined,\n        theme: \"light\",\n      });\n    }\n  }\n\n  useEffect(() => {\n    getLinks();\n  }, [update]);\n\n  const handleAddBaseLink = (id, title, img, baseUrl, path) => {\n    setAddLinkOpenModal(true);\n    setAddLinkData((prev) => ({\n      ...prev,\n      id: id,\n      title: title,\n      img: img,\n      baseUrl: baseUrl,\n      path: path,\n    }));\n  };\n\n  const handleCloseLinkBaseModal = async () => {\n    setAddLinkOpenModal(false);\n    setLoading(true);\n    await getLinks();\n  };\n\n  const handleUpdate = () => {\n    setUpdate((prev) => ({\n      ...prev,\n      update: !update,\n    }));\n  };\n\n  return (\n    <section className=\"h-full flex justify-center grow bg-primary border-r-2 border-r-white\">\n      <div className=\"flex flex-col w-full p-8 bg-white rounded-lg\">\n        {/* Header */}\n        <header className=\"text-start w-full z-40 flex justify-between items-center mb-8\">\n          <h1 className=\"font-inter font-bold text-2xl\">Links</h1>\n          {/* <Button\n            intent={\"secondary\"}\n            size={\"md\"}\n            roundness={\"round\"}\n            children={\"Add Links\"}\n            classes={\"!bg-black !text-white px-4 py-2\"}\n            eventAction={handleAddLink}\n          /> */}\n        </header>\n        {isOpenModal && (\n          <AddLinksModal\n            close={handleCloseModal}\n            openLinkInfoModal={handleAddInfo}\n          />\n        )}\n        {isLinkInfoOpenModal && (\n          <AddLinkInfoModal closeModal={handleCloseModalLink} />\n        )}\n        {addLinkOpenModal && (\n          <AddLinkBaseModal\n            closeModal={handleCloseLinkBaseModal}\n            data={addLinkData}\n            id={id}\n            handleUpdate={handleUpdate}\n          />\n        )}\n        {/* Content Area */}\n        <div\n          className=\"lg:h-[520px] md:h-[420px] h-[320px] overflow-y-auto flex flex-col gap-4 w-full\"\n          id=\"linksSection\"\n        >\n          {/* Display Existing Links */}\n          <div className=\"flex flex-col gap-4 w-full\">\n            {loading ? (\n              <div className=\"space-y-4\">\n                <h2 className=\"text-lg font-inter font-medium text-gray-900 animate-pulse\">\n                  Loading...\n                </h2>\n                <div className=\"flex items-center justify-between p-4 bg-gray-100 hover:bg-gray-200 cursor-pointer rounded-lg\">\n                  <div className=\"flex items-center gap-4\">\n                    <div className=\"bg-gray-300 w-10 h-10 rounded-full animate-pulse\"></div>\n                    <p className=\"text-base font-inter font-medium text-gray-900 animate-pulse\">\n                      Loading link name...\n                    </p>\n                  </div>\n                  <div className=\"bg-gray-300 w-6 h-6 rounded-full animate-pulse\"></div>\n                </div>\n                {/* Add more divs with the same structure as needed */}\n                <div className=\"flex items-center justify-between p-4 bg-gray-100 hover:bg-gray-200 cursor-pointer rounded-lg\">\n                  <div className=\"flex items-center gap-4\">\n                    <div className=\"bg-gray-300 w-10 h-10 rounded-full animate-pulse\"></div>\n                    <p className=\"text-base font-inter font-medium text-gray-900 animate-pulse\">\n                      Loading link name...\n                    </p>\n                  </div>\n                  <div className=\"bg-gray-300 w-6 h-6 rounded-full animate-pulse\"></div>\n                </div>\n              </div>\n            ) : (\n              <>\n                {links?.map((result) => {\n                  return (\n                    <div key={result?.id} className=\"space-y-4\">\n                      <h2 className=\"text-lg font-inter font-medium text-gray-900\">\n                        {result?.name}\n                      </h2>\n\n                      {/* Email Link */}\n                      {result?.platforms\n                        ?.filter(\n                          (value) =>\n                            parseInt(value?.pro) === userData.user.is_pro\n                        )\n                        .map((data) => {\n                          return (\n                            <div\n                              key={data?.id}\n                              className=\"flex items-center justify-between p-4 bg-gray-100 hover:bg-gray-200 cursor-pointer rounded-lg\"\n                              //   onClick={() => handleEditLink(\"email\")}\n                            >\n                              <div className=\"flex items-center gap-4\">\n                                <img\n                                  src={`${process.env.REACT_APP_SERVER}${data?.icon}`}\n                                  className=\"size-5 text-center\"\n                                  alt={data?.title[0]}\n                                />\n                                {/* <AiOutlineMail className=\"text-2xl text-gray-600\" /> */}\n                                <p className=\"text-base font-inter font-medium text-gray-900\">\n                                  {data?.title}\n                                </p>\n                              </div>\n                              {data?.path ? (\n                                <FiEdit\n                                  className=\"text-xl text-gray-600\"\n                                  onClick={() =>\n                                    handleAddBaseLink(\n                                      data?.id,\n                                      data?.title,\n                                      data?.icon,\n                                      data?.baseURL,\n                                      data?.path\n                                    )\n                                  }\n                                />\n                              ) : (\n                                <FiPlus\n                                  className=\"text-xl text-gray-600\"\n                                  onClick={() =>\n                                    handleAddBaseLink(\n                                      data?.id,\n                                      data?.title,\n                                      data?.icon,\n                                      data?.baseURL\n                                    )\n                                  }\n                                />\n                              )}\n                              {/* <div className=\"rounded-full size-6 flex justify-center items-center bg-gray-400 hover:bg-gray-900\"> */}\n\n                              {/* </div> */}\n                            </div>\n                          );\n                        })}\n                    </div>\n                  );\n                })}\n              </>\n            )}\n\n            {/* Phone Link */}\n            {/* <div\n              className=\"flex items-center justify-between p-4 bg-gray-100 hover:bg-gray-200 cursor-pointer rounded-lg\"\n             \n            >\n              <div className=\"flex items-center gap-4\">\n                <AiOutlinePhone className=\"text-2xl text-gray-600\" />\n                <p className=\"text-base font-inter font-medium text-gray-900\">\n                  Phone: +123456789\n                </p>\n              </div>\n              <FiEdit className=\"text-xl text-gray-600\" />\n            </div> */}\n          </div>\n\n          {/* Suggested Links Section */}\n          {/* <div className=\"flex flex-col gap-4 w-full\">\n            <h2 className=\"text-lg font-inter font-medium text-gray-900\">\n              Suggested Links\n            </h2>\n\n            <div className=\"flex items-center justify-between p-4 bg-white hover:bg-gray-100 cursor-pointer rounded-lg border border-gray-300\">\n              <div className=\"flex items-center gap-4\">\n                <FaLinkedin className=\"text-2xl text-gray-600\" />\n                <p className=\"text-base font-inter font-medium text-gray-900\">\n                  LinkedIn\n                </p>\n              </div>\n              <FiPlus className=\"text-xl text-gray-600\" />\n            </div>\n\n            <div className=\"flex items-center justify-between p-4 bg-white hover:bg-gray-100 cursor-pointer rounded-lg border border-gray-300\">\n              <div className=\"flex items-center gap-4\">\n                <AiOutlineGlobal className=\"text-2xl text-gray-600\" />\n                <p className=\"text-base font-inter font-medium text-gray-900\">\n                  Website\n                </p>\n              </div>\n              <FiPlus className=\"text-xl text-gray-600\" />\n            </div>\n          </div> */}\n        </div>\n        {/*<footer className=\" p-4 w-full  bg-white flex justify-end items-center gap-4\">*/}\n        {/*  <Button*/}\n        {/*    intent={\"secondary\"}*/}\n        {/*    children={\"Update\"}*/}\n        {/*    size={\"lg\"}*/}\n        {/*    roundness={\"round\"}*/}\n        {/*    classes={\"!bg-black !text-white\"}*/}\n        {/*  />*/}\n        {/*  <Button*/}\n        {/*    intent={\"secondary\"}*/}\n        {/*    children={\"Cancel\"}*/}\n        {/*    size={\"lg\"}*/}\n        {/*    roundness={\"round\"}*/}\n        {/*    classes={\"!bg-black !text-white\"}*/}\n        {/*  />*/}\n        {/*</footer>*/}\n      </div>\n    </section>\n  );\n};\n\nexport default Link;\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport About from \"./About\";\nimport Link from \"./Link\";\n\nconst ProfileEd = () => {\n  const linkData = useSelector((state) => state.profile.sectionLnk);\n\n  return (\n    <div className={`w-full lg:w-[55%] overflow-hidden rounded-2xl`}>\n      {linkData === \"about\" && <About />}\n      {linkData === \"links\" && <Link />}\n      {/* {linkData === \"linkView\" && <LinkView />} */}\n    </div>\n  );\n};\n\nexport default ProfileEd;\n","import React, { useEffect, useState } from \"react\";\nimport avatar from \"../../assets/svgs/avatar.svg\";\nimport { ReactSVG } from \"react-svg\";\nimport { useSelector } from \"react-redux\";\nimport {Button} from \"../form\";\n\nconst ProfileViewCard = () => {\n  const userData = useSelector((state) => state.profile.profileViewData);\n  const userPlatforms = useSelector((state) => state.profile.platforms);\n  const selectedThemeColor = useSelector((state) => state.profile.themeColor);\n  const selectedTextColor = useSelector((state) => state.profile.textColor);\n  const [layout, setLayout] = useState(\"center\");\n\n  console.log(userData, 'userData');\n  const [photoData, setProfilePicData] = useState({\n    url: \"\",\n    base64Str: \"\",\n  });\n\n  const [coverPhotoData, setCoverPicData] = useState({\n    url: \"\",\n    base64Str: \"\",\n  });\n\n  useEffect(() => {\n    setLayout(userData?.work_position ?? \"center\");\n    if (userData?.photo) {\n      if (userData?.photo.startsWith(\"data:image/\")) {\n        setProfilePicData((prev) => ({\n          ...prev,\n          base64Str: userData.photo,\n        }));\n      }\n      if (userData?.photo.startsWith(\"uploads/\")) {\n        setProfilePicData((prev) => ({\n          ...prev,\n          url: userData.photo,\n        }));\n      }\n    }\n    if (userData?.cover_photo) {\n      if (userData?.cover_photo.startsWith(\"data:image/\")) {\n        setCoverPicData((prev) => ({\n          ...prev,\n          base64Str: userData.cover_photo,\n        }));\n      }\n      if (userData?.cover_photo.startsWith(\"uploads/\")) {\n        setCoverPicData((prev) => ({\n          ...prev,\n          url: userData.cover_photo,\n        }));\n      }\n    }\n  }, [userData]);\n\n  // console.log(photoData, 'photoData');\n  //   console.log(coverPhotoData, 'coverPhotoData');\n\n  return (\n    <div className=\"space-y-4 h-full\">\n\n      <div className={`w-full rounded-t-3xl shadow-lg border`} style={{ background: selectedThemeColor }}>\n        <div className=\"h-32 relative\">\n          <div className={\"w-full h-full rounded-t-3xl\"}>\n            {userData?.cover_photo ? (\n                  <>\n                    {coverPhotoData?.base64Str ? (\n                        <img\n                            src={userData?.cover_photo}\n                            className=\"w-full h-full rounded-t-3xl object-cover\"\n                            alt=\"cover-pic\"\n                        />\n                    ) : coverPhotoData?.url ? (\n                        <img\n                            src={`${process.env.REACT_APP_SERVER}${coverPhotoData.url}`}\n                            className=\"w-full h-full rounded-t-3xl object-cover\"\n                            alt=\"cover-pic\"\n                        />\n                    ) : (\n                        <div className=\"w-full h-full bg-gray-500 rounded-t-3xl\"></div>\n                    )}\n                  </>\n              ) :\n              <div className=\"w-full h-full bg-tertiary-gray-700 rounded-t-3xl\"></div>\n            }\n          </div>\n          <div className={`absolute ${layout === 'left' ? 'left-4'\n              : (layout === 'right' ? 'right-4' : 'left-1/2 -translate-x-1/2') } -bottom-1/2 w-[40%] aspect-square overflow-hidden rounded-full border-white border-4`}>\n            {userData?.photo ? (\n                <>\n                  {photoData.base64Str ? (\n                      <img\n                          src={userData.photo}\n                          className=\"rounded-full w-full h-full object-cover\"\n                          alt=\"profile\"\n                      />\n                  ) : photoData?.url ? (\n                      <img\n                          src={`${process.env.REACT_APP_SERVER}${photoData.url}`}\n                          className=\"rounded-full w-full h-full object-cover\"\n                          alt=\"profile\"\n                      />\n                  ) : (\n                      <ReactSVG src={avatar} />\n                  )}\n                </>\n            ) : (\n                <div className=\"w-full h-full flex items-center justify-center bg-gray-100\">\n                  <img src={avatar} alt=\"\" className={\"w-1/2\"}/>\n                </div>\n            )}\n          </div>\n        </div>\n        <div className={`w-full flex flex-col \n            ${layout === 'left' ? 'justify-start items-start text-left' \n            : (layout === 'right' ? 'justify-end items-end text-right' : 'justify-center items-center text-center') }\n             mt-20 px-4`}>\n          <h3 style={{ color: selectedTextColor }}>{userData?.name}</h3>\n          <p style={{ color: selectedTextColor }}>{userData?.job_title}</p>\n          <p style={{ color: selectedTextColor }}>{userData?.company}</p>\n          <p style={{ color: selectedTextColor }}>{userData?.address}</p>\n          <p style={{ color: selectedTextColor }} className={`break-all mt-1`}>{userData?.bio}</p>\n        </div>\n        <div className={\"w-full flex justify-center items-center mt-4 px-4\"}>\n          <Button\n              style={{ background: selectedTextColor, color: 'white', borderColor: selectedTextColor }}\n              intent={\"secondary\"}\n              children={\"Update\"}\n              size={\"md\"}\n              roundness={\"round\"}\n              classes={`w-full`}\n          />\n        </div>\n        <div className={\n          layout === 'left' ? 'w-full flex flex-col items-start text-left gap-2 px-4 my-4' : layout === 'right' ? 'w-full flex flex-col items-end text-right gap-2 px-4 my-4' : 'w-full flex flex-wrap items-center justify-center gap-2 px-4 my-4'\n        }>\n          {userPlatforms?.map((platform, index) => (\n              <div key={index}\n                   className={\n                     layout === 'left' ? 'w-full flex flex-row items-center justify-start gap-2' : layout === 'right' ? 'w-full flex flex-row-reverse items-center justify-start gap-2' : 'flex flex-col items-center justify-center gap-2'\n                   }\n                   style={{ width: layout === 'center' ? 'calc(33.33% - 8px)' : '100%' }}>\n                <div style={{ width: layout === 'center' ? '100%' : '80px' }}>\n                  <img className=\"w-full\" src={`${process.env.REACT_APP_SERVER}${platform.icon}`} alt={platform.title}/>\n                </div>\n                <p className={`font-inter text-base font-normal`} style={{ color: selectedTextColor }}>\n                  {platform.label ?? platform.title}\n                </p>\n              </div>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ProfileViewCard;\n","import React from \"react\";\nimport ProfileViewCard from \"./ProfileViewCard\";\nimport { CiShare1 } from \"react-icons/ci\";\nimport {BsShare} from \"react-icons/bs\";\nimport {Link} from \"react-router-dom\";\n\nconst ProfileView = () => {\n  return (\n    <section\n      className=\"w-full lg:w-3/12 lg:col-span-2 justify-center overflow-y-auto\"\n      id=\"profileView\"\n    >\n      <div className=\"w-full flex-col gap-4 py-4 h-full\">\n        <div className=\"flex flex-col gap-4 text-center mb-2\">\n          <div className=\"text-start w-full\">\n            <h1 className=\"font-inter font-bold text-xl\">\n              Card live preview\n            </h1>\n          </div>\n          <Link className=\"font-normal text-md text-blue-400\" to={\"\"}>\n            View Card <CiShare1 className=\"font-extrabold text-base inline-block\" />\n          </Link>\n        </div>\n        <ProfileViewCard />\n      </div>\n    </section>\n  );\n};\n\nexport default ProfileView;\n","import React from \"react\";\nimport ProfileNav from \"./ProfileNav\";\nimport ProfileEd from \"./ProfileEd\";\nimport ProfileView from \"./ProfileView\";\n\nconst ProfileEdit = () => {\n  return (\n    <section className=\"w-full h-full lg:h-[calc(100vh-100px)] flex flex-col lg:flex-row gap-4 rounded-2xl bg-primary p-4\">\n        <ProfileNav />\n        <ProfileEd />\n        <ProfileView />\n    </section>\n  );\n};\n\nexport default ProfileEdit;\n","import React from \"react\";\nimport { ReactSVG } from \"react-svg\";\nimport avatar from \"../../assets/svgs/avatar.svg\";\nimport { Button } from \"../form\";\nimport edit from \"../../assets/svgs/edit.svg\";\nimport NavLink from \"../NavLink\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {sectionLink, setPlatform, setProfileData} from \"../../context/slice/profileSlice\";\n\nconst ProfileCard = (result) => {\n  console.log(\"result\", result);\n  const profileId = useSelector((state) => state.profile.profileId);\n  const dispatch = useDispatch();\n  const profileDataDispatch = (data) => {\n    dispatch(sectionLink(\"about\"));\n    dispatch(setProfileData(data));\n    dispatch(setPlatform(data.platforms));\n  };\n\n  return (\n    <div\n      key={result?.id}\n      className={`bg-primary  p-4 rounded-2xl relative flex flex-col justify-between ${\n        Number(profileId) === result?.id\n          ? \"border border-tertiary-green-50\"\n          : \"\"\n      }`}\n    >\n      <div className=\"bg-tertiary-gray-700 rounded-t-2xl w-full h-32\">\n      {result.cover_photo && (\n          <img\n              src={`${process.env.REACT_APP_SERVER}${result.cover_photo}`}\n              className=\"w-full h-32 rounded-t-2xl object-cover\"\n              alt=\"cover_photo\"\n          />\n      )}\n      </div>\n      {result.photo && (\n          <img\n              src={`${process.env.REACT_APP_SERVER}${result.photo}`}\n          className=\"size-20 rounded-full border border-secondary object-cover flex justify-center items-center z-40 absolute top-24 left-1/2 transform -translate-x-1/2\"\n          alt=\"profile\"\n        />\n      )}\n      {!result.photo && (\n        <div className=\"size-20 rounded-full border border-secondary bg-primary flex justify-center items-center z-40 absolute top-24 left-1/2 transform -translate-x-1/2\">\n          <ReactSVG src={avatar} />\n        </div>\n      )}\n      <div className=\"flex flex-col justify-center items-center gap-2 mt-12\">\n        <h3 className=\"font-inter font-semibold text-lg\">{result?.name}</h3>\n        <p className=\"font-inter font-normal text-base\">{result?.job_title}</p>\n        <div className=\"flex gap-2 items-center\">\n          <Button\n            type={\"button\"}\n            intent={\"primary\"}\n            size={\"md\"}\n            children={\"Share\"}\n            classes={\"\"}\n          />\n\n          <NavLink\n            intent={\"secondary\"}\n            size={\"md\"}\n            content={\"Edit\"}\n            classes={\"gap-2\"}\n            iconLeft={edit}\n            href={`/profile/${result?.id}`}\n            eventAction={() => profileDataDispatch(result)}\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ProfileCard;\n","import React from \"react\";\nimport { IoMdAdd } from \"react-icons/io\";\n\nconst AddProfileCard = () => {\n  return (\n    <div className=\"bg-primary  p-4 rounded-2xl relative flex flex-col gap-2 justify-center items-center\">\n      <div className=\"bg-gradient-to-t from-tertiary-green-60 to-tertiary-green-70 size-16 rounded-full flex justify-center items-center\">\n        <IoMdAdd className=\"size-8\" />\n      </div>\n      <p className=\"font-inter font-medium text-lg text-center\">New Card</p>\n    </div>\n  );\n};\n\nexport default AddProfileCard;\n","export const base64ToBlob = (base64, mimeType = \"image/jpeg\") => {\n  // Split the base64 string to handle the data URL format\n  const byteString = atob(base64.split(\",\")[1]); // Decode base64 string\n  const arrayBuffer = new ArrayBuffer(byteString.length); // Create an ArrayBuffer\n  const uint8Array = new Uint8Array(arrayBuffer); // Create a typed array\n\n  // Fill the typed array with the binary data\n  for (let i = 0; i < byteString.length; i++) {\n    uint8Array[i] = byteString.charCodeAt(i);\n  }\n\n  // Create and return a Blob with the specified MIME type\n  return new Blob([uint8Array], { type: mimeType });\n};\n"],"names":["ProfileNav","dispatch","useDispatch","handleLinks","link","sectionLink","_jsx","className","id","children","_jsxs","onClick","CiUser","AiOutlineLink","About","useParams","register","useForm","userData","useSelector","state","profile","profileData","photoInputRef","useRef","coverPhotoInputRef","themeColor","setThemeColor","useState","textColor","setTextColor","backgroundColors","setBackgroundColors","buttonColors","setButtonColors","loading","setLoading","picData","setPicData","photo","cover_photo","blobCon","setBlobCon","userProfile","setUserProfile","card_title","name","company","job_title","address","bio","work_position","user_direct","private","useEffect","_userData$button_colo","prev","console","log","background_color_code","updateThemeColor","updateTextColor","button_color_code","setProfileViewData","async","response","axiosInstance","get","data","Backgrounds","error","fetchBackgroundColors","fetchButtonColors","handleFileUpload","e","type","file","target","files","size","toast","compressedFile","imageCompression","maxSizeMB","useWebWorker","reader","FileReader","onloadend","base64ToBlob","result","readAsDataURL","handleInputChange","value","handleCheckChange","Number","checked","removeImage","onSubmit","preventDefault","requiredFields","field","replace","body","profile_id","branding_color","undefined","selectedTheme","find","theme","color_code","selectedTextColor","post","status","bg_color_id","btn_color_id","success","message","setProfileData","_error$response","_error$response$data","encType","htmlFor","Input","intent","classes","roundness","placeholder","custom","eventAction","onChange","IoInformationCircleOutline","title","src","alt","MdCancel","current","click","RxAvatar","ref","accept","MdOutlinePhotoLibrary","TextArea","rows","map","color","style","backgroundColor","handleThemeColor","handleTextColor","Button","NavLink","content","href","_ref","closeModal","openLinkInfoModal","linkOptions","icon","FaLinkedin","FaInstagram","FaFacebook","AiOutlineGlobal","AiOutlineMail","AiOutlinePhone","ReactDOM","tabIndex","xmlns","fill","viewBox","stroke","strokeLinecap","strokeLinejoin","strokeWidth","d","index","FiPlus","document","selectedLink","form","setForm","linkTitle","linkURL","nameField","handleUpdate","updateLink","setUpdateLink","pathLink","setPathLink","baseUrl","path","platform_id","pushPlatform","img","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","label","username","url","lastSlashIndex","lastIndexOf","substring","extractUsername","Link","isOpenModal","setIsOpenModal","isLinkInfoOpenModal","setIsLinkInfoOpenModal","addLinkOpenModal","setAddLinkOpenModal","addLinkData","setAddLinkData","links","setLinks","update","setUpdate","auth","getLinks","categories","handleAddBaseLink","AddLinksModal","close","handleCloseModal","handleAddInfo","AddLinkInfoModal","handleCloseModalLink","AddLinkBaseModal","_Fragment","_result$platforms","platforms","filter","parseInt","pro","user","is_pro","FiEdit","baseURL","ProfileEd","linkData","sectionLnk","ProfileViewCard","profileViewData","userPlatforms","selectedThemeColor","layout","setLayout","photoData","setProfilePicData","base64Str","coverPhotoData","setCoverPicData","_userData$work_positi","startsWith","background","ReactSVG","avatar","borderColor","platform","_platform$label","width","ProfileView","to","CiShare1","ProfileEdit","profileId","iconLeft","edit","profileDataDispatch","setPlatform","AddProfileCard","IoMdAdd","base64","mimeType","arguments","length","byteString","atob","split","arrayBuffer","ArrayBuffer","uint8Array","Uint8Array","i","charCodeAt","Blob"],"sourceRoot":""}