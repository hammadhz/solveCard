{"version":3,"file":"static/js/58.0b2a6abb.chunk.js","mappings":"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","sources":["../node_modules/@kurkle/color/dist/color.esm.js","../node_modules/chart.js/src/helpers/helpers.core.ts","../node_modules/chart.js/src/helpers/helpers.math.ts","../node_modules/chart.js/src/helpers/helpers.collection.ts","../node_modules/chart.js/src/helpers/helpers.extras.ts","../node_modules/chart.js/src/helpers/helpers.easing.ts","../node_modules/chart.js/src/helpers/helpers.color.ts","../node_modules/chart.js/src/core/core.animations.defaults.js","../node_modules/chart.js/src/helpers/helpers.intl.ts","../node_modules/chart.js/src/core/core.ticks.js","../node_modules/chart.js/src/core/core.defaults.js","../node_modules/chart.js/src/core/core.layouts.defaults.js","../node_modules/chart.js/src/core/core.scale.defaults.js","../node_modules/chart.js/src/helpers/helpers.canvas.ts","../node_modules/chart.js/src/helpers/helpers.options.ts","../node_modules/chart.js/src/helpers/helpers.config.ts","../node_modules/chart.js/src/helpers/helpers.curve.ts","../node_modules/chart.js/src/helpers/helpers.dom.ts","../node_modules/chart.js/src/helpers/helpers.interpolation.ts","../node_modules/chart.js/src/helpers/helpers.segment.js","../node_modules/chart.js/src/core/core.animator.js","../node_modules/chart.js/src/core/core.animation.js","../node_modules/chart.js/src/core/core.animations.js","../node_modules/chart.js/src/core/core.datasetController.js","../node_modules/chart.js/src/controllers/controller.line.js","../node_modules/chart.js/src/core/core.adapters.ts","../node_modules/chart.js/src/core/core.interaction.js","../node_modules/chart.js/src/core/core.layouts.js","../node_modules/chart.js/src/platform/platform.base.js","../node_modules/chart.js/src/platform/platform.basic.js","../node_modules/chart.js/src/platform/platform.dom.js","../node_modules/chart.js/src/core/core.element.ts","../node_modules/chart.js/src/core/core.scale.autoskip.js","../node_modules/chart.js/src/core/core.scale.js","../node_modules/chart.js/src/core/core.typedRegistry.js","../node_modules/chart.js/src/core/core.registry.js","../node_modules/chart.js/src/core/core.plugins.js","../node_modules/chart.js/src/core/core.config.js","../node_modules/chart.js/src/core/core.controller.js","../node_modules/chart.js/src/platform/index.js","../node_modules/chart.js/src/elements/element.line.js","../node_modules/chart.js/src/elements/element.point.ts","../node_modules/chart.js/src/plugins/plugin.title.js","../node_modules/chart.js/src/plugins/plugin.subtitle.js","../node_modules/chart.js/src/plugins/plugin.tooltip.js","../node_modules/chart.js/src/scales/scale.category.js","../node_modules/chart.js/src/scales/scale.linearbase.js","../node_modules/chart.js/src/scales/scale.linear.js","../node_modules/chart.js/src/scales/scale.logarithmic.js","../node_modules/chart.js/src/scales/scale.radialLinear.js","../node_modules/chart.js/src/scales/scale.time.js","../node_modules/react-chartjs-2/src/utils.ts","../node_modules/react-chartjs-2/src/chart.tsx","../node_modules/react-chartjs-2/src/typedCharts.tsx"],"sourcesContent":["/*!\n * @kurkle/color v0.3.2\n * https://github.com/kurkle/color#readme\n * (c) 2023 Jukka Kurkela\n * Released under the MIT License\n */\nfunction round(v) {\n  return v + 0.5 | 0;\n}\nconst lim = (v, l, h) => Math.max(Math.min(v, h), l);\nfunction p2b(v) {\n  return lim(round(v * 2.55), 0, 255);\n}\nfunction b2p(v) {\n  return lim(round(v / 2.55), 0, 100);\n}\nfunction n2b(v) {\n  return lim(round(v * 255), 0, 255);\n}\nfunction b2n(v) {\n  return lim(round(v / 2.55) / 100, 0, 1);\n}\nfunction n2p(v) {\n  return lim(round(v * 100), 0, 100);\n}\n\nconst map$1 = {0: 0, 1: 1, 2: 2, 3: 3, 4: 4, 5: 5, 6: 6, 7: 7, 8: 8, 9: 9, A: 10, B: 11, C: 12, D: 13, E: 14, F: 15, a: 10, b: 11, c: 12, d: 13, e: 14, f: 15};\nconst hex = [...'0123456789ABCDEF'];\nconst h1 = b => hex[b & 0xF];\nconst h2 = b => hex[(b & 0xF0) >> 4] + hex[b & 0xF];\nconst eq = b => ((b & 0xF0) >> 4) === (b & 0xF);\nconst isShort = v => eq(v.r) && eq(v.g) && eq(v.b) && eq(v.a);\nfunction hexParse(str) {\n  var len = str.length;\n  var ret;\n  if (str[0] === '#') {\n    if (len === 4 || len === 5) {\n      ret = {\n        r: 255 & map$1[str[1]] * 17,\n        g: 255 & map$1[str[2]] * 17,\n        b: 255 & map$1[str[3]] * 17,\n        a: len === 5 ? map$1[str[4]] * 17 : 255\n      };\n    } else if (len === 7 || len === 9) {\n      ret = {\n        r: map$1[str[1]] << 4 | map$1[str[2]],\n        g: map$1[str[3]] << 4 | map$1[str[4]],\n        b: map$1[str[5]] << 4 | map$1[str[6]],\n        a: len === 9 ? (map$1[str[7]] << 4 | map$1[str[8]]) : 255\n      };\n    }\n  }\n  return ret;\n}\nconst alpha = (a, f) => a < 255 ? f(a) : '';\nfunction hexString(v) {\n  var f = isShort(v) ? h1 : h2;\n  return v\n    ? '#' + f(v.r) + f(v.g) + f(v.b) + alpha(v.a, f)\n    : undefined;\n}\n\nconst HUE_RE = /^(hsla?|hwb|hsv)\\(\\s*([-+.e\\d]+)(?:deg)?[\\s,]+([-+.e\\d]+)%[\\s,]+([-+.e\\d]+)%(?:[\\s,]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction hsl2rgbn(h, s, l) {\n  const a = s * Math.min(l, 1 - l);\n  const f = (n, k = (n + h / 30) % 12) => l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n  return [f(0), f(8), f(4)];\n}\nfunction hsv2rgbn(h, s, v) {\n  const f = (n, k = (n + h / 60) % 6) => v - v * s * Math.max(Math.min(k, 4 - k, 1), 0);\n  return [f(5), f(3), f(1)];\n}\nfunction hwb2rgbn(h, w, b) {\n  const rgb = hsl2rgbn(h, 1, 0.5);\n  let i;\n  if (w + b > 1) {\n    i = 1 / (w + b);\n    w *= i;\n    b *= i;\n  }\n  for (i = 0; i < 3; i++) {\n    rgb[i] *= 1 - w - b;\n    rgb[i] += w;\n  }\n  return rgb;\n}\nfunction hueValue(r, g, b, d, max) {\n  if (r === max) {\n    return ((g - b) / d) + (g < b ? 6 : 0);\n  }\n  if (g === max) {\n    return (b - r) / d + 2;\n  }\n  return (r - g) / d + 4;\n}\nfunction rgb2hsl(v) {\n  const range = 255;\n  const r = v.r / range;\n  const g = v.g / range;\n  const b = v.b / range;\n  const max = Math.max(r, g, b);\n  const min = Math.min(r, g, b);\n  const l = (max + min) / 2;\n  let h, s, d;\n  if (max !== min) {\n    d = max - min;\n    s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n    h = hueValue(r, g, b, d, max);\n    h = h * 60 + 0.5;\n  }\n  return [h | 0, s || 0, l];\n}\nfunction calln(f, a, b, c) {\n  return (\n    Array.isArray(a)\n      ? f(a[0], a[1], a[2])\n      : f(a, b, c)\n  ).map(n2b);\n}\nfunction hsl2rgb(h, s, l) {\n  return calln(hsl2rgbn, h, s, l);\n}\nfunction hwb2rgb(h, w, b) {\n  return calln(hwb2rgbn, h, w, b);\n}\nfunction hsv2rgb(h, s, v) {\n  return calln(hsv2rgbn, h, s, v);\n}\nfunction hue(h) {\n  return (h % 360 + 360) % 360;\n}\nfunction hueParse(str) {\n  const m = HUE_RE.exec(str);\n  let a = 255;\n  let v;\n  if (!m) {\n    return;\n  }\n  if (m[5] !== v) {\n    a = m[6] ? p2b(+m[5]) : n2b(+m[5]);\n  }\n  const h = hue(+m[2]);\n  const p1 = +m[3] / 100;\n  const p2 = +m[4] / 100;\n  if (m[1] === 'hwb') {\n    v = hwb2rgb(h, p1, p2);\n  } else if (m[1] === 'hsv') {\n    v = hsv2rgb(h, p1, p2);\n  } else {\n    v = hsl2rgb(h, p1, p2);\n  }\n  return {\n    r: v[0],\n    g: v[1],\n    b: v[2],\n    a: a\n  };\n}\nfunction rotate(v, deg) {\n  var h = rgb2hsl(v);\n  h[0] = hue(h[0] + deg);\n  h = hsl2rgb(h);\n  v.r = h[0];\n  v.g = h[1];\n  v.b = h[2];\n}\nfunction hslString(v) {\n  if (!v) {\n    return;\n  }\n  const a = rgb2hsl(v);\n  const h = a[0];\n  const s = n2p(a[1]);\n  const l = n2p(a[2]);\n  return v.a < 255\n    ? `hsla(${h}, ${s}%, ${l}%, ${b2n(v.a)})`\n    : `hsl(${h}, ${s}%, ${l}%)`;\n}\n\nconst map = {\n  x: 'dark',\n  Z: 'light',\n  Y: 're',\n  X: 'blu',\n  W: 'gr',\n  V: 'medium',\n  U: 'slate',\n  A: 'ee',\n  T: 'ol',\n  S: 'or',\n  B: 'ra',\n  C: 'lateg',\n  D: 'ights',\n  R: 'in',\n  Q: 'turquois',\n  E: 'hi',\n  P: 'ro',\n  O: 'al',\n  N: 'le',\n  M: 'de',\n  L: 'yello',\n  F: 'en',\n  K: 'ch',\n  G: 'arks',\n  H: 'ea',\n  I: 'ightg',\n  J: 'wh'\n};\nconst names$1 = {\n  OiceXe: 'f0f8ff',\n  antiquewEte: 'faebd7',\n  aqua: 'ffff',\n  aquamarRe: '7fffd4',\n  azuY: 'f0ffff',\n  beige: 'f5f5dc',\n  bisque: 'ffe4c4',\n  black: '0',\n  blanKedOmond: 'ffebcd',\n  Xe: 'ff',\n  XeviTet: '8a2be2',\n  bPwn: 'a52a2a',\n  burlywood: 'deb887',\n  caMtXe: '5f9ea0',\n  KartYuse: '7fff00',\n  KocTate: 'd2691e',\n  cSO: 'ff7f50',\n  cSnflowerXe: '6495ed',\n  cSnsilk: 'fff8dc',\n  crimson: 'dc143c',\n  cyan: 'ffff',\n  xXe: '8b',\n  xcyan: '8b8b',\n  xgTMnPd: 'b8860b',\n  xWay: 'a9a9a9',\n  xgYF: '6400',\n  xgYy: 'a9a9a9',\n  xkhaki: 'bdb76b',\n  xmagFta: '8b008b',\n  xTivegYF: '556b2f',\n  xSange: 'ff8c00',\n  xScEd: '9932cc',\n  xYd: '8b0000',\n  xsOmon: 'e9967a',\n  xsHgYF: '8fbc8f',\n  xUXe: '483d8b',\n  xUWay: '2f4f4f',\n  xUgYy: '2f4f4f',\n  xQe: 'ced1',\n  xviTet: '9400d3',\n  dAppRk: 'ff1493',\n  dApskyXe: 'bfff',\n  dimWay: '696969',\n  dimgYy: '696969',\n  dodgerXe: '1e90ff',\n  fiYbrick: 'b22222',\n  flSOwEte: 'fffaf0',\n  foYstWAn: '228b22',\n  fuKsia: 'ff00ff',\n  gaRsbSo: 'dcdcdc',\n  ghostwEte: 'f8f8ff',\n  gTd: 'ffd700',\n  gTMnPd: 'daa520',\n  Way: '808080',\n  gYF: '8000',\n  gYFLw: 'adff2f',\n  gYy: '808080',\n  honeyMw: 'f0fff0',\n  hotpRk: 'ff69b4',\n  RdianYd: 'cd5c5c',\n  Rdigo: '4b0082',\n  ivSy: 'fffff0',\n  khaki: 'f0e68c',\n  lavFMr: 'e6e6fa',\n  lavFMrXsh: 'fff0f5',\n  lawngYF: '7cfc00',\n  NmoncEffon: 'fffacd',\n  ZXe: 'add8e6',\n  ZcSO: 'f08080',\n  Zcyan: 'e0ffff',\n  ZgTMnPdLw: 'fafad2',\n  ZWay: 'd3d3d3',\n  ZgYF: '90ee90',\n  ZgYy: 'd3d3d3',\n  ZpRk: 'ffb6c1',\n  ZsOmon: 'ffa07a',\n  ZsHgYF: '20b2aa',\n  ZskyXe: '87cefa',\n  ZUWay: '778899',\n  ZUgYy: '778899',\n  ZstAlXe: 'b0c4de',\n  ZLw: 'ffffe0',\n  lime: 'ff00',\n  limegYF: '32cd32',\n  lRF: 'faf0e6',\n  magFta: 'ff00ff',\n  maPon: '800000',\n  VaquamarRe: '66cdaa',\n  VXe: 'cd',\n  VScEd: 'ba55d3',\n  VpurpN: '9370db',\n  VsHgYF: '3cb371',\n  VUXe: '7b68ee',\n  VsprRggYF: 'fa9a',\n  VQe: '48d1cc',\n  VviTetYd: 'c71585',\n  midnightXe: '191970',\n  mRtcYam: 'f5fffa',\n  mistyPse: 'ffe4e1',\n  moccasR: 'ffe4b5',\n  navajowEte: 'ffdead',\n  navy: '80',\n  Tdlace: 'fdf5e6',\n  Tive: '808000',\n  TivedBb: '6b8e23',\n  Sange: 'ffa500',\n  SangeYd: 'ff4500',\n  ScEd: 'da70d6',\n  pOegTMnPd: 'eee8aa',\n  pOegYF: '98fb98',\n  pOeQe: 'afeeee',\n  pOeviTetYd: 'db7093',\n  papayawEp: 'ffefd5',\n  pHKpuff: 'ffdab9',\n  peru: 'cd853f',\n  pRk: 'ffc0cb',\n  plum: 'dda0dd',\n  powMrXe: 'b0e0e6',\n  purpN: '800080',\n  YbeccapurpN: '663399',\n  Yd: 'ff0000',\n  Psybrown: 'bc8f8f',\n  PyOXe: '4169e1',\n  saddNbPwn: '8b4513',\n  sOmon: 'fa8072',\n  sandybPwn: 'f4a460',\n  sHgYF: '2e8b57',\n  sHshell: 'fff5ee',\n  siFna: 'a0522d',\n  silver: 'c0c0c0',\n  skyXe: '87ceeb',\n  UXe: '6a5acd',\n  UWay: '708090',\n  UgYy: '708090',\n  snow: 'fffafa',\n  sprRggYF: 'ff7f',\n  stAlXe: '4682b4',\n  tan: 'd2b48c',\n  teO: '8080',\n  tEstN: 'd8bfd8',\n  tomato: 'ff6347',\n  Qe: '40e0d0',\n  viTet: 'ee82ee',\n  JHt: 'f5deb3',\n  wEte: 'ffffff',\n  wEtesmoke: 'f5f5f5',\n  Lw: 'ffff00',\n  LwgYF: '9acd32'\n};\nfunction unpack() {\n  const unpacked = {};\n  const keys = Object.keys(names$1);\n  const tkeys = Object.keys(map);\n  let i, j, k, ok, nk;\n  for (i = 0; i < keys.length; i++) {\n    ok = nk = keys[i];\n    for (j = 0; j < tkeys.length; j++) {\n      k = tkeys[j];\n      nk = nk.replace(k, map[k]);\n    }\n    k = parseInt(names$1[ok], 16);\n    unpacked[nk] = [k >> 16 & 0xFF, k >> 8 & 0xFF, k & 0xFF];\n  }\n  return unpacked;\n}\n\nlet names;\nfunction nameParse(str) {\n  if (!names) {\n    names = unpack();\n    names.transparent = [0, 0, 0, 0];\n  }\n  const a = names[str.toLowerCase()];\n  return a && {\n    r: a[0],\n    g: a[1],\n    b: a[2],\n    a: a.length === 4 ? a[3] : 255\n  };\n}\n\nconst RGB_RE = /^rgba?\\(\\s*([-+.\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?(?:[\\s,/]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction rgbParse(str) {\n  const m = RGB_RE.exec(str);\n  let a = 255;\n  let r, g, b;\n  if (!m) {\n    return;\n  }\n  if (m[7] !== r) {\n    const v = +m[7];\n    a = m[8] ? p2b(v) : lim(v * 255, 0, 255);\n  }\n  r = +m[1];\n  g = +m[3];\n  b = +m[5];\n  r = 255 & (m[2] ? p2b(r) : lim(r, 0, 255));\n  g = 255 & (m[4] ? p2b(g) : lim(g, 0, 255));\n  b = 255 & (m[6] ? p2b(b) : lim(b, 0, 255));\n  return {\n    r: r,\n    g: g,\n    b: b,\n    a: a\n  };\n}\nfunction rgbString(v) {\n  return v && (\n    v.a < 255\n      ? `rgba(${v.r}, ${v.g}, ${v.b}, ${b2n(v.a)})`\n      : `rgb(${v.r}, ${v.g}, ${v.b})`\n  );\n}\n\nconst to = v => v <= 0.0031308 ? v * 12.92 : Math.pow(v, 1.0 / 2.4) * 1.055 - 0.055;\nconst from = v => v <= 0.04045 ? v / 12.92 : Math.pow((v + 0.055) / 1.055, 2.4);\nfunction interpolate(rgb1, rgb2, t) {\n  const r = from(b2n(rgb1.r));\n  const g = from(b2n(rgb1.g));\n  const b = from(b2n(rgb1.b));\n  return {\n    r: n2b(to(r + t * (from(b2n(rgb2.r)) - r))),\n    g: n2b(to(g + t * (from(b2n(rgb2.g)) - g))),\n    b: n2b(to(b + t * (from(b2n(rgb2.b)) - b))),\n    a: rgb1.a + t * (rgb2.a - rgb1.a)\n  };\n}\n\nfunction modHSL(v, i, ratio) {\n  if (v) {\n    let tmp = rgb2hsl(v);\n    tmp[i] = Math.max(0, Math.min(tmp[i] + tmp[i] * ratio, i === 0 ? 360 : 1));\n    tmp = hsl2rgb(tmp);\n    v.r = tmp[0];\n    v.g = tmp[1];\n    v.b = tmp[2];\n  }\n}\nfunction clone(v, proto) {\n  return v ? Object.assign(proto || {}, v) : v;\n}\nfunction fromObject(input) {\n  var v = {r: 0, g: 0, b: 0, a: 255};\n  if (Array.isArray(input)) {\n    if (input.length >= 3) {\n      v = {r: input[0], g: input[1], b: input[2], a: 255};\n      if (input.length > 3) {\n        v.a = n2b(input[3]);\n      }\n    }\n  } else {\n    v = clone(input, {r: 0, g: 0, b: 0, a: 1});\n    v.a = n2b(v.a);\n  }\n  return v;\n}\nfunction functionParse(str) {\n  if (str.charAt(0) === 'r') {\n    return rgbParse(str);\n  }\n  return hueParse(str);\n}\nclass Color {\n  constructor(input) {\n    if (input instanceof Color) {\n      return input;\n    }\n    const type = typeof input;\n    let v;\n    if (type === 'object') {\n      v = fromObject(input);\n    } else if (type === 'string') {\n      v = hexParse(input) || nameParse(input) || functionParse(input);\n    }\n    this._rgb = v;\n    this._valid = !!v;\n  }\n  get valid() {\n    return this._valid;\n  }\n  get rgb() {\n    var v = clone(this._rgb);\n    if (v) {\n      v.a = b2n(v.a);\n    }\n    return v;\n  }\n  set rgb(obj) {\n    this._rgb = fromObject(obj);\n  }\n  rgbString() {\n    return this._valid ? rgbString(this._rgb) : undefined;\n  }\n  hexString() {\n    return this._valid ? hexString(this._rgb) : undefined;\n  }\n  hslString() {\n    return this._valid ? hslString(this._rgb) : undefined;\n  }\n  mix(color, weight) {\n    if (color) {\n      const c1 = this.rgb;\n      const c2 = color.rgb;\n      let w2;\n      const p = weight === w2 ? 0.5 : weight;\n      const w = 2 * p - 1;\n      const a = c1.a - c2.a;\n      const w1 = ((w * a === -1 ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n      w2 = 1 - w1;\n      c1.r = 0xFF & w1 * c1.r + w2 * c2.r + 0.5;\n      c1.g = 0xFF & w1 * c1.g + w2 * c2.g + 0.5;\n      c1.b = 0xFF & w1 * c1.b + w2 * c2.b + 0.5;\n      c1.a = p * c1.a + (1 - p) * c2.a;\n      this.rgb = c1;\n    }\n    return this;\n  }\n  interpolate(color, t) {\n    if (color) {\n      this._rgb = interpolate(this._rgb, color._rgb, t);\n    }\n    return this;\n  }\n  clone() {\n    return new Color(this.rgb);\n  }\n  alpha(a) {\n    this._rgb.a = n2b(a);\n    return this;\n  }\n  clearer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 - ratio;\n    return this;\n  }\n  greyscale() {\n    const rgb = this._rgb;\n    const val = round(rgb.r * 0.3 + rgb.g * 0.59 + rgb.b * 0.11);\n    rgb.r = rgb.g = rgb.b = val;\n    return this;\n  }\n  opaquer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 + ratio;\n    return this;\n  }\n  negate() {\n    const v = this._rgb;\n    v.r = 255 - v.r;\n    v.g = 255 - v.g;\n    v.b = 255 - v.b;\n    return this;\n  }\n  lighten(ratio) {\n    modHSL(this._rgb, 2, ratio);\n    return this;\n  }\n  darken(ratio) {\n    modHSL(this._rgb, 2, -ratio);\n    return this;\n  }\n  saturate(ratio) {\n    modHSL(this._rgb, 1, ratio);\n    return this;\n  }\n  desaturate(ratio) {\n    modHSL(this._rgb, 1, -ratio);\n    return this;\n  }\n  rotate(deg) {\n    rotate(this._rgb, deg);\n    return this;\n  }\n}\n\nfunction index_esm(input) {\n  return new Color(input);\n}\n\nexport { Color, b2n, b2p, index_esm as default, hexParse, hexString, hsl2rgb, hslString, hsv2rgb, hueParse, hwb2rgb, lim, n2b, n2p, nameParse, p2b, rgb2hsl, rgbParse, rgbString, rotate, round };\n","/**\n * @namespace Chart.helpers\n */\n\nimport type {AnyObject} from '../types/basic.js';\nimport type {ActiveDataPoint, ChartEvent} from '../types/index.js';\n\n/**\n * An empty function that can be used, for example, for optional callback.\n */\nexport function noop() {\n  /* noop */\n}\n\n/**\n * Returns a unique id, sequentially generated from a global variable.\n */\nexport const uid = (() => {\n  let id = 0;\n  return () => id++;\n})();\n\n/**\n * Returns true if `value` is neither null nor undefined, else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */\nexport function isNullOrUndef(value: unknown): value is null | undefined {\n  return value === null || typeof value === 'undefined';\n}\n\n/**\n * Returns true if `value` is an array (including typed arrays), else returns false.\n * @param value - The value to test.\n * @function\n */\nexport function isArray<T = unknown>(value: unknown): value is T[] {\n  if (Array.isArray && Array.isArray(value)) {\n    return true;\n  }\n  const type = Object.prototype.toString.call(value);\n  if (type.slice(0, 7) === '[object' && type.slice(-6) === 'Array]') {\n    return true;\n  }\n  return false;\n}\n\n/**\n * Returns true if `value` is an object (excluding null), else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */\nexport function isObject(value: unknown): value is AnyObject {\n  return value !== null && Object.prototype.toString.call(value) === '[object Object]';\n}\n\n/**\n * Returns true if `value` is a finite number, else returns false\n * @param value  - The value to test.\n */\nfunction isNumberFinite(value: unknown): value is number {\n  return (typeof value === 'number' || value instanceof Number) && isFinite(+value);\n}\nexport {\n  isNumberFinite as isFinite,\n};\n\n/**\n * Returns `value` if finite, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is not finite.\n */\nexport function finiteOrDefault(value: unknown, defaultValue: number) {\n  return isNumberFinite(value) ? value : defaultValue;\n}\n\n/**\n * Returns `value` if defined, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is undefined.\n */\nexport function valueOrDefault<T>(value: T | undefined, defaultValue: T) {\n  return typeof value === 'undefined' ? defaultValue : value;\n}\n\nexport const toPercentage = (value: number | string, dimension: number) =>\n  typeof value === 'string' && value.endsWith('%') ?\n    parseFloat(value) / 100\n    : +value / dimension;\n\nexport const toDimension = (value: number | string, dimension: number) =>\n  typeof value === 'string' && value.endsWith('%') ?\n    parseFloat(value) / 100 * dimension\n    : +value;\n\n/**\n * Calls `fn` with the given `args` in the scope defined by `thisArg` and returns the\n * value returned by `fn`. If `fn` is not a function, this method returns undefined.\n * @param fn - The function to call.\n * @param args - The arguments with which `fn` should be called.\n * @param [thisArg] - The value of `this` provided for the call to `fn`.\n */\nexport function callback<T extends (this: TA, ...restArgs: unknown[]) => R, TA, R>(\n  fn: T | undefined,\n  args: unknown[],\n  thisArg?: TA\n): R | undefined {\n  if (fn && typeof fn.call === 'function') {\n    return fn.apply(thisArg, args);\n  }\n}\n\n/**\n * Note(SB) for performance sake, this method should only be used when loopable type\n * is unknown or in none intensive code (not called often and small loopable). Else\n * it's preferable to use a regular for() loop and save extra function calls.\n * @param loopable - The object or array to be iterated.\n * @param fn - The function to call for each item.\n * @param [thisArg] - The value of `this` provided for the call to `fn`.\n * @param [reverse] - If true, iterates backward on the loopable.\n */\nexport function each<T, TA>(\n  loopable: Record<string, T>,\n  fn: (this: TA, v: T, i: string) => void,\n  thisArg?: TA,\n  reverse?: boolean\n): void;\nexport function each<T, TA>(\n  loopable: T[],\n  fn: (this: TA, v: T, i: number) => void,\n  thisArg?: TA,\n  reverse?: boolean\n): void;\nexport function each<T, TA>(\n  loopable: T[] | Record<string, T>,\n  fn: (this: TA, v: T, i: any) => void,\n  thisArg?: TA,\n  reverse?: boolean\n) {\n  let i: number, len: number, keys: string[];\n  if (isArray(loopable)) {\n    len = loopable.length;\n    if (reverse) {\n      for (i = len - 1; i >= 0; i--) {\n        fn.call(thisArg, loopable[i], i);\n      }\n    } else {\n      for (i = 0; i < len; i++) {\n        fn.call(thisArg, loopable[i], i);\n      }\n    }\n  } else if (isObject(loopable)) {\n    keys = Object.keys(loopable);\n    len = keys.length;\n    for (i = 0; i < len; i++) {\n      fn.call(thisArg, loopable[keys[i]], keys[i]);\n    }\n  }\n}\n\n/**\n * Returns true if the `a0` and `a1` arrays have the same content, else returns false.\n * @param a0 - The array to compare\n * @param a1 - The array to compare\n * @private\n */\nexport function _elementsEqual(a0: ActiveDataPoint[], a1: ActiveDataPoint[]) {\n  let i: number, ilen: number, v0: ActiveDataPoint, v1: ActiveDataPoint;\n\n  if (!a0 || !a1 || a0.length !== a1.length) {\n    return false;\n  }\n\n  for (i = 0, ilen = a0.length; i < ilen; ++i) {\n    v0 = a0[i];\n    v1 = a1[i];\n\n    if (v0.datasetIndex !== v1.datasetIndex || v0.index !== v1.index) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\n/**\n * Returns a deep copy of `source` without keeping references on objects and arrays.\n * @param source - The value to clone.\n */\nexport function clone<T>(source: T): T {\n  if (isArray(source)) {\n    return source.map(clone) as unknown as T;\n  }\n\n  if (isObject(source)) {\n    const target = Object.create(null);\n    const keys = Object.keys(source);\n    const klen = keys.length;\n    let k = 0;\n\n    for (; k < klen; ++k) {\n      target[keys[k]] = clone(source[keys[k]]);\n    }\n\n    return target;\n  }\n\n  return source;\n}\n\nfunction isValidKey(key: string) {\n  return ['__proto__', 'prototype', 'constructor'].indexOf(key) === -1;\n}\n\n/**\n * The default merger when Chart.helpers.merge is called without merger option.\n * Note(SB): also used by mergeConfig and mergeScaleConfig as fallback.\n * @private\n */\nexport function _merger(key: string, target: AnyObject, source: AnyObject, options: AnyObject) {\n  if (!isValidKey(key)) {\n    return;\n  }\n\n  const tval = target[key];\n  const sval = source[key];\n\n  if (isObject(tval) && isObject(sval)) {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    merge(tval, sval, options);\n  } else {\n    target[key] = clone(sval);\n  }\n}\n\nexport interface MergeOptions {\n  merger?: (key: string, target: AnyObject, source: AnyObject, options?: AnyObject) => void;\n}\n\n/**\n * Recursively deep copies `source` properties into `target` with the given `options`.\n * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\n * @param target - The target object in which all sources are merged into.\n * @param source - Object(s) to merge into `target`.\n * @param [options] - Merging options:\n * @param [options.merger] - The merge method (key, target, source, options)\n * @returns The `target` object.\n */\nexport function merge<T>(target: T, source: [], options?: MergeOptions): T;\nexport function merge<T, S1>(target: T, source: S1, options?: MergeOptions): T & S1;\nexport function merge<T, S1>(target: T, source: [S1], options?: MergeOptions): T & S1;\nexport function merge<T, S1, S2>(target: T, source: [S1, S2], options?: MergeOptions): T & S1 & S2;\nexport function merge<T, S1, S2, S3>(target: T, source: [S1, S2, S3], options?: MergeOptions): T & S1 & S2 & S3;\nexport function merge<T, S1, S2, S3, S4>(\n  target: T,\n  source: [S1, S2, S3, S4],\n  options?: MergeOptions\n): T & S1 & S2 & S3 & S4;\nexport function merge<T>(target: T, source: AnyObject[], options?: MergeOptions): AnyObject;\nexport function merge<T>(target: T, source: AnyObject[], options?: MergeOptions): AnyObject {\n  const sources = isArray(source) ? source : [source];\n  const ilen = sources.length;\n\n  if (!isObject(target)) {\n    return target as AnyObject;\n  }\n\n  options = options || {};\n  const merger = options.merger || _merger;\n  let current: AnyObject;\n\n  for (let i = 0; i < ilen; ++i) {\n    current = sources[i];\n    if (!isObject(current)) {\n      continue;\n    }\n\n    const keys = Object.keys(current);\n    for (let k = 0, klen = keys.length; k < klen; ++k) {\n      merger(keys[k], target, current, options as AnyObject);\n    }\n  }\n\n  return target;\n}\n\n/**\n * Recursively deep copies `source` properties into `target` *only* if not defined in target.\n * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\n * @param target - The target object in which all sources are merged into.\n * @param source - Object(s) to merge into `target`.\n * @returns The `target` object.\n */\nexport function mergeIf<T>(target: T, source: []): T;\nexport function mergeIf<T, S1>(target: T, source: S1): T & S1;\nexport function mergeIf<T, S1>(target: T, source: [S1]): T & S1;\nexport function mergeIf<T, S1, S2>(target: T, source: [S1, S2]): T & S1 & S2;\nexport function mergeIf<T, S1, S2, S3>(target: T, source: [S1, S2, S3]): T & S1 & S2 & S3;\nexport function mergeIf<T, S1, S2, S3, S4>(target: T, source: [S1, S2, S3, S4]): T & S1 & S2 & S3 & S4;\nexport function mergeIf<T>(target: T, source: AnyObject[]): AnyObject;\nexport function mergeIf<T>(target: T, source: AnyObject[]): AnyObject {\n  // eslint-disable-next-line @typescript-eslint/no-use-before-define\n  return merge<T>(target, source, {merger: _mergerIf});\n}\n\n/**\n * Merges source[key] in target[key] only if target[key] is undefined.\n * @private\n */\nexport function _mergerIf(key: string, target: AnyObject, source: AnyObject) {\n  if (!isValidKey(key)) {\n    return;\n  }\n\n  const tval = target[key];\n  const sval = source[key];\n\n  if (isObject(tval) && isObject(sval)) {\n    mergeIf(tval, sval);\n  } else if (!Object.prototype.hasOwnProperty.call(target, key)) {\n    target[key] = clone(sval);\n  }\n}\n\n/**\n * @private\n */\nexport function _deprecated(scope: string, value: unknown, previous: string, current: string) {\n  if (value !== undefined) {\n    console.warn(scope + ': \"' + previous +\n      '\" is deprecated. Please use \"' + current + '\" instead');\n  }\n}\n\n// resolveObjectKey resolver cache\nconst keyResolvers = {\n  // Chart.helpers.core resolveObjectKey should resolve empty key to root object\n  '': v => v,\n  // default resolvers\n  x: o => o.x,\n  y: o => o.y\n};\n\n/**\n * @private\n */\nexport function _splitKey(key: string) {\n  const parts = key.split('.');\n  const keys: string[] = [];\n  let tmp = '';\n  for (const part of parts) {\n    tmp += part;\n    if (tmp.endsWith('\\\\')) {\n      tmp = tmp.slice(0, -1) + '.';\n    } else {\n      keys.push(tmp);\n      tmp = '';\n    }\n  }\n  return keys;\n}\n\nfunction _getKeyResolver(key: string) {\n  const keys = _splitKey(key);\n  return obj => {\n    for (const k of keys) {\n      if (k === '') {\n        // For backward compatibility:\n        // Chart.helpers.core resolveObjectKey should break at empty key\n        break;\n      }\n      obj = obj && obj[k];\n    }\n    return obj;\n  };\n}\n\nexport function resolveObjectKey(obj: AnyObject, key: string): any {\n  const resolver = keyResolvers[key] || (keyResolvers[key] = _getKeyResolver(key));\n  return resolver(obj);\n}\n\n/**\n * @private\n */\nexport function _capitalize(str: string) {\n  return str.charAt(0).toUpperCase() + str.slice(1);\n}\n\n\nexport const defined = (value: unknown) => typeof value !== 'undefined';\n\nexport const isFunction = (value: unknown): value is (...args: any[]) => any => typeof value === 'function';\n\n// Adapted from https://stackoverflow.com/questions/31128855/comparing-ecma6-sets-for-equality#31129384\nexport const setsEqual = <T>(a: Set<T>, b: Set<T>) => {\n  if (a.size !== b.size) {\n    return false;\n  }\n\n  for (const item of a) {\n    if (!b.has(item)) {\n      return false;\n    }\n  }\n\n  return true;\n};\n\n/**\n * @param e - The event\n * @private\n */\nexport function _isClickEvent(e: ChartEvent) {\n  return e.type === 'mouseup' || e.type === 'click' || e.type === 'contextmenu';\n}\n","import type {Point} from '../types/geometric.js';\nimport {isFinite as isFiniteNumber} from './helpers.core.js';\n\n/**\n * @alias Chart.helpers.math\n * @namespace\n */\n\nexport const PI = Math.PI;\nexport const TAU = 2 * PI;\nexport const PITAU = TAU + PI;\nexport const INFINITY = Number.POSITIVE_INFINITY;\nexport const RAD_PER_DEG = PI / 180;\nexport const HALF_PI = PI / 2;\nexport const QUARTER_PI = PI / 4;\nexport const TWO_THIRDS_PI = PI * 2 / 3;\n\nexport const log10 = Math.log10;\nexport const sign = Math.sign;\n\nexport function almostEquals(x: number, y: number, epsilon: number) {\n  return Math.abs(x - y) < epsilon;\n}\n\n/**\n * Implementation of the nice number algorithm used in determining where axis labels will go\n */\nexport function niceNum(range: number) {\n  const roundedRange = Math.round(range);\n  range = almostEquals(range, roundedRange, range / 1000) ? roundedRange : range;\n  const niceRange = Math.pow(10, Math.floor(log10(range)));\n  const fraction = range / niceRange;\n  const niceFraction = fraction <= 1 ? 1 : fraction <= 2 ? 2 : fraction <= 5 ? 5 : 10;\n  return niceFraction * niceRange;\n}\n\n/**\n * Returns an array of factors sorted from 1 to sqrt(value)\n * @private\n */\nexport function _factorize(value: number) {\n  const result: number[] = [];\n  const sqrt = Math.sqrt(value);\n  let i: number;\n\n  for (i = 1; i < sqrt; i++) {\n    if (value % i === 0) {\n      result.push(i);\n      result.push(value / i);\n    }\n  }\n  if (sqrt === (sqrt | 0)) { // if value is a square number\n    result.push(sqrt);\n  }\n\n  result.sort((a, b) => a - b).pop();\n  return result;\n}\n\nexport function isNumber(n: unknown): n is number {\n  return !isNaN(parseFloat(n as string)) && isFinite(n as number);\n}\n\nexport function almostWhole(x: number, epsilon: number) {\n  const rounded = Math.round(x);\n  return ((rounded - epsilon) <= x) && ((rounded + epsilon) >= x);\n}\n\n/**\n * @private\n */\nexport function _setMinAndMaxByKey(\n  array: Record<string, number>[],\n  target: { min: number, max: number },\n  property: string\n) {\n  let i: number, ilen: number, value: number;\n\n  for (i = 0, ilen = array.length; i < ilen; i++) {\n    value = array[i][property];\n    if (!isNaN(value)) {\n      target.min = Math.min(target.min, value);\n      target.max = Math.max(target.max, value);\n    }\n  }\n}\n\nexport function toRadians(degrees: number) {\n  return degrees * (PI / 180);\n}\n\nexport function toDegrees(radians: number) {\n  return radians * (180 / PI);\n}\n\n/**\n * Returns the number of decimal places\n * i.e. the number of digits after the decimal point, of the value of this Number.\n * @param x - A number.\n * @returns The number of decimal places.\n * @private\n */\nexport function _decimalPlaces(x: number) {\n  if (!isFiniteNumber(x)) {\n    return;\n  }\n  let e = 1;\n  let p = 0;\n  while (Math.round(x * e) / e !== x) {\n    e *= 10;\n    p++;\n  }\n  return p;\n}\n\n// Gets the angle from vertical upright to the point about a centre.\nexport function getAngleFromPoint(\n  centrePoint: Point,\n  anglePoint: Point\n) {\n  const distanceFromXCenter = anglePoint.x - centrePoint.x;\n  const distanceFromYCenter = anglePoint.y - centrePoint.y;\n  const radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n\n  let angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\n\n  if (angle < (-0.5 * PI)) {\n    angle += TAU; // make sure the returned angle is in the range of (-PI/2, 3PI/2]\n  }\n\n  return {\n    angle,\n    distance: radialDistanceFromCenter\n  };\n}\n\nexport function distanceBetweenPoints(pt1: Point, pt2: Point) {\n  return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n}\n\n/**\n * Shortest distance between angles, in either direction.\n * @private\n */\nexport function _angleDiff(a: number, b: number) {\n  return (a - b + PITAU) % TAU - PI;\n}\n\n/**\n * Normalize angle to be between 0 and 2*PI\n * @private\n */\nexport function _normalizeAngle(a: number) {\n  return (a % TAU + TAU) % TAU;\n}\n\n/**\n * @private\n */\nexport function _angleBetween(angle: number, start: number, end: number, sameAngleIsFullCircle?: boolean) {\n  const a = _normalizeAngle(angle);\n  const s = _normalizeAngle(start);\n  const e = _normalizeAngle(end);\n  const angleToStart = _normalizeAngle(s - a);\n  const angleToEnd = _normalizeAngle(e - a);\n  const startToAngle = _normalizeAngle(a - s);\n  const endToAngle = _normalizeAngle(a - e);\n  return a === s || a === e || (sameAngleIsFullCircle && s === e)\n    || (angleToStart > angleToEnd && startToAngle < endToAngle);\n}\n\n/**\n * Limit `value` between `min` and `max`\n * @param value\n * @param min\n * @param max\n * @private\n */\nexport function _limitValue(value: number, min: number, max: number) {\n  return Math.max(min, Math.min(max, value));\n}\n\n/**\n * @param {number} value\n * @private\n */\nexport function _int16Range(value: number) {\n  return _limitValue(value, -32768, 32767);\n}\n\n/**\n * @param value\n * @param start\n * @param end\n * @param [epsilon]\n * @private\n */\nexport function _isBetween(value: number, start: number, end: number, epsilon = 1e-6) {\n  return value >= Math.min(start, end) - epsilon && value <= Math.max(start, end) + epsilon;\n}\n","import {_capitalize} from './helpers.core.js';\n\n/**\n * Binary search\n * @param table - the table search. must be sorted!\n * @param value - value to find\n * @param cmp\n * @private\n */\nexport function _lookup(\n  table: number[],\n  value: number,\n  cmp?: (value: number) => boolean\n): {lo: number, hi: number};\nexport function _lookup<T>(\n  table: T[],\n  value: number,\n  cmp: (value: number) => boolean\n): {lo: number, hi: number};\nexport function _lookup(\n  table: unknown[],\n  value: number,\n  cmp?: (value: number) => boolean\n) {\n  cmp = cmp || ((index) => table[index] < value);\n  let hi = table.length - 1;\n  let lo = 0;\n  let mid: number;\n\n  while (hi - lo > 1) {\n    mid = (lo + hi) >> 1;\n    if (cmp(mid)) {\n      lo = mid;\n    } else {\n      hi = mid;\n    }\n  }\n\n  return {lo, hi};\n}\n\n/**\n * Binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @param last - lookup last index\n * @private\n */\nexport const _lookupByKey = (\n  table: Record<string, number>[],\n  key: string,\n  value: number,\n  last?: boolean\n) =>\n  _lookup(table, value, last\n    ? index => {\n      const ti = table[index][key];\n      return ti < value || ti === value && table[index + 1][key] === value;\n    }\n    : index => table[index][key] < value);\n\n/**\n * Reverse binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @private\n */\nexport const _rlookupByKey = (\n  table: Record<string, number>[],\n  key: string,\n  value: number\n) =>\n  _lookup(table, value, index => table[index][key] >= value);\n\n/**\n * Return subset of `values` between `min` and `max` inclusive.\n * Values are assumed to be in sorted order.\n * @param values - sorted array of values\n * @param min - min value\n * @param max - max value\n */\nexport function _filterBetween(values: number[], min: number, max: number) {\n  let start = 0;\n  let end = values.length;\n\n  while (start < end && values[start] < min) {\n    start++;\n  }\n  while (end > start && values[end - 1] > max) {\n    end--;\n  }\n\n  return start > 0 || end < values.length\n    ? values.slice(start, end)\n    : values;\n}\n\nconst arrayEvents = ['push', 'pop', 'shift', 'splice', 'unshift'] as const;\n\nexport interface ArrayListener<T> {\n  _onDataPush?(...item: T[]): void;\n  _onDataPop?(): void;\n  _onDataShift?(): void;\n  _onDataSplice?(index: number, deleteCount: number, ...items: T[]): void;\n  _onDataUnshift?(...item: T[]): void;\n}\n\n/**\n * Hooks the array methods that add or remove values ('push', pop', 'shift', 'splice',\n * 'unshift') and notify the listener AFTER the array has been altered. Listeners are\n * called on the '_onData*' callbacks (e.g. _onDataPush, etc.) with same arguments.\n */\nexport function listenArrayEvents<T>(array: T[], listener: ArrayListener<T>): void;\nexport function listenArrayEvents(array, listener) {\n  if (array._chartjs) {\n    array._chartjs.listeners.push(listener);\n    return;\n  }\n\n  Object.defineProperty(array, '_chartjs', {\n    configurable: true,\n    enumerable: false,\n    value: {\n      listeners: [listener]\n    }\n  });\n\n  arrayEvents.forEach((key) => {\n    const method = '_onData' + _capitalize(key);\n    const base = array[key];\n\n    Object.defineProperty(array, key, {\n      configurable: true,\n      enumerable: false,\n      value(...args) {\n        const res = base.apply(this, args);\n\n        array._chartjs.listeners.forEach((object) => {\n          if (typeof object[method] === 'function') {\n            object[method](...args);\n          }\n        });\n\n        return res;\n      }\n    });\n  });\n}\n\n\n/**\n * Removes the given array event listener and cleanup extra attached properties (such as\n * the _chartjs stub and overridden methods) if array doesn't have any more listeners.\n */\nexport function unlistenArrayEvents<T>(array: T[], listener: ArrayListener<T>): void;\nexport function unlistenArrayEvents(array, listener) {\n  const stub = array._chartjs;\n  if (!stub) {\n    return;\n  }\n\n  const listeners = stub.listeners;\n  const index = listeners.indexOf(listener);\n  if (index !== -1) {\n    listeners.splice(index, 1);\n  }\n\n  if (listeners.length > 0) {\n    return;\n  }\n\n  arrayEvents.forEach((key) => {\n    delete array[key];\n  });\n\n  delete array._chartjs;\n}\n\n/**\n * @param items\n */\nexport function _arrayUnique<T>(items: T[]) {\n  const set = new Set<T>(items);\n\n  if (set.size === items.length) {\n    return items;\n  }\n\n  return Array.from(set);\n}\n","import type {ChartMeta, PointElement} from '../types/index.js';\n\nimport {_limitValue} from './helpers.math.js';\nimport {_lookupByKey} from './helpers.collection.js';\n\nexport function fontString(pixelSize: number, fontStyle: string, fontFamily: string) {\n  return fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\n}\n\n/**\n* Request animation polyfill\n*/\nexport const requestAnimFrame = (function() {\n  if (typeof window === 'undefined') {\n    return function(callback) {\n      return callback();\n    };\n  }\n  return window.requestAnimationFrame;\n}());\n\n/**\n * Throttles calling `fn` once per animation frame\n * Latest arguments are used on the actual call\n */\nexport function throttled<TArgs extends Array<any>>(\n  fn: (...args: TArgs) => void,\n  thisArg: any,\n) {\n  let argsToUse = [] as TArgs;\n  let ticking = false;\n\n  return function(...args: TArgs) {\n    // Save the args for use later\n    argsToUse = args;\n    if (!ticking) {\n      ticking = true;\n      requestAnimFrame.call(window, () => {\n        ticking = false;\n        fn.apply(thisArg, argsToUse);\n      });\n    }\n  };\n}\n\n/**\n * Debounces calling `fn` for `delay` ms\n */\nexport function debounce<TArgs extends Array<any>>(fn: (...args: TArgs) => void, delay: number) {\n  let timeout;\n  return function(...args: TArgs) {\n    if (delay) {\n      clearTimeout(timeout);\n      timeout = setTimeout(fn, delay, args);\n    } else {\n      fn.apply(this, args);\n    }\n    return delay;\n  };\n}\n\n/**\n * Converts 'start' to 'left', 'end' to 'right' and others to 'center'\n * @private\n */\nexport const _toLeftRightCenter = (align: 'start' | 'end' | 'center') => align === 'start' ? 'left' : align === 'end' ? 'right' : 'center';\n\n/**\n * Returns `start`, `end` or `(start + end) / 2` depending on `align`. Defaults to `center`\n * @private\n */\nexport const _alignStartEnd = (align: 'start' | 'end' | 'center', start: number, end: number) => align === 'start' ? start : align === 'end' ? end : (start + end) / 2;\n\n/**\n * Returns `left`, `right` or `(left + right) / 2` depending on `align`. Defaults to `left`\n * @private\n */\nexport const _textX = (align: 'left' | 'right' | 'center', left: number, right: number, rtl: boolean) => {\n  const check = rtl ? 'left' : 'right';\n  return align === check ? right : align === 'center' ? (left + right) / 2 : left;\n};\n\n/**\n * Return start and count of visible points.\n * @private\n */\nexport function _getStartAndCountOfVisiblePoints(meta: ChartMeta<'line' | 'scatter'>, points: PointElement[], animationsDisabled: boolean) {\n  const pointCount = points.length;\n\n  let start = 0;\n  let count = pointCount;\n\n  if (meta._sorted) {\n    const {iScale, _parsed} = meta;\n    const axis = iScale.axis;\n    const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\n\n    if (minDefined) {\n      start = _limitValue(Math.min(\n        // @ts-expect-error Need to type _parsed\n        _lookupByKey(_parsed, axis, min).lo,\n        // @ts-expect-error Need to fix types on _lookupByKey\n        animationsDisabled ? pointCount : _lookupByKey(points, axis, iScale.getPixelForValue(min)).lo),\n      0, pointCount - 1);\n    }\n    if (maxDefined) {\n      count = _limitValue(Math.max(\n        // @ts-expect-error Need to type _parsed\n        _lookupByKey(_parsed, iScale.axis, max, true).hi + 1,\n        // @ts-expect-error Need to fix types on _lookupByKey\n        animationsDisabled ? 0 : _lookupByKey(points, axis, iScale.getPixelForValue(max), true).hi + 1),\n      start, pointCount) - start;\n    } else {\n      count = pointCount - start;\n    }\n  }\n\n  return {start, count};\n}\n\n/**\n * Checks if the scale ranges have changed.\n * @param {object} meta - dataset meta.\n * @returns {boolean}\n * @private\n */\nexport function _scaleRangesChanged(meta) {\n  const {xScale, yScale, _scaleRanges} = meta;\n  const newRanges = {\n    xmin: xScale.min,\n    xmax: xScale.max,\n    ymin: yScale.min,\n    ymax: yScale.max\n  };\n  if (!_scaleRanges) {\n    meta._scaleRanges = newRanges;\n    return true;\n  }\n  const changed = _scaleRanges.xmin !== xScale.min\n\t\t|| _scaleRanges.xmax !== xScale.max\n\t\t|| _scaleRanges.ymin !== yScale.min\n\t\t|| _scaleRanges.ymax !== yScale.max;\n\n  Object.assign(_scaleRanges, newRanges);\n  return changed;\n}\n","import {PI, TAU, HALF_PI} from './helpers.math.js';\n\nconst atEdge = (t: number) => t === 0 || t === 1;\nconst elasticIn = (t: number, s: number, p: number) => -(Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * TAU / p));\nconst elasticOut = (t: number, s: number, p: number) => Math.pow(2, -10 * t) * Math.sin((t - s) * TAU / p) + 1;\n\n/**\n * Easing functions adapted from Robert Penner's easing equations.\n * @namespace Chart.helpers.easing.effects\n * @see http://www.robertpenner.com/easing/\n */\nconst effects = {\n  linear: (t: number) => t,\n\n  easeInQuad: (t: number) => t * t,\n\n  easeOutQuad: (t: number) => -t * (t - 2),\n\n  easeInOutQuad: (t: number) => ((t /= 0.5) < 1)\n    ? 0.5 * t * t\n    : -0.5 * ((--t) * (t - 2) - 1),\n\n  easeInCubic: (t: number) => t * t * t,\n\n  easeOutCubic: (t: number) => (t -= 1) * t * t + 1,\n\n  easeInOutCubic: (t: number) => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t\n    : 0.5 * ((t -= 2) * t * t + 2),\n\n  easeInQuart: (t: number) => t * t * t * t,\n\n  easeOutQuart: (t: number) => -((t -= 1) * t * t * t - 1),\n\n  easeInOutQuart: (t: number) => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t * t\n    : -0.5 * ((t -= 2) * t * t * t - 2),\n\n  easeInQuint: (t: number) => t * t * t * t * t,\n\n  easeOutQuint: (t: number) => (t -= 1) * t * t * t * t + 1,\n\n  easeInOutQuint: (t: number) => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t * t * t\n    : 0.5 * ((t -= 2) * t * t * t * t + 2),\n\n  easeInSine: (t: number) => -Math.cos(t * HALF_PI) + 1,\n\n  easeOutSine: (t: number) => Math.sin(t * HALF_PI),\n\n  easeInOutSine: (t: number) => -0.5 * (Math.cos(PI * t) - 1),\n\n  easeInExpo: (t: number) => (t === 0) ? 0 : Math.pow(2, 10 * (t - 1)),\n\n  easeOutExpo: (t: number) => (t === 1) ? 1 : -Math.pow(2, -10 * t) + 1,\n\n  easeInOutExpo: (t: number) => atEdge(t) ? t : t < 0.5\n    ? 0.5 * Math.pow(2, 10 * (t * 2 - 1))\n    : 0.5 * (-Math.pow(2, -10 * (t * 2 - 1)) + 2),\n\n  easeInCirc: (t: number) => (t >= 1) ? t : -(Math.sqrt(1 - t * t) - 1),\n\n  easeOutCirc: (t: number) => Math.sqrt(1 - (t -= 1) * t),\n\n  easeInOutCirc: (t: number) => ((t /= 0.5) < 1)\n    ? -0.5 * (Math.sqrt(1 - t * t) - 1)\n    : 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1),\n\n  easeInElastic: (t: number) => atEdge(t) ? t : elasticIn(t, 0.075, 0.3),\n\n  easeOutElastic: (t: number) => atEdge(t) ? t : elasticOut(t, 0.075, 0.3),\n\n  easeInOutElastic(t: number) {\n    const s = 0.1125;\n    const p = 0.45;\n    return atEdge(t) ? t :\n      t < 0.5\n        ? 0.5 * elasticIn(t * 2, s, p)\n        : 0.5 + 0.5 * elasticOut(t * 2 - 1, s, p);\n  },\n\n  easeInBack(t: number) {\n    const s = 1.70158;\n    return t * t * ((s + 1) * t - s);\n  },\n\n  easeOutBack(t: number) {\n    const s = 1.70158;\n    return (t -= 1) * t * ((s + 1) * t + s) + 1;\n  },\n\n  easeInOutBack(t: number) {\n    let s = 1.70158;\n    if ((t /= 0.5) < 1) {\n      return 0.5 * (t * t * (((s *= (1.525)) + 1) * t - s));\n    }\n    return 0.5 * ((t -= 2) * t * (((s *= (1.525)) + 1) * t + s) + 2);\n  },\n\n  easeInBounce: (t: number) => 1 - effects.easeOutBounce(1 - t),\n\n  easeOutBounce(t: number) {\n    const m = 7.5625;\n    const d = 2.75;\n    if (t < (1 / d)) {\n      return m * t * t;\n    }\n    if (t < (2 / d)) {\n      return m * (t -= (1.5 / d)) * t + 0.75;\n    }\n    if (t < (2.5 / d)) {\n      return m * (t -= (2.25 / d)) * t + 0.9375;\n    }\n    return m * (t -= (2.625 / d)) * t + 0.984375;\n  },\n\n  easeInOutBounce: (t: number) => (t < 0.5)\n    ? effects.easeInBounce(t * 2) * 0.5\n    : effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5,\n} as const;\n\nexport type EasingFunction = keyof typeof effects\n\nexport default effects;\n","import {Color} from '@kurkle/color';\n\nexport function isPatternOrGradient(value: unknown): value is CanvasPattern | CanvasGradient {\n  if (value && typeof value === 'object') {\n    const type = value.toString();\n    return type === '[object CanvasPattern]' || type === '[object CanvasGradient]';\n  }\n\n  return false;\n}\n\nexport function color(value: CanvasGradient): CanvasGradient;\nexport function color(value: CanvasPattern): CanvasPattern;\nexport function color(\n  value:\n  | string\n  | { r: number; g: number; b: number; a: number }\n  | [number, number, number]\n  | [number, number, number, number]\n): Color;\nexport function color(value) {\n  return isPatternOrGradient(value) ? value : new Color(value);\n}\n\nexport function getHoverColor(value: CanvasGradient): CanvasGradient;\nexport function getHoverColor(value: CanvasPattern): CanvasPattern;\nexport function getHoverColor(value: string): string;\nexport function getHoverColor(value) {\n  return isPatternOrGradient(value)\n    ? value\n    : new Color(value).saturate(0.5).darken(0.1).hexString();\n}\n","const numbers = ['x', 'y', 'borderWidth', 'radius', 'tension'];\nconst colors = ['color', 'borderColor', 'backgroundColor'];\n\nexport function applyAnimationsDefaults(defaults) {\n  defaults.set('animation', {\n    delay: undefined,\n    duration: 1000,\n    easing: 'easeOutQuart',\n    fn: undefined,\n    from: undefined,\n    loop: undefined,\n    to: undefined,\n    type: undefined,\n  });\n\n  defaults.describe('animation', {\n    _fallback: false,\n    _indexable: false,\n    _scriptable: (name) => name !== 'onProgress' && name !== 'onComplete' && name !== 'fn',\n  });\n\n  defaults.set('animations', {\n    colors: {\n      type: 'color',\n      properties: colors\n    },\n    numbers: {\n      type: 'number',\n      properties: numbers\n    },\n  });\n\n  defaults.describe('animations', {\n    _fallback: 'animation',\n  });\n\n  defaults.set('transitions', {\n    active: {\n      animation: {\n        duration: 400\n      }\n    },\n    resize: {\n      animation: {\n        duration: 0\n      }\n    },\n    show: {\n      animations: {\n        colors: {\n          from: 'transparent'\n        },\n        visible: {\n          type: 'boolean',\n          duration: 0 // show immediately\n        },\n      }\n    },\n    hide: {\n      animations: {\n        colors: {\n          to: 'transparent'\n        },\n        visible: {\n          type: 'boolean',\n          easing: 'linear',\n          fn: v => v | 0 // for keeping the dataset visible all the way through the animation\n        },\n      }\n    }\n  });\n}\n","\nconst intlCache = new Map<string, Intl.NumberFormat>();\n\nfunction getNumberFormat(locale: string, options?: Intl.NumberFormatOptions) {\n  options = options || {};\n  const cacheKey = locale + JSON.stringify(options);\n  let formatter = intlCache.get(cacheKey);\n  if (!formatter) {\n    formatter = new Intl.NumberFormat(locale, options);\n    intlCache.set(cacheKey, formatter);\n  }\n  return formatter;\n}\n\nexport function formatNumber(num: number, locale: string, options?: Intl.NumberFormatOptions) {\n  return getNumberFormat(locale, options).format(num);\n}\n","import {isArray} from '../helpers/helpers.core.js';\nimport {formatNumber} from '../helpers/helpers.intl.js';\nimport {log10} from '../helpers/helpers.math.js';\n\n/**\n * Namespace to hold formatters for different types of ticks\n * @namespace Chart.Ticks.formatters\n */\nconst formatters = {\n  /**\n   * Formatter for value labels\n   * @method Chart.Ticks.formatters.values\n   * @param value the value to display\n   * @return {string|string[]} the label to display\n   */\n  values(value) {\n    return isArray(value) ? /** @type {string[]} */ (value) : '' + value;\n  },\n\n  /**\n   * Formatter for numeric ticks\n   * @method Chart.Ticks.formatters.numeric\n   * @param tickValue {number} the value to be formatted\n   * @param index {number} the position of the tickValue parameter in the ticks array\n   * @param ticks {object[]} the list of ticks being converted\n   * @return {string} string representation of the tickValue parameter\n   */\n  numeric(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0'; // never show decimal places for 0\n    }\n\n    const locale = this.chart.options.locale;\n    let notation;\n    let delta = tickValue; // This is used when there are less than 2 ticks as the tick interval.\n\n    if (ticks.length > 1) {\n      // all ticks are small or there huge numbers; use scientific notation\n      const maxTick = Math.max(Math.abs(ticks[0].value), Math.abs(ticks[ticks.length - 1].value));\n      if (maxTick < 1e-4 || maxTick > 1e+15) {\n        notation = 'scientific';\n      }\n\n      delta = calculateDelta(tickValue, ticks);\n    }\n\n    const logDelta = log10(Math.abs(delta));\n\n    // When datasets have values approaching Number.MAX_VALUE, the tick calculations might result in\n    // infinity and eventually NaN. Passing NaN for minimumFractionDigits or maximumFractionDigits\n    // will make the number formatter throw. So instead we check for isNaN and use a fallback value.\n    //\n    // toFixed has a max of 20 decimal places\n    const numDecimal = isNaN(logDelta) ? 1 : Math.max(Math.min(-1 * Math.floor(logDelta), 20), 0);\n\n    const options = {notation, minimumFractionDigits: numDecimal, maximumFractionDigits: numDecimal};\n    Object.assign(options, this.options.ticks.format);\n\n    return formatNumber(tickValue, locale, options);\n  },\n\n\n  /**\n   * Formatter for logarithmic ticks\n   * @method Chart.Ticks.formatters.logarithmic\n   * @param tickValue {number} the value to be formatted\n   * @param index {number} the position of the tickValue parameter in the ticks array\n   * @param ticks {object[]} the list of ticks being converted\n   * @return {string} string representation of the tickValue parameter\n   */\n  logarithmic(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n    const remain = ticks[index].significand || (tickValue / (Math.pow(10, Math.floor(log10(tickValue)))));\n    if ([1, 2, 3, 5, 10, 15].includes(remain) || index > 0.8 * ticks.length) {\n      return formatters.numeric.call(this, tickValue, index, ticks);\n    }\n    return '';\n  }\n\n};\n\n\nfunction calculateDelta(tickValue, ticks) {\n  // Figure out how many digits to show\n  // The space between the first two ticks might be smaller than normal spacing\n  let delta = ticks.length > 3 ? ticks[2].value - ticks[1].value : ticks[1].value - ticks[0].value;\n\n  // If we have a number like 2.5 as the delta, figure out how many decimal places we need\n  if (Math.abs(delta) >= 1 && tickValue !== Math.floor(tickValue)) {\n    // not an integer\n    delta = tickValue - Math.floor(tickValue);\n  }\n  return delta;\n}\n\n/**\n * Namespace to hold static tick generation functions\n * @namespace Chart.Ticks\n */\nexport default {formatters};\n","import {getHoverColor} from '../helpers/helpers.color.js';\nimport {isObject, merge, valueOrDefault} from '../helpers/helpers.core.js';\nimport {applyAnimationsDefaults} from './core.animations.defaults.js';\nimport {applyLayoutsDefaults} from './core.layouts.defaults.js';\nimport {applyScaleDefaults} from './core.scale.defaults.js';\n\nexport const overrides = Object.create(null);\nexport const descriptors = Object.create(null);\n\n/**\n * @param {object} node\n * @param {string} key\n * @return {object}\n */\nfunction getScope(node, key) {\n  if (!key) {\n    return node;\n  }\n  const keys = key.split('.');\n  for (let i = 0, n = keys.length; i < n; ++i) {\n    const k = keys[i];\n    node = node[k] || (node[k] = Object.create(null));\n  }\n  return node;\n}\n\nfunction set(root, scope, values) {\n  if (typeof scope === 'string') {\n    return merge(getScope(root, scope), values);\n  }\n  return merge(getScope(root, ''), scope);\n}\n\n/**\n * Please use the module's default export which provides a singleton instance\n * Note: class is exported for typedoc\n */\nexport class Defaults {\n  constructor(_descriptors, _appliers) {\n    this.animation = undefined;\n    this.backgroundColor = 'rgba(0,0,0,0.1)';\n    this.borderColor = 'rgba(0,0,0,0.1)';\n    this.color = '#666';\n    this.datasets = {};\n    this.devicePixelRatio = (context) => context.chart.platform.getDevicePixelRatio();\n    this.elements = {};\n    this.events = [\n      'mousemove',\n      'mouseout',\n      'click',\n      'touchstart',\n      'touchmove'\n    ];\n    this.font = {\n      family: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n      size: 12,\n      style: 'normal',\n      lineHeight: 1.2,\n      weight: null\n    };\n    this.hover = {};\n    this.hoverBackgroundColor = (ctx, options) => getHoverColor(options.backgroundColor);\n    this.hoverBorderColor = (ctx, options) => getHoverColor(options.borderColor);\n    this.hoverColor = (ctx, options) => getHoverColor(options.color);\n    this.indexAxis = 'x';\n    this.interaction = {\n      mode: 'nearest',\n      intersect: true,\n      includeInvisible: false\n    };\n    this.maintainAspectRatio = true;\n    this.onHover = null;\n    this.onClick = null;\n    this.parsing = true;\n    this.plugins = {};\n    this.responsive = true;\n    this.scale = undefined;\n    this.scales = {};\n    this.showLine = true;\n    this.drawActiveElementsOnTop = true;\n\n    this.describe(_descriptors);\n    this.apply(_appliers);\n  }\n\n  /**\n\t * @param {string|object} scope\n\t * @param {object} [values]\n\t */\n  set(scope, values) {\n    return set(this, scope, values);\n  }\n\n  /**\n\t * @param {string} scope\n\t */\n  get(scope) {\n    return getScope(this, scope);\n  }\n\n  /**\n\t * @param {string|object} scope\n\t * @param {object} [values]\n\t */\n  describe(scope, values) {\n    return set(descriptors, scope, values);\n  }\n\n  override(scope, values) {\n    return set(overrides, scope, values);\n  }\n\n  /**\n\t * Routes the named defaults to fallback to another scope/name.\n\t * This routing is useful when those target values, like defaults.color, are changed runtime.\n\t * If the values would be copied, the runtime change would not take effect. By routing, the\n\t * fallback is evaluated at each access, so its always up to date.\n\t *\n\t * Example:\n\t *\n\t * \tdefaults.route('elements.arc', 'backgroundColor', '', 'color')\n\t *   - reads the backgroundColor from defaults.color when undefined locally\n\t *\n\t * @param {string} scope Scope this route applies to.\n\t * @param {string} name Property name that should be routed to different namespace when not defined here.\n\t * @param {string} targetScope The namespace where those properties should be routed to.\n\t * Empty string ('') is the root of defaults.\n\t * @param {string} targetName The target name in the target scope the property should be routed to.\n\t */\n  route(scope, name, targetScope, targetName) {\n    const scopeObject = getScope(this, scope);\n    const targetScopeObject = getScope(this, targetScope);\n    const privateName = '_' + name;\n\n    Object.defineProperties(scopeObject, {\n      // A private property is defined to hold the actual value, when this property is set in its scope (set in the setter)\n      [privateName]: {\n        value: scopeObject[name],\n        writable: true\n      },\n      // The actual property is defined as getter/setter so we can do the routing when value is not locally set.\n      [name]: {\n        enumerable: true,\n        get() {\n          const local = this[privateName];\n          const target = targetScopeObject[targetName];\n          if (isObject(local)) {\n            return Object.assign({}, target, local);\n          }\n          return valueOrDefault(local, target);\n        },\n        set(value) {\n          this[privateName] = value;\n        }\n      }\n    });\n  }\n\n  apply(appliers) {\n    appliers.forEach((apply) => apply(this));\n  }\n}\n\n// singleton instance\nexport default /* #__PURE__ */ new Defaults({\n  _scriptable: (name) => !name.startsWith('on'),\n  _indexable: (name) => name !== 'events',\n  hover: {\n    _fallback: 'interaction'\n  },\n  interaction: {\n    _scriptable: false,\n    _indexable: false,\n  }\n}, [applyAnimationsDefaults, applyLayoutsDefaults, applyScaleDefaults]);\n","export function applyLayoutsDefaults(defaults) {\n  defaults.set('layout', {\n    autoPadding: true,\n    padding: {\n      top: 0,\n      right: 0,\n      bottom: 0,\n      left: 0\n    }\n  });\n}\n","import Ticks from './core.ticks.js';\n\nexport function applyScaleDefaults(defaults) {\n  defaults.set('scale', {\n    display: true,\n    offset: false,\n    reverse: false,\n    beginAtZero: false,\n\n    /**\n     * Scale boundary strategy (bypassed by min/max time options)\n     * - `data`: make sure data are fully visible, ticks outside are removed\n     * - `ticks`: make sure ticks are fully visible, data outside are truncated\n     * @see https://github.com/chartjs/Chart.js/pull/4556\n     * @since 3.0.0\n     */\n    bounds: 'ticks',\n\n    clip: true,\n\n    /**\n     * Addition grace added to max and reduced from min data value.\n     * @since 3.0.0\n     */\n    grace: 0,\n\n    // grid line settings\n    grid: {\n      display: true,\n      lineWidth: 1,\n      drawOnChartArea: true,\n      drawTicks: true,\n      tickLength: 8,\n      tickWidth: (_ctx, options) => options.lineWidth,\n      tickColor: (_ctx, options) => options.color,\n      offset: false,\n    },\n\n    border: {\n      display: true,\n      dash: [],\n      dashOffset: 0.0,\n      width: 1\n    },\n\n    // scale title\n    title: {\n      // display property\n      display: false,\n\n      // actual label\n      text: '',\n\n      // top/bottom padding\n      padding: {\n        top: 4,\n        bottom: 4\n      }\n    },\n\n    // label settings\n    ticks: {\n      minRotation: 0,\n      maxRotation: 50,\n      mirror: false,\n      textStrokeWidth: 0,\n      textStrokeColor: '',\n      padding: 3,\n      display: true,\n      autoSkip: true,\n      autoSkipPadding: 3,\n      labelOffset: 0,\n      // We pass through arrays to be rendered as multiline labels, we convert Others to strings here.\n      callback: Ticks.formatters.values,\n      minor: {},\n      major: {},\n      align: 'center',\n      crossAlign: 'near',\n\n      showLabelBackdrop: false,\n      backdropColor: 'rgba(255, 255, 255, 0.75)',\n      backdropPadding: 2,\n    }\n  });\n\n  defaults.route('scale.ticks', 'color', '', 'color');\n  defaults.route('scale.grid', 'color', '', 'borderColor');\n  defaults.route('scale.border', 'color', '', 'borderColor');\n  defaults.route('scale.title', 'color', '', 'color');\n\n  defaults.describe('scale', {\n    _fallback: false,\n    _scriptable: (name) => !name.startsWith('before') && !name.startsWith('after') && name !== 'callback' && name !== 'parser',\n    _indexable: (name) => name !== 'borderDash' && name !== 'tickBorderDash' && name !== 'dash',\n  });\n\n  defaults.describe('scales', {\n    _fallback: 'scale',\n  });\n\n  defaults.describe('scale.ticks', {\n    _scriptable: (name) => name !== 'backdropPadding' && name !== 'callback',\n    _indexable: (name) => name !== 'backdropPadding',\n  });\n}\n","import type {\n  Chart,\n  Point,\n  FontSpec,\n  CanvasFontSpec,\n  PointStyle,\n  RenderTextOpts,\n  BackdropOptions\n} from '../types/index.js';\nimport type {\n  TRBL,\n  SplinePoint,\n  RoundedRect,\n  TRBLCorners\n} from '../types/geometric.js';\nimport {isArray, isNullOrUndef} from './helpers.core.js';\nimport {PI, TAU, HALF_PI, QUARTER_PI, TWO_THIRDS_PI, RAD_PER_DEG} from './helpers.math.js';\n\n/**\n * Converts the given font object into a CSS font string.\n * @param font - A font object.\n * @return The CSS font string. See https://developer.mozilla.org/en-US/docs/Web/CSS/font\n * @private\n */\nexport function toFontString(font: FontSpec) {\n  if (!font || isNullOrUndef(font.size) || isNullOrUndef(font.family)) {\n    return null;\n  }\n\n  return (font.style ? font.style + ' ' : '')\n\t\t+ (font.weight ? font.weight + ' ' : '')\n\t\t+ font.size + 'px '\n\t\t+ font.family;\n}\n\n/**\n * @private\n */\nexport function _measureText(\n  ctx: CanvasRenderingContext2D,\n  data: Record<string, number>,\n  gc: string[],\n  longest: number,\n  string: string\n) {\n  let textWidth = data[string];\n  if (!textWidth) {\n    textWidth = data[string] = ctx.measureText(string).width;\n    gc.push(string);\n  }\n  if (textWidth > longest) {\n    longest = textWidth;\n  }\n  return longest;\n}\n\ntype Thing = string | undefined | null\ntype Things = (Thing | Thing[])[]\n\n/**\n * @private\n */\n// eslint-disable-next-line complexity\nexport function _longestText(\n  ctx: CanvasRenderingContext2D,\n  font: string,\n  arrayOfThings: Things,\n  cache?: {data?: Record<string, number>, garbageCollect?: string[], font?: string}\n) {\n  cache = cache || {};\n  let data = cache.data = cache.data || {};\n  let gc = cache.garbageCollect = cache.garbageCollect || [];\n\n  if (cache.font !== font) {\n    data = cache.data = {};\n    gc = cache.garbageCollect = [];\n    cache.font = font;\n  }\n\n  ctx.save();\n\n  ctx.font = font;\n  let longest = 0;\n  const ilen = arrayOfThings.length;\n  let i: number, j: number, jlen: number, thing: Thing | Thing[], nestedThing: Thing | Thing[];\n  for (i = 0; i < ilen; i++) {\n    thing = arrayOfThings[i];\n\n    // Undefined strings and arrays should not be measured\n    if (thing !== undefined && thing !== null && !isArray(thing)) {\n      longest = _measureText(ctx, data, gc, longest, thing);\n    } else if (isArray(thing)) {\n      // if it is an array lets measure each element\n      // to do maybe simplify this function a bit so we can do this more recursively?\n      for (j = 0, jlen = thing.length; j < jlen; j++) {\n        nestedThing = thing[j];\n        // Undefined strings and arrays should not be measured\n        if (nestedThing !== undefined && nestedThing !== null && !isArray(nestedThing)) {\n          longest = _measureText(ctx, data, gc, longest, nestedThing);\n        }\n      }\n    }\n  }\n\n  ctx.restore();\n\n  const gcLen = gc.length / 2;\n  if (gcLen > arrayOfThings.length) {\n    for (i = 0; i < gcLen; i++) {\n      delete data[gc[i]];\n    }\n    gc.splice(0, gcLen);\n  }\n  return longest;\n}\n\n/**\n * Returns the aligned pixel value to avoid anti-aliasing blur\n * @param chart - The chart instance.\n * @param pixel - A pixel value.\n * @param width - The width of the element.\n * @returns The aligned pixel value.\n * @private\n */\nexport function _alignPixel(chart: Chart, pixel: number, width: number) {\n  const devicePixelRatio = chart.currentDevicePixelRatio;\n  const halfWidth = width !== 0 ? Math.max(width / 2, 0.5) : 0;\n  return Math.round((pixel - halfWidth) * devicePixelRatio) / devicePixelRatio + halfWidth;\n}\n\n/**\n * Clears the entire canvas.\n */\nexport function clearCanvas(canvas?: HTMLCanvasElement, ctx?: CanvasRenderingContext2D) {\n  if (!ctx && !canvas) {\n    return;\n  }\n\n  ctx = ctx || canvas.getContext('2d');\n\n  ctx.save();\n  // canvas.width and canvas.height do not consider the canvas transform,\n  // while clearRect does\n  ctx.resetTransform();\n  ctx.clearRect(0, 0, canvas.width, canvas.height);\n  ctx.restore();\n}\n\nexport interface DrawPointOptions {\n  pointStyle: PointStyle;\n  rotation?: number;\n  radius: number;\n  borderWidth: number;\n}\n\nexport function drawPoint(\n  ctx: CanvasRenderingContext2D,\n  options: DrawPointOptions,\n  x: number,\n  y: number\n) {\n  // eslint-disable-next-line @typescript-eslint/no-use-before-define\n  drawPointLegend(ctx, options, x, y, null);\n}\n\n// eslint-disable-next-line complexity\nexport function drawPointLegend(\n  ctx: CanvasRenderingContext2D,\n  options: DrawPointOptions,\n  x: number,\n  y: number,\n  w: number\n) {\n  let type: string, xOffset: number, yOffset: number, size: number, cornerRadius: number, width: number, xOffsetW: number, yOffsetW: number;\n  const style = options.pointStyle;\n  const rotation = options.rotation;\n  const radius = options.radius;\n  let rad = (rotation || 0) * RAD_PER_DEG;\n\n  if (style && typeof style === 'object') {\n    type = style.toString();\n    if (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\n      ctx.save();\n      ctx.translate(x, y);\n      ctx.rotate(rad);\n      ctx.drawImage(style, -style.width / 2, -style.height / 2, style.width, style.height);\n      ctx.restore();\n      return;\n    }\n  }\n\n  if (isNaN(radius) || radius <= 0) {\n    return;\n  }\n\n  ctx.beginPath();\n\n  switch (style) {\n  // Default includes circle\n    default:\n      if (w) {\n        ctx.ellipse(x, y, w / 2, radius, 0, 0, TAU);\n      } else {\n        ctx.arc(x, y, radius, 0, TAU);\n      }\n      ctx.closePath();\n      break;\n    case 'triangle':\n      width = w ? w / 2 : radius;\n      ctx.moveTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n      rad += TWO_THIRDS_PI;\n      ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n      rad += TWO_THIRDS_PI;\n      ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n      ctx.closePath();\n      break;\n    case 'rectRounded':\n    // NOTE: the rounded rect implementation changed to use `arc` instead of\n    // `quadraticCurveTo` since it generates better results when rect is\n    // almost a circle. 0.516 (instead of 0.5) produces results with visually\n    // closer proportion to the previous impl and it is inscribed in the\n    // circle with `radius`. For more details, see the following PRs:\n    // https://github.com/chartjs/Chart.js/issues/5597\n    // https://github.com/chartjs/Chart.js/issues/5858\n      cornerRadius = radius * 0.516;\n      size = radius - cornerRadius;\n      xOffset = Math.cos(rad + QUARTER_PI) * size;\n      xOffsetW = Math.cos(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n      yOffset = Math.sin(rad + QUARTER_PI) * size;\n      yOffsetW = Math.sin(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n      ctx.arc(x - xOffsetW, y - yOffset, cornerRadius, rad - PI, rad - HALF_PI);\n      ctx.arc(x + yOffsetW, y - xOffset, cornerRadius, rad - HALF_PI, rad);\n      ctx.arc(x + xOffsetW, y + yOffset, cornerRadius, rad, rad + HALF_PI);\n      ctx.arc(x - yOffsetW, y + xOffset, cornerRadius, rad + HALF_PI, rad + PI);\n      ctx.closePath();\n      break;\n    case 'rect':\n      if (!rotation) {\n        size = Math.SQRT1_2 * radius;\n        width = w ? w / 2 : size;\n        ctx.rect(x - width, y - size, 2 * width, 2 * size);\n        break;\n      }\n      rad += QUARTER_PI;\n    /* falls through */\n    case 'rectRot':\n      xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n      xOffset = Math.cos(rad) * radius;\n      yOffset = Math.sin(rad) * radius;\n      yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n      ctx.moveTo(x - xOffsetW, y - yOffset);\n      ctx.lineTo(x + yOffsetW, y - xOffset);\n      ctx.lineTo(x + xOffsetW, y + yOffset);\n      ctx.lineTo(x - yOffsetW, y + xOffset);\n      ctx.closePath();\n      break;\n    case 'crossRot':\n      rad += QUARTER_PI;\n    /* falls through */\n    case 'cross':\n      xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n      xOffset = Math.cos(rad) * radius;\n      yOffset = Math.sin(rad) * radius;\n      yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n      ctx.moveTo(x - xOffsetW, y - yOffset);\n      ctx.lineTo(x + xOffsetW, y + yOffset);\n      ctx.moveTo(x + yOffsetW, y - xOffset);\n      ctx.lineTo(x - yOffsetW, y + xOffset);\n      break;\n    case 'star':\n      xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n      xOffset = Math.cos(rad) * radius;\n      yOffset = Math.sin(rad) * radius;\n      yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n      ctx.moveTo(x - xOffsetW, y - yOffset);\n      ctx.lineTo(x + xOffsetW, y + yOffset);\n      ctx.moveTo(x + yOffsetW, y - xOffset);\n      ctx.lineTo(x - yOffsetW, y + xOffset);\n      rad += QUARTER_PI;\n      xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n      xOffset = Math.cos(rad) * radius;\n      yOffset = Math.sin(rad) * radius;\n      yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n      ctx.moveTo(x - xOffsetW, y - yOffset);\n      ctx.lineTo(x + xOffsetW, y + yOffset);\n      ctx.moveTo(x + yOffsetW, y - xOffset);\n      ctx.lineTo(x - yOffsetW, y + xOffset);\n      break;\n    case 'line':\n      xOffset = w ? w / 2 : Math.cos(rad) * radius;\n      yOffset = Math.sin(rad) * radius;\n      ctx.moveTo(x - xOffset, y - yOffset);\n      ctx.lineTo(x + xOffset, y + yOffset);\n      break;\n    case 'dash':\n      ctx.moveTo(x, y);\n      ctx.lineTo(x + Math.cos(rad) * (w ? w / 2 : radius), y + Math.sin(rad) * radius);\n      break;\n    case false:\n      ctx.closePath();\n      break;\n  }\n\n  ctx.fill();\n  if (options.borderWidth > 0) {\n    ctx.stroke();\n  }\n}\n\n/**\n * Returns true if the point is inside the rectangle\n * @param point - The point to test\n * @param area - The rectangle\n * @param margin - allowed margin\n * @private\n */\nexport function _isPointInArea(\n  point: Point,\n  area: TRBL,\n  margin?: number\n) {\n  margin = margin || 0.5; // margin - default is to match rounded decimals\n\n  return !area || (point && point.x > area.left - margin && point.x < area.right + margin &&\n\t\tpoint.y > area.top - margin && point.y < area.bottom + margin);\n}\n\nexport function clipArea(ctx: CanvasRenderingContext2D, area: TRBL) {\n  ctx.save();\n  ctx.beginPath();\n  ctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\n  ctx.clip();\n}\n\nexport function unclipArea(ctx: CanvasRenderingContext2D) {\n  ctx.restore();\n}\n\n/**\n * @private\n */\nexport function _steppedLineTo(\n  ctx: CanvasRenderingContext2D,\n  previous: Point,\n  target: Point,\n  flip?: boolean,\n  mode?: string\n) {\n  if (!previous) {\n    return ctx.lineTo(target.x, target.y);\n  }\n  if (mode === 'middle') {\n    const midpoint = (previous.x + target.x) / 2.0;\n    ctx.lineTo(midpoint, previous.y);\n    ctx.lineTo(midpoint, target.y);\n  } else if (mode === 'after' !== !!flip) {\n    ctx.lineTo(previous.x, target.y);\n  } else {\n    ctx.lineTo(target.x, previous.y);\n  }\n  ctx.lineTo(target.x, target.y);\n}\n\n/**\n * @private\n */\nexport function _bezierCurveTo(\n  ctx: CanvasRenderingContext2D,\n  previous: SplinePoint,\n  target: SplinePoint,\n  flip?: boolean\n) {\n  if (!previous) {\n    return ctx.lineTo(target.x, target.y);\n  }\n  ctx.bezierCurveTo(\n    flip ? previous.cp1x : previous.cp2x,\n    flip ? previous.cp1y : previous.cp2y,\n    flip ? target.cp2x : target.cp1x,\n    flip ? target.cp2y : target.cp1y,\n    target.x,\n    target.y);\n}\n\nfunction setRenderOpts(ctx: CanvasRenderingContext2D, opts: RenderTextOpts) {\n  if (opts.translation) {\n    ctx.translate(opts.translation[0], opts.translation[1]);\n  }\n\n  if (!isNullOrUndef(opts.rotation)) {\n    ctx.rotate(opts.rotation);\n  }\n\n  if (opts.color) {\n    ctx.fillStyle = opts.color;\n  }\n\n  if (opts.textAlign) {\n    ctx.textAlign = opts.textAlign;\n  }\n\n  if (opts.textBaseline) {\n    ctx.textBaseline = opts.textBaseline;\n  }\n}\n\nfunction decorateText(\n  ctx: CanvasRenderingContext2D,\n  x: number,\n  y: number,\n  line: string,\n  opts: RenderTextOpts\n) {\n  if (opts.strikethrough || opts.underline) {\n    /**\n     * Now that IE11 support has been dropped, we can use more\n     * of the TextMetrics object. The actual bounding boxes\n     * are unflagged in Chrome, Firefox, Edge, and Safari so they\n     * can be safely used.\n     * See https://developer.mozilla.org/en-US/docs/Web/API/TextMetrics#Browser_compatibility\n     */\n    const metrics = ctx.measureText(line);\n    const left = x - metrics.actualBoundingBoxLeft;\n    const right = x + metrics.actualBoundingBoxRight;\n    const top = y - metrics.actualBoundingBoxAscent;\n    const bottom = y + metrics.actualBoundingBoxDescent;\n    const yDecoration = opts.strikethrough ? (top + bottom) / 2 : bottom;\n\n    ctx.strokeStyle = ctx.fillStyle;\n    ctx.beginPath();\n    ctx.lineWidth = opts.decorationWidth || 2;\n    ctx.moveTo(left, yDecoration);\n    ctx.lineTo(right, yDecoration);\n    ctx.stroke();\n  }\n}\n\nfunction drawBackdrop(ctx: CanvasRenderingContext2D, opts: BackdropOptions) {\n  const oldColor = ctx.fillStyle;\n\n  ctx.fillStyle = opts.color as string;\n  ctx.fillRect(opts.left, opts.top, opts.width, opts.height);\n  ctx.fillStyle = oldColor;\n}\n\n/**\n * Render text onto the canvas\n */\nexport function renderText(\n  ctx: CanvasRenderingContext2D,\n  text: string | string[],\n  x: number,\n  y: number,\n  font: CanvasFontSpec,\n  opts: RenderTextOpts = {}\n) {\n  const lines = isArray(text) ? text : [text];\n  const stroke = opts.strokeWidth > 0 && opts.strokeColor !== '';\n  let i: number, line: string;\n\n  ctx.save();\n  ctx.font = font.string;\n  setRenderOpts(ctx, opts);\n\n  for (i = 0; i < lines.length; ++i) {\n    line = lines[i];\n\n    if (opts.backdrop) {\n      drawBackdrop(ctx, opts.backdrop);\n    }\n\n    if (stroke) {\n      if (opts.strokeColor) {\n        ctx.strokeStyle = opts.strokeColor;\n      }\n\n      if (!isNullOrUndef(opts.strokeWidth)) {\n        ctx.lineWidth = opts.strokeWidth;\n      }\n\n      ctx.strokeText(line, x, y, opts.maxWidth);\n    }\n\n    ctx.fillText(line, x, y, opts.maxWidth);\n    decorateText(ctx, x, y, line, opts);\n\n    y += Number(font.lineHeight);\n  }\n\n  ctx.restore();\n}\n\n/**\n * Add a path of a rectangle with rounded corners to the current sub-path\n * @param ctx - Context\n * @param rect - Bounding rect\n */\nexport function addRoundedRectPath(\n  ctx: CanvasRenderingContext2D,\n  rect: RoundedRect & { radius: TRBLCorners }\n) {\n  const {x, y, w, h, radius} = rect;\n\n  // top left arc\n  ctx.arc(x + radius.topLeft, y + radius.topLeft, radius.topLeft, 1.5 * PI, PI, true);\n\n  // line from top left to bottom left\n  ctx.lineTo(x, y + h - radius.bottomLeft);\n\n  // bottom left arc\n  ctx.arc(x + radius.bottomLeft, y + h - radius.bottomLeft, radius.bottomLeft, PI, HALF_PI, true);\n\n  // line from bottom left to bottom right\n  ctx.lineTo(x + w - radius.bottomRight, y + h);\n\n  // bottom right arc\n  ctx.arc(x + w - radius.bottomRight, y + h - radius.bottomRight, radius.bottomRight, HALF_PI, 0, true);\n\n  // line from bottom right to top right\n  ctx.lineTo(x + w, y + radius.topRight);\n\n  // top right arc\n  ctx.arc(x + w - radius.topRight, y + radius.topRight, radius.topRight, 0, -HALF_PI, true);\n\n  // line from top right to top left\n  ctx.lineTo(x + radius.topLeft, y);\n}\n","import defaults from '../core/core.defaults.js';\nimport {isArray, isObject, toDimension, valueOrDefault} from './helpers.core.js';\nimport {toFontString} from './helpers.canvas.js';\nimport type {ChartArea, FontSpec, Point} from '../types/index.js';\nimport type {TRBL, TRBLCorners} from '../types/geometric.js';\n\nconst LINE_HEIGHT = /^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/;\nconst FONT_STYLE = /^(normal|italic|initial|inherit|unset|(oblique( -?[0-9]?[0-9]deg)?))$/;\n\n/**\n * @alias Chart.helpers.options\n * @namespace\n */\n/**\n * Converts the given line height `value` in pixels for a specific font `size`.\n * @param value - The lineHeight to parse (eg. 1.6, '14px', '75%', '1.6em').\n * @param size - The font size (in pixels) used to resolve relative `value`.\n * @returns The effective line height in pixels (size * 1.2 if value is invalid).\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/line-height\n * @since 2.7.0\n */\nexport function toLineHeight(value: number | string, size: number): number {\n  const matches = ('' + value).match(LINE_HEIGHT);\n  if (!matches || matches[1] === 'normal') {\n    return size * 1.2;\n  }\n\n  value = +matches[2];\n\n  switch (matches[3]) {\n    case 'px':\n      return value;\n    case '%':\n      value /= 100;\n      break;\n    default:\n      break;\n  }\n\n  return size * value;\n}\n\nconst numberOrZero = (v: unknown) => +v || 0;\n\n/**\n * @param value\n * @param props\n */\nexport function _readValueToProps<K extends string>(value: number | Record<K, number>, props: K[]): Record<K, number>;\nexport function _readValueToProps<K extends string, T extends string>(value: number | Record<K & T, number>, props: Record<T, K>): Record<T, number>;\nexport function _readValueToProps(value: number | Record<string, number>, props: string[] | Record<string, string>) {\n  const ret = {};\n  const objProps = isObject(props);\n  const keys = objProps ? Object.keys(props) : props;\n  const read = isObject(value)\n    ? objProps\n      ? prop => valueOrDefault(value[prop], value[props[prop]])\n      : prop => value[prop]\n    : () => value;\n\n  for (const prop of keys) {\n    ret[prop] = numberOrZero(read(prop));\n  }\n  return ret;\n}\n\n/**\n * Converts the given value into a TRBL object.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left)\n * @since 3.0.0\n */\nexport function toTRBL(value: number | TRBL | Point) {\n  return _readValueToProps(value, {top: 'y', right: 'x', bottom: 'y', left: 'x'});\n}\n\n/**\n * Converts the given value into a TRBL corners object (similar with css border-radius).\n * @param value - If a number, set the value to all TRBL corner components,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n * @returns The TRBL corner values (topLeft, topRight, bottomLeft, bottomRight)\n * @since 3.0.0\n */\nexport function toTRBLCorners(value: number | TRBLCorners) {\n  return _readValueToProps(value, ['topLeft', 'topRight', 'bottomLeft', 'bottomRight']);\n}\n\n/**\n * Converts the given value into a padding object with pre-computed width/height.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left, width, height)\n * @since 2.7.0\n */\nexport function toPadding(value?: number | TRBL): ChartArea {\n  const obj = toTRBL(value) as ChartArea;\n\n  obj.width = obj.left + obj.right;\n  obj.height = obj.top + obj.bottom;\n\n  return obj;\n}\n\n/**\n * Parses font options and returns the font object.\n * @param options - A object that contains font options to be parsed.\n * @param fallback - A object that contains fallback font options.\n * @return The font object.\n * @private\n */\n\nexport function toFont(options: Partial<FontSpec>, fallback?: Partial<FontSpec>) {\n  options = options || {};\n  fallback = fallback || defaults.font as FontSpec;\n\n  let size = valueOrDefault(options.size, fallback.size);\n\n  if (typeof size === 'string') {\n    size = parseInt(size, 10);\n  }\n  let style = valueOrDefault(options.style, fallback.style);\n  if (style && !('' + style).match(FONT_STYLE)) {\n    console.warn('Invalid font style specified: \"' + style + '\"');\n    style = undefined;\n  }\n\n  const font = {\n    family: valueOrDefault(options.family, fallback.family),\n    lineHeight: toLineHeight(valueOrDefault(options.lineHeight, fallback.lineHeight), size),\n    size,\n    style,\n    weight: valueOrDefault(options.weight, fallback.weight),\n    string: ''\n  };\n\n  font.string = toFontString(font);\n  return font;\n}\n\n/**\n * Evaluates the given `inputs` sequentially and returns the first defined value.\n * @param inputs - An array of values, falling back to the last value.\n * @param context - If defined and the current value is a function, the value\n * is called with `context` as first argument and the result becomes the new input.\n * @param index - If defined and the current value is an array, the value\n * at `index` become the new input.\n * @param info - object to return information about resolution in\n * @param info.cacheable - Will be set to `false` if option is not cacheable.\n * @since 2.7.0\n */\nexport function resolve(inputs: Array<unknown>, context?: object, index?: number, info?: { cacheable: boolean }) {\n  let cacheable = true;\n  let i: number, ilen: number, value: unknown;\n\n  for (i = 0, ilen = inputs.length; i < ilen; ++i) {\n    value = inputs[i];\n    if (value === undefined) {\n      continue;\n    }\n    if (context !== undefined && typeof value === 'function') {\n      value = value(context);\n      cacheable = false;\n    }\n    if (index !== undefined && isArray(value)) {\n      value = value[index % value.length];\n      cacheable = false;\n    }\n    if (value !== undefined) {\n      if (info && !cacheable) {\n        info.cacheable = false;\n      }\n      return value;\n    }\n  }\n}\n\n/**\n * @param minmax\n * @param grace\n * @param beginAtZero\n * @private\n */\nexport function _addGrace(minmax: { min: number; max: number; }, grace: number | string, beginAtZero: boolean) {\n  const {min, max} = minmax;\n  const change = toDimension(grace, (max - min) / 2);\n  const keepZero = (value: number, add: number) => beginAtZero && value === 0 ? 0 : value + add;\n  return {\n    min: keepZero(min, -Math.abs(change)),\n    max: keepZero(max, change)\n  };\n}\n\n/**\n * Create a context inheriting parentContext\n * @param parentContext\n * @param context\n * @returns\n */\nexport function createContext<T extends object>(parentContext: null, context: T): T;\nexport function createContext<T extends object, P extends T>(parentContext: P, context: T): P & T;\nexport function createContext(parentContext: object, context: object) {\n  return Object.assign(Object.create(parentContext), context);\n}\n","/* eslint-disable @typescript-eslint/no-use-before-define */\nimport type {AnyObject} from '../types/basic.js';\nimport type {ChartMeta} from '../types/index.js';\nimport type {\n  ResolverObjectKey,\n  ResolverCache,\n  ResolverProxy,\n  DescriptorDefaults,\n  Descriptor,\n  ContextCache,\n  ContextProxy\n} from './helpers.config.types.js';\nimport {isArray, isFunction, isObject, resolveObjectKey, _capitalize} from './helpers.core.js';\n\nexport * from './helpers.config.types.js';\n\n/**\n * Creates a Proxy for resolving raw values for options.\n * @param scopes - The option scopes to look for values, in resolution order\n * @param prefixes - The prefixes for values, in resolution order.\n * @param rootScopes - The root option scopes\n * @param fallback - Parent scopes fallback\n * @param getTarget - callback for getting the target for changed values\n * @returns Proxy\n * @private\n */\nexport function _createResolver<\n  T extends AnyObject[] = AnyObject[],\n  R extends AnyObject[] = T\n>(\n  scopes: T,\n  prefixes = [''],\n  rootScopes?: R,\n  fallback?: ResolverObjectKey,\n  getTarget = () => scopes[0]\n) {\n  const finalRootScopes = rootScopes || scopes;\n  if (typeof fallback === 'undefined') {\n    fallback = _resolve('_fallback', scopes);\n  }\n  const cache: ResolverCache<T, R> = {\n    [Symbol.toStringTag]: 'Object',\n    _cacheable: true,\n    _scopes: scopes,\n    _rootScopes: finalRootScopes,\n    _fallback: fallback,\n    _getTarget: getTarget,\n    override: (scope: AnyObject) => _createResolver([scope, ...scopes], prefixes, finalRootScopes, fallback),\n  };\n  return new Proxy(cache, {\n    /**\n     * A trap for the delete operator.\n     */\n    deleteProperty(target, prop: string) {\n      delete target[prop]; // remove from cache\n      delete target._keys; // remove cached keys\n      delete scopes[0][prop]; // remove from top level scope\n      return true;\n    },\n\n    /**\n     * A trap for getting property values.\n     */\n    get(target, prop: string) {\n      return _cached(target, prop,\n        () => _resolveWithPrefixes(prop, prefixes, scopes, target));\n    },\n\n    /**\n     * A trap for Object.getOwnPropertyDescriptor.\n     * Also used by Object.hasOwnProperty.\n     */\n    getOwnPropertyDescriptor(target, prop) {\n      return Reflect.getOwnPropertyDescriptor(target._scopes[0], prop);\n    },\n\n    /**\n     * A trap for Object.getPrototypeOf.\n     */\n    getPrototypeOf() {\n      return Reflect.getPrototypeOf(scopes[0]);\n    },\n\n    /**\n     * A trap for the in operator.\n     */\n    has(target, prop: string) {\n      return getKeysFromAllScopes(target).includes(prop);\n    },\n\n    /**\n     * A trap for Object.getOwnPropertyNames and Object.getOwnPropertySymbols.\n     */\n    ownKeys(target) {\n      return getKeysFromAllScopes(target);\n    },\n\n    /**\n     * A trap for setting property values.\n     */\n    set(target, prop: string, value) {\n      const storage = target._storage || (target._storage = getTarget());\n      target[prop] = storage[prop] = value; // set to top level scope + cache\n      delete target._keys; // remove cached keys\n      return true;\n    }\n  }) as ResolverProxy<T, R>;\n}\n\n/**\n * Returns an Proxy for resolving option values with context.\n * @param proxy - The Proxy returned by `_createResolver`\n * @param context - Context object for scriptable/indexable options\n * @param subProxy - The proxy provided for scriptable options\n * @param descriptorDefaults - Defaults for descriptors\n * @private\n */\nexport function _attachContext<\n  T extends AnyObject[] = AnyObject[],\n  R extends AnyObject[] = T\n>(\n  proxy: ResolverProxy<T, R>,\n  context: AnyObject,\n  subProxy?: ResolverProxy<T, R>,\n  descriptorDefaults?: DescriptorDefaults\n) {\n  const cache: ContextCache<T, R> = {\n    _cacheable: false,\n    _proxy: proxy,\n    _context: context,\n    _subProxy: subProxy,\n    _stack: new Set(),\n    _descriptors: _descriptors(proxy, descriptorDefaults),\n    setContext: (ctx: AnyObject) => _attachContext(proxy, ctx, subProxy, descriptorDefaults),\n    override: (scope: AnyObject) => _attachContext(proxy.override(scope), context, subProxy, descriptorDefaults)\n  };\n  return new Proxy(cache, {\n    /**\n     * A trap for the delete operator.\n     */\n    deleteProperty(target, prop) {\n      delete target[prop]; // remove from cache\n      delete proxy[prop]; // remove from proxy\n      return true;\n    },\n\n    /**\n     * A trap for getting property values.\n     */\n    get(target, prop: string, receiver) {\n      return _cached(target, prop,\n        () => _resolveWithContext(target, prop, receiver));\n    },\n\n    /**\n     * A trap for Object.getOwnPropertyDescriptor.\n     * Also used by Object.hasOwnProperty.\n     */\n    getOwnPropertyDescriptor(target, prop) {\n      return target._descriptors.allKeys\n        ? Reflect.has(proxy, prop) ? {enumerable: true, configurable: true} : undefined\n        : Reflect.getOwnPropertyDescriptor(proxy, prop);\n    },\n\n    /**\n     * A trap for Object.getPrototypeOf.\n     */\n    getPrototypeOf() {\n      return Reflect.getPrototypeOf(proxy);\n    },\n\n    /**\n     * A trap for the in operator.\n     */\n    has(target, prop) {\n      return Reflect.has(proxy, prop);\n    },\n\n    /**\n     * A trap for Object.getOwnPropertyNames and Object.getOwnPropertySymbols.\n     */\n    ownKeys() {\n      return Reflect.ownKeys(proxy);\n    },\n\n    /**\n     * A trap for setting property values.\n     */\n    set(target, prop, value) {\n      proxy[prop] = value; // set to proxy\n      delete target[prop]; // remove from cache\n      return true;\n    }\n  }) as ContextProxy<T, R>;\n}\n\n/**\n * @private\n */\nexport function _descriptors(\n  proxy: ResolverCache,\n  defaults: DescriptorDefaults = {scriptable: true, indexable: true}\n): Descriptor {\n  const {_scriptable = defaults.scriptable, _indexable = defaults.indexable, _allKeys = defaults.allKeys} = proxy;\n  return {\n    allKeys: _allKeys,\n    scriptable: _scriptable,\n    indexable: _indexable,\n    isScriptable: isFunction(_scriptable) ? _scriptable : () => _scriptable,\n    isIndexable: isFunction(_indexable) ? _indexable : () => _indexable\n  };\n}\n\nconst readKey = (prefix: string, name: string) => prefix ? prefix + _capitalize(name) : name;\nconst needsSubResolver = (prop: string, value: unknown) => isObject(value) && prop !== 'adapters' &&\n  (Object.getPrototypeOf(value) === null || value.constructor === Object);\n\nfunction _cached(\n  target: AnyObject,\n  prop: string,\n  resolve: () => unknown\n) {\n  if (Object.prototype.hasOwnProperty.call(target, prop) || prop === 'constructor') {\n    return target[prop];\n  }\n\n  const value = resolve();\n  // cache the resolved value\n  target[prop] = value;\n  return value;\n}\n\nfunction _resolveWithContext(\n  target: ContextCache,\n  prop: string,\n  receiver: AnyObject\n) {\n  const {_proxy, _context, _subProxy, _descriptors: descriptors} = target;\n  let value = _proxy[prop]; // resolve from proxy\n\n  // resolve with context\n  if (isFunction(value) && descriptors.isScriptable(prop)) {\n    value = _resolveScriptable(prop, value, target, receiver);\n  }\n  if (isArray(value) && value.length) {\n    value = _resolveArray(prop, value, target, descriptors.isIndexable);\n  }\n  if (needsSubResolver(prop, value)) {\n    // if the resolved value is an object, create a sub resolver for it\n    value = _attachContext(value, _context, _subProxy && _subProxy[prop], descriptors);\n  }\n  return value;\n}\n\nfunction _resolveScriptable(\n  prop: string,\n  getValue: (ctx: AnyObject, sub: AnyObject) => unknown,\n  target: ContextCache,\n  receiver: AnyObject\n) {\n  const {_proxy, _context, _subProxy, _stack} = target;\n  if (_stack.has(prop)) {\n    throw new Error('Recursion detected: ' + Array.from(_stack).join('->') + '->' + prop);\n  }\n  _stack.add(prop);\n  let value = getValue(_context, _subProxy || receiver);\n  _stack.delete(prop);\n  if (needsSubResolver(prop, value)) {\n    // When scriptable option returns an object, create a resolver on that.\n    value = createSubResolver(_proxy._scopes, _proxy, prop, value);\n  }\n  return value;\n}\n\nfunction _resolveArray(\n  prop: string,\n  value: unknown[],\n  target: ContextCache,\n  isIndexable: (key: string) => boolean\n) {\n  const {_proxy, _context, _subProxy, _descriptors: descriptors} = target;\n\n  if (typeof _context.index !== 'undefined' && isIndexable(prop)) {\n    return value[_context.index % value.length];\n  } else if (isObject(value[0])) {\n    // Array of objects, return array or resolvers\n    const arr = value;\n    const scopes = _proxy._scopes.filter(s => s !== arr);\n    value = [];\n    for (const item of arr) {\n      const resolver = createSubResolver(scopes, _proxy, prop, item);\n      value.push(_attachContext(resolver, _context, _subProxy && _subProxy[prop], descriptors));\n    }\n  }\n  return value;\n}\n\nfunction resolveFallback(\n  fallback: ResolverObjectKey | ((prop: ResolverObjectKey, value: unknown) => ResolverObjectKey),\n  prop: ResolverObjectKey,\n  value: unknown\n) {\n  return isFunction(fallback) ? fallback(prop, value) : fallback;\n}\n\nconst getScope = (key: ResolverObjectKey, parent: AnyObject) => key === true ? parent\n  : typeof key === 'string' ? resolveObjectKey(parent, key) : undefined;\n\nfunction addScopes(\n  set: Set<AnyObject>,\n  parentScopes: AnyObject[],\n  key: ResolverObjectKey,\n  parentFallback: ResolverObjectKey,\n  value: unknown\n) {\n  for (const parent of parentScopes) {\n    const scope = getScope(key, parent);\n    if (scope) {\n      set.add(scope);\n      const fallback = resolveFallback(scope._fallback, key, value);\n      if (typeof fallback !== 'undefined' && fallback !== key && fallback !== parentFallback) {\n        // When we reach the descriptor that defines a new _fallback, return that.\n        // The fallback will resume to that new scope.\n        return fallback;\n      }\n    } else if (scope === false && typeof parentFallback !== 'undefined' && key !== parentFallback) {\n      // Fallback to `false` results to `false`, when falling back to different key.\n      // For example `interaction` from `hover` or `plugins.tooltip` and `animation` from `animations`\n      return null;\n    }\n  }\n  return false;\n}\n\nfunction createSubResolver(\n  parentScopes: AnyObject[],\n  resolver: ResolverCache,\n  prop: ResolverObjectKey,\n  value: unknown\n) {\n  const rootScopes = resolver._rootScopes;\n  const fallback = resolveFallback(resolver._fallback, prop, value);\n  const allScopes = [...parentScopes, ...rootScopes];\n  const set = new Set<AnyObject>();\n  set.add(value);\n  let key = addScopesFromKey(set, allScopes, prop, fallback || prop, value);\n  if (key === null) {\n    return false;\n  }\n  if (typeof fallback !== 'undefined' && fallback !== prop) {\n    key = addScopesFromKey(set, allScopes, fallback, key, value);\n    if (key === null) {\n      return false;\n    }\n  }\n  return _createResolver(Array.from(set), [''], rootScopes, fallback,\n    () => subGetTarget(resolver, prop as string, value));\n}\n\nfunction addScopesFromKey(\n  set: Set<AnyObject>,\n  allScopes: AnyObject[],\n  key: ResolverObjectKey,\n  fallback: ResolverObjectKey,\n  item: unknown\n) {\n  while (key) {\n    key = addScopes(set, allScopes, key, fallback, item);\n  }\n  return key;\n}\n\nfunction subGetTarget(\n  resolver: ResolverCache,\n  prop: string,\n  value: unknown\n) {\n  const parent = resolver._getTarget();\n  if (!(prop in parent)) {\n    parent[prop] = {};\n  }\n  const target = parent[prop];\n  if (isArray(target) && isObject(value)) {\n    // For array of objects, the object is used to store updated values\n    return value;\n  }\n  return target || {};\n}\n\nfunction _resolveWithPrefixes(\n  prop: string,\n  prefixes: string[],\n  scopes: AnyObject[],\n  proxy: ResolverProxy\n) {\n  let value: unknown;\n  for (const prefix of prefixes) {\n    value = _resolve(readKey(prefix, prop), scopes);\n    if (typeof value !== 'undefined') {\n      return needsSubResolver(prop, value)\n        ? createSubResolver(scopes, proxy, prop, value)\n        : value;\n    }\n  }\n}\n\nfunction _resolve(key: string, scopes: AnyObject[]) {\n  for (const scope of scopes) {\n    if (!scope) {\n      continue;\n    }\n    const value = scope[key];\n    if (typeof value !== 'undefined') {\n      return value;\n    }\n  }\n}\n\nfunction getKeysFromAllScopes(target: ResolverCache) {\n  let keys = target._keys;\n  if (!keys) {\n    keys = target._keys = resolveKeysFromAllScopes(target._scopes);\n  }\n  return keys;\n}\n\nfunction resolveKeysFromAllScopes(scopes: AnyObject[]) {\n  const set = new Set<string>();\n  for (const scope of scopes) {\n    for (const key of Object.keys(scope).filter(k => !k.startsWith('_'))) {\n      set.add(key);\n    }\n  }\n  return Array.from(set);\n}\n\nexport function _parseObjectDataRadialScale(\n  meta: ChartMeta<'line' | 'scatter'>,\n  data: AnyObject[],\n  start: number,\n  count: number\n) {\n  const {iScale} = meta;\n  const {key = 'r'} = this._parsing;\n  const parsed = new Array<{r: unknown}>(count);\n  let i: number, ilen: number, index: number, item: AnyObject;\n\n  for (i = 0, ilen = count; i < ilen; ++i) {\n    index = i + start;\n    item = data[index];\n    parsed[i] = {\n      r: iScale.parse(resolveObjectKey(item, key), index)\n    };\n  }\n  return parsed;\n}\n","import {almostEquals, distanceBetweenPoints, sign} from './helpers.math.js';\nimport {_isPointInArea} from './helpers.canvas.js';\nimport type {ChartArea} from '../types/index.js';\nimport type {SplinePoint} from '../types/geometric.js';\n\nconst EPSILON = Number.EPSILON || 1e-14;\n\ntype OptionalSplinePoint = SplinePoint | false\nconst getPoint = (points: SplinePoint[], i: number): OptionalSplinePoint => i < points.length && !points[i].skip && points[i];\nconst getValueAxis = (indexAxis: 'x' | 'y') => indexAxis === 'x' ? 'y' : 'x';\n\nexport function splineCurve(\n  firstPoint: SplinePoint,\n  middlePoint: SplinePoint,\n  afterPoint: SplinePoint,\n  t: number\n): {\n    previous: SplinePoint\n    next: SplinePoint\n  } {\n  // Props to Rob Spencer at scaled innovation for his post on splining between points\n  // http://scaledinnovation.com/analytics/splines/aboutSplines.html\n\n  // This function must also respect \"skipped\" points\n\n  const previous = firstPoint.skip ? middlePoint : firstPoint;\n  const current = middlePoint;\n  const next = afterPoint.skip ? middlePoint : afterPoint;\n  const d01 = distanceBetweenPoints(current, previous);\n  const d12 = distanceBetweenPoints(next, current);\n\n  let s01 = d01 / (d01 + d12);\n  let s12 = d12 / (d01 + d12);\n\n  // If all points are the same, s01 & s02 will be inf\n  s01 = isNaN(s01) ? 0 : s01;\n  s12 = isNaN(s12) ? 0 : s12;\n\n  const fa = t * s01; // scaling factor for triangle Ta\n  const fb = t * s12;\n\n  return {\n    previous: {\n      x: current.x - fa * (next.x - previous.x),\n      y: current.y - fa * (next.y - previous.y)\n    },\n    next: {\n      x: current.x + fb * (next.x - previous.x),\n      y: current.y + fb * (next.y - previous.y)\n    }\n  };\n}\n\n/**\n * Adjust tangents to ensure monotonic properties\n */\nfunction monotoneAdjust(points: SplinePoint[], deltaK: number[], mK: number[]) {\n  const pointsLen = points.length;\n\n  let alphaK: number, betaK: number, tauK: number, squaredMagnitude: number, pointCurrent: OptionalSplinePoint;\n  let pointAfter = getPoint(points, 0);\n  for (let i = 0; i < pointsLen - 1; ++i) {\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent || !pointAfter) {\n      continue;\n    }\n\n    if (almostEquals(deltaK[i], 0, EPSILON)) {\n      mK[i] = mK[i + 1] = 0;\n      continue;\n    }\n\n    alphaK = mK[i] / deltaK[i];\n    betaK = mK[i + 1] / deltaK[i];\n    squaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\n    if (squaredMagnitude <= 9) {\n      continue;\n    }\n\n    tauK = 3 / Math.sqrt(squaredMagnitude);\n    mK[i] = alphaK * tauK * deltaK[i];\n    mK[i + 1] = betaK * tauK * deltaK[i];\n  }\n}\n\nfunction monotoneCompute(points: SplinePoint[], mK: number[], indexAxis: 'x' | 'y' = 'x') {\n  const valueAxis = getValueAxis(indexAxis);\n  const pointsLen = points.length;\n  let delta: number, pointBefore: OptionalSplinePoint, pointCurrent: OptionalSplinePoint;\n  let pointAfter = getPoint(points, 0);\n\n  for (let i = 0; i < pointsLen; ++i) {\n    pointBefore = pointCurrent;\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent) {\n      continue;\n    }\n\n    const iPixel = pointCurrent[indexAxis];\n    const vPixel = pointCurrent[valueAxis];\n    if (pointBefore) {\n      delta = (iPixel - pointBefore[indexAxis]) / 3;\n      pointCurrent[`cp1${indexAxis}`] = iPixel - delta;\n      pointCurrent[`cp1${valueAxis}`] = vPixel - delta * mK[i];\n    }\n    if (pointAfter) {\n      delta = (pointAfter[indexAxis] - iPixel) / 3;\n      pointCurrent[`cp2${indexAxis}`] = iPixel + delta;\n      pointCurrent[`cp2${valueAxis}`] = vPixel + delta * mK[i];\n    }\n  }\n}\n\n/**\n * This function calculates Bézier control points in a similar way than |splineCurve|,\n * but preserves monotonicity of the provided data and ensures no local extremums are added\n * between the dataset discrete points due to the interpolation.\n * See : https://en.wikipedia.org/wiki/Monotone_cubic_interpolation\n */\nexport function splineCurveMonotone(points: SplinePoint[], indexAxis: 'x' | 'y' = 'x') {\n  const valueAxis = getValueAxis(indexAxis);\n  const pointsLen = points.length;\n  const deltaK: number[] = Array(pointsLen).fill(0);\n  const mK: number[] = Array(pointsLen);\n\n  // Calculate slopes (deltaK) and initialize tangents (mK)\n  let i, pointBefore: OptionalSplinePoint, pointCurrent: OptionalSplinePoint;\n  let pointAfter = getPoint(points, 0);\n\n  for (i = 0; i < pointsLen; ++i) {\n    pointBefore = pointCurrent;\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent) {\n      continue;\n    }\n\n    if (pointAfter) {\n      const slopeDelta = pointAfter[indexAxis] - pointCurrent[indexAxis];\n\n      // In the case of two points that appear at the same x pixel, slopeDeltaX is 0\n      deltaK[i] = slopeDelta !== 0 ? (pointAfter[valueAxis] - pointCurrent[valueAxis]) / slopeDelta : 0;\n    }\n    mK[i] = !pointBefore ? deltaK[i]\n      : !pointAfter ? deltaK[i - 1]\n        : (sign(deltaK[i - 1]) !== sign(deltaK[i])) ? 0\n          : (deltaK[i - 1] + deltaK[i]) / 2;\n  }\n\n  monotoneAdjust(points, deltaK, mK);\n\n  monotoneCompute(points, mK, indexAxis);\n}\n\nfunction capControlPoint(pt: number, min: number, max: number) {\n  return Math.max(Math.min(pt, max), min);\n}\n\nfunction capBezierPoints(points: SplinePoint[], area: ChartArea) {\n  let i, ilen, point, inArea, inAreaPrev;\n  let inAreaNext = _isPointInArea(points[0], area);\n  for (i = 0, ilen = points.length; i < ilen; ++i) {\n    inAreaPrev = inArea;\n    inArea = inAreaNext;\n    inAreaNext = i < ilen - 1 && _isPointInArea(points[i + 1], area);\n    if (!inArea) {\n      continue;\n    }\n    point = points[i];\n    if (inAreaPrev) {\n      point.cp1x = capControlPoint(point.cp1x, area.left, area.right);\n      point.cp1y = capControlPoint(point.cp1y, area.top, area.bottom);\n    }\n    if (inAreaNext) {\n      point.cp2x = capControlPoint(point.cp2x, area.left, area.right);\n      point.cp2y = capControlPoint(point.cp2y, area.top, area.bottom);\n    }\n  }\n}\n\n/**\n * @private\n */\nexport function _updateBezierControlPoints(\n  points: SplinePoint[],\n  options,\n  area: ChartArea,\n  loop: boolean,\n  indexAxis: 'x' | 'y'\n) {\n  let i: number, ilen: number, point: SplinePoint, controlPoints: ReturnType<typeof splineCurve>;\n\n  // Only consider points that are drawn in case the spanGaps option is used\n  if (options.spanGaps) {\n    points = points.filter((pt) => !pt.skip);\n  }\n\n  if (options.cubicInterpolationMode === 'monotone') {\n    splineCurveMonotone(points, indexAxis);\n  } else {\n    let prev = loop ? points[points.length - 1] : points[0];\n    for (i = 0, ilen = points.length; i < ilen; ++i) {\n      point = points[i];\n      controlPoints = splineCurve(\n        prev,\n        point,\n        points[Math.min(i + 1, ilen - (loop ? 0 : 1)) % ilen],\n        options.tension\n      );\n      point.cp1x = controlPoints.previous.x;\n      point.cp1y = controlPoints.previous.y;\n      point.cp2x = controlPoints.next.x;\n      point.cp2y = controlPoints.next.y;\n      prev = point;\n    }\n  }\n\n  if (options.capBezierPoints) {\n    capBezierPoints(points, area);\n  }\n}\n","import type {ChartArea, Scale} from '../types/index.js';\nimport type Chart from '../core/core.controller.js';\nimport type {ChartEvent} from '../types.js';\nimport {INFINITY} from './helpers.math.js';\n\n/**\n * Note: typedefs are auto-exported, so use a made-up `dom` namespace where\n * necessary to avoid duplicates with `export * from './helpers`; see\n * https://github.com/microsoft/TypeScript/issues/46011\n * @typedef { import('../core/core.controller.js').default } dom.Chart\n * @typedef { import('../../types').ChartEvent } ChartEvent\n */\n\n/**\n * @private\n */\nexport function _isDomSupported(): boolean {\n  return typeof window !== 'undefined' && typeof document !== 'undefined';\n}\n\n/**\n * @private\n */\nexport function _getParentNode(domNode: HTMLCanvasElement): HTMLCanvasElement {\n  let parent = domNode.parentNode;\n  if (parent && parent.toString() === '[object ShadowRoot]') {\n    parent = (parent as ShadowRoot).host;\n  }\n  return parent as HTMLCanvasElement;\n}\n\n/**\n * convert max-width/max-height values that may be percentages into a number\n * @private\n */\n\nfunction parseMaxStyle(styleValue: string | number, node: HTMLElement, parentProperty: string) {\n  let valueInPixels: number;\n  if (typeof styleValue === 'string') {\n    valueInPixels = parseInt(styleValue, 10);\n\n    if (styleValue.indexOf('%') !== -1) {\n      // percentage * size in dimension\n      valueInPixels = (valueInPixels / 100) * node.parentNode[parentProperty];\n    }\n  } else {\n    valueInPixels = styleValue;\n  }\n\n  return valueInPixels;\n}\n\nconst getComputedStyle = (element: HTMLElement): CSSStyleDeclaration =>\n  element.ownerDocument.defaultView.getComputedStyle(element, null);\n\nexport function getStyle(el: HTMLElement, property: string): string {\n  return getComputedStyle(el).getPropertyValue(property);\n}\n\nconst positions = ['top', 'right', 'bottom', 'left'];\nfunction getPositionedStyle(styles: CSSStyleDeclaration, style: string, suffix?: string): ChartArea {\n  const result = {} as ChartArea;\n  suffix = suffix ? '-' + suffix : '';\n  for (let i = 0; i < 4; i++) {\n    const pos = positions[i];\n    result[pos] = parseFloat(styles[style + '-' + pos + suffix]) || 0;\n  }\n  result.width = result.left + result.right;\n  result.height = result.top + result.bottom;\n  return result;\n}\n\nconst useOffsetPos = (x: number, y: number, target: HTMLElement | EventTarget) =>\n  (x > 0 || y > 0) && (!target || !(target as HTMLElement).shadowRoot);\n\n/**\n * @param e\n * @param canvas\n * @returns Canvas position\n */\nfunction getCanvasPosition(\n  e: Event | TouchEvent | MouseEvent,\n  canvas: HTMLCanvasElement\n): {\n    x: number;\n    y: number;\n    box: boolean;\n  } {\n  const touches = (e as TouchEvent).touches;\n  const source = (touches && touches.length ? touches[0] : e) as MouseEvent;\n  const {offsetX, offsetY} = source as MouseEvent;\n  let box = false;\n  let x, y;\n  if (useOffsetPos(offsetX, offsetY, e.target)) {\n    x = offsetX;\n    y = offsetY;\n  } else {\n    const rect = canvas.getBoundingClientRect();\n    x = source.clientX - rect.left;\n    y = source.clientY - rect.top;\n    box = true;\n  }\n  return {x, y, box};\n}\n\n/**\n * Gets an event's x, y coordinates, relative to the chart area\n * @param event\n * @param chart\n * @returns x and y coordinates of the event\n */\n\nexport function getRelativePosition(\n  event: Event | ChartEvent | TouchEvent | MouseEvent,\n  chart: Chart\n): { x: number; y: number } {\n  if ('native' in event) {\n    return event;\n  }\n\n  const {canvas, currentDevicePixelRatio} = chart;\n  const style = getComputedStyle(canvas);\n  const borderBox = style.boxSizing === 'border-box';\n  const paddings = getPositionedStyle(style, 'padding');\n  const borders = getPositionedStyle(style, 'border', 'width');\n  const {x, y, box} = getCanvasPosition(event, canvas);\n  const xOffset = paddings.left + (box && borders.left);\n  const yOffset = paddings.top + (box && borders.top);\n\n  let {width, height} = chart;\n  if (borderBox) {\n    width -= paddings.width + borders.width;\n    height -= paddings.height + borders.height;\n  }\n  return {\n    x: Math.round((x - xOffset) / width * canvas.width / currentDevicePixelRatio),\n    y: Math.round((y - yOffset) / height * canvas.height / currentDevicePixelRatio)\n  };\n}\n\nfunction getContainerSize(canvas: HTMLCanvasElement, width: number, height: number): Partial<Scale> {\n  let maxWidth: number, maxHeight: number;\n\n  if (width === undefined || height === undefined) {\n    const container = canvas && _getParentNode(canvas);\n    if (!container) {\n      width = canvas.clientWidth;\n      height = canvas.clientHeight;\n    } else {\n      const rect = container.getBoundingClientRect(); // this is the border box of the container\n      const containerStyle = getComputedStyle(container);\n      const containerBorder = getPositionedStyle(containerStyle, 'border', 'width');\n      const containerPadding = getPositionedStyle(containerStyle, 'padding');\n      width = rect.width - containerPadding.width - containerBorder.width;\n      height = rect.height - containerPadding.height - containerBorder.height;\n      maxWidth = parseMaxStyle(containerStyle.maxWidth, container, 'clientWidth');\n      maxHeight = parseMaxStyle(containerStyle.maxHeight, container, 'clientHeight');\n    }\n  }\n  return {\n    width,\n    height,\n    maxWidth: maxWidth || INFINITY,\n    maxHeight: maxHeight || INFINITY\n  };\n}\n\nconst round1 = (v: number) => Math.round(v * 10) / 10;\n\n// eslint-disable-next-line complexity\nexport function getMaximumSize(\n  canvas: HTMLCanvasElement,\n  bbWidth?: number,\n  bbHeight?: number,\n  aspectRatio?: number\n): { width: number; height: number } {\n  const style = getComputedStyle(canvas);\n  const margins = getPositionedStyle(style, 'margin');\n  const maxWidth = parseMaxStyle(style.maxWidth, canvas, 'clientWidth') || INFINITY;\n  const maxHeight = parseMaxStyle(style.maxHeight, canvas, 'clientHeight') || INFINITY;\n  const containerSize = getContainerSize(canvas, bbWidth, bbHeight);\n  let {width, height} = containerSize;\n\n  if (style.boxSizing === 'content-box') {\n    const borders = getPositionedStyle(style, 'border', 'width');\n    const paddings = getPositionedStyle(style, 'padding');\n    width -= paddings.width + borders.width;\n    height -= paddings.height + borders.height;\n  }\n  width = Math.max(0, width - margins.width);\n  height = Math.max(0, aspectRatio ? width / aspectRatio : height - margins.height);\n  width = round1(Math.min(width, maxWidth, containerSize.maxWidth));\n  height = round1(Math.min(height, maxHeight, containerSize.maxHeight));\n  if (width && !height) {\n    // https://github.com/chartjs/Chart.js/issues/4659\n    // If the canvas has width, but no height, default to aspectRatio of 2 (canvas default)\n    height = round1(width / 2);\n  }\n\n  const maintainHeight = bbWidth !== undefined || bbHeight !== undefined;\n\n  if (maintainHeight && aspectRatio && containerSize.height && height > containerSize.height) {\n    height = containerSize.height;\n    width = round1(Math.floor(height * aspectRatio));\n  }\n\n  return {width, height};\n}\n\n/**\n * @param chart\n * @param forceRatio\n * @param forceStyle\n * @returns True if the canvas context size or transformation has changed.\n */\nexport function retinaScale(\n  chart: Chart,\n  forceRatio: number,\n  forceStyle?: boolean\n): boolean | void {\n  const pixelRatio = forceRatio || 1;\n  const deviceHeight = Math.floor(chart.height * pixelRatio);\n  const deviceWidth = Math.floor(chart.width * pixelRatio);\n\n  chart.height = Math.floor(chart.height);\n  chart.width = Math.floor(chart.width);\n\n  const canvas = chart.canvas;\n\n  // If no style has been set on the canvas, the render size is used as display size,\n  // making the chart visually bigger, so let's enforce it to the \"correct\" values.\n  // See https://github.com/chartjs/Chart.js/issues/3575\n  if (canvas.style && (forceStyle || (!canvas.style.height && !canvas.style.width))) {\n    canvas.style.height = `${chart.height}px`;\n    canvas.style.width = `${chart.width}px`;\n  }\n\n  if (chart.currentDevicePixelRatio !== pixelRatio\n      || canvas.height !== deviceHeight\n      || canvas.width !== deviceWidth) {\n    chart.currentDevicePixelRatio = pixelRatio;\n    canvas.height = deviceHeight;\n    canvas.width = deviceWidth;\n    chart.ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n    return true;\n  }\n  return false;\n}\n\n/**\n * Detects support for options object argument in addEventListener.\n * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Safely_detecting_option_support\n * @private\n */\nexport const supportsEventListenerOptions = (function() {\n  let passiveSupported = false;\n  try {\n    const options = {\n      get passive() { // This function will be called when the browser attempts to access the passive property.\n        passiveSupported = true;\n        return false;\n      }\n    } as EventListenerOptions;\n\n    if (_isDomSupported()) {\n      window.addEventListener('test', null, options);\n      window.removeEventListener('test', null, options);\n    }\n  } catch (e) {\n    // continue regardless of error\n  }\n  return passiveSupported;\n}());\n\n/**\n * The \"used\" size is the final value of a dimension property after all calculations have\n * been performed. This method uses the computed style of `element` but returns undefined\n * if the computed style is not expressed in pixels. That can happen in some cases where\n * `element` has a size relative to its parent and this last one is not yet displayed,\n * for example because of `display: none` on a parent node.\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/used_value\n * @returns Size in pixels or undefined if unknown.\n */\n\nexport function readUsedSize(\n  element: HTMLElement,\n  property: 'width' | 'height'\n): number | undefined {\n  const value = getStyle(element, property);\n  const matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\n  return matches ? +matches[1] : undefined;\n}\n","import type {Point, SplinePoint} from '../types/geometric.js';\n\n/**\n * @private\n */\nexport function _pointInLine(p1: Point, p2: Point, t: number, mode?) { // eslint-disable-line @typescript-eslint/no-unused-vars\n  return {\n    x: p1.x + t * (p2.x - p1.x),\n    y: p1.y + t * (p2.y - p1.y)\n  };\n}\n\n/**\n * @private\n */\nexport function _steppedInterpolation(\n  p1: Point,\n  p2: Point,\n  t: number, mode: 'middle' | 'after' | unknown\n) {\n  return {\n    x: p1.x + t * (p2.x - p1.x),\n    y: mode === 'middle' ? t < 0.5 ? p1.y : p2.y\n      : mode === 'after' ? t < 1 ? p1.y : p2.y\n        : t > 0 ? p2.y : p1.y\n  };\n}\n\n/**\n * @private\n */\nexport function _bezierInterpolation(p1: SplinePoint, p2: SplinePoint, t: number, mode?) { // eslint-disable-line @typescript-eslint/no-unused-vars\n  const cp1 = {x: p1.cp2x, y: p1.cp2y};\n  const cp2 = {x: p2.cp1x, y: p2.cp1y};\n  const a = _pointInLine(p1, cp1, t);\n  const b = _pointInLine(cp1, cp2, t);\n  const c = _pointInLine(cp2, p2, t);\n  const d = _pointInLine(a, b, t);\n  const e = _pointInLine(b, c, t);\n  return _pointInLine(d, e, t);\n}\n","import {_angleBetween, _angleDiff, _isBetween, _normalizeAngle} from './helpers.math.js';\nimport {createContext} from './helpers.options.js';\nimport {isPatternOrGradient} from './helpers.color.js';\n\n/**\n * @typedef { import('../elements/element.line.js').default } LineElement\n * @typedef { import('../elements/element.point.js').default } PointElement\n * @typedef {{start: number, end: number, loop: boolean, style?: any}} Segment\n */\n\nfunction propertyFn(property) {\n  if (property === 'angle') {\n    return {\n      between: _angleBetween,\n      compare: _angleDiff,\n      normalize: _normalizeAngle,\n    };\n  }\n  return {\n    between: _isBetween,\n    compare: (a, b) => a - b,\n    normalize: x => x\n  };\n}\n\nfunction normalizeSegment({start, end, count, loop, style}) {\n  return {\n    start: start % count,\n    end: end % count,\n    loop: loop && (end - start + 1) % count === 0,\n    style\n  };\n}\n\nfunction getSegment(segment, points, bounds) {\n  const {property, start: startBound, end: endBound} = bounds;\n  const {between, normalize} = propertyFn(property);\n  const count = points.length;\n  // eslint-disable-next-line prefer-const\n  let {start, end, loop} = segment;\n  let i, ilen;\n\n  if (loop) {\n    start += count;\n    end += count;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      if (!between(normalize(points[start % count][property]), startBound, endBound)) {\n        break;\n      }\n      start--;\n      end--;\n    }\n    start %= count;\n    end %= count;\n  }\n\n  if (end < start) {\n    end += count;\n  }\n  return {start, end, loop, style: segment.style};\n}\n\n/**\n * Returns the sub-segment(s) of a line segment that fall in the given bounds\n * @param {object} segment\n * @param {number} segment.start - start index of the segment, referring the points array\n * @param {number} segment.end - end index of the segment, referring the points array\n * @param {boolean} segment.loop - indicates that the segment is a loop\n * @param {object} [segment.style] - segment style\n * @param {PointElement[]} points - the points that this segment refers to\n * @param {object} [bounds]\n * @param {string} bounds.property - the property of a `PointElement` we are bounding. `x`, `y` or `angle`.\n * @param {number} bounds.start - start value of the property\n * @param {number} bounds.end - end value of the property\n * @private\n **/\nexport function _boundSegment(segment, points, bounds) {\n  if (!bounds) {\n    return [segment];\n  }\n\n  const {property, start: startBound, end: endBound} = bounds;\n  const count = points.length;\n  const {compare, between, normalize} = propertyFn(property);\n  const {start, end, loop, style} = getSegment(segment, points, bounds);\n\n  const result = [];\n  let inside = false;\n  let subStart = null;\n  let value, point, prevValue;\n\n  const startIsBefore = () => between(startBound, prevValue, value) && compare(startBound, prevValue) !== 0;\n  const endIsBefore = () => compare(endBound, value) === 0 || between(endBound, prevValue, value);\n  const shouldStart = () => inside || startIsBefore();\n  const shouldStop = () => !inside || endIsBefore();\n\n  for (let i = start, prev = start; i <= end; ++i) {\n    point = points[i % count];\n\n    if (point.skip) {\n      continue;\n    }\n\n    value = normalize(point[property]);\n\n    if (value === prevValue) {\n      continue;\n    }\n\n    inside = between(value, startBound, endBound);\n\n    if (subStart === null && shouldStart()) {\n      subStart = compare(value, startBound) === 0 ? i : prev;\n    }\n\n    if (subStart !== null && shouldStop()) {\n      result.push(normalizeSegment({start: subStart, end: i, loop, count, style}));\n      subStart = null;\n    }\n    prev = i;\n    prevValue = value;\n  }\n\n  if (subStart !== null) {\n    result.push(normalizeSegment({start: subStart, end, loop, count, style}));\n  }\n\n  return result;\n}\n\n\n/**\n * Returns the segments of the line that are inside given bounds\n * @param {LineElement} line\n * @param {object} [bounds]\n * @param {string} bounds.property - the property we are bounding with. `x`, `y` or `angle`.\n * @param {number} bounds.start - start value of the `property`\n * @param {number} bounds.end - end value of the `property`\n * @private\n */\nexport function _boundSegments(line, bounds) {\n  const result = [];\n  const segments = line.segments;\n\n  for (let i = 0; i < segments.length; i++) {\n    const sub = _boundSegment(segments[i], line.points, bounds);\n    if (sub.length) {\n      result.push(...sub);\n    }\n  }\n  return result;\n}\n\n/**\n * Find start and end index of a line.\n */\nfunction findStartAndEnd(points, count, loop, spanGaps) {\n  let start = 0;\n  let end = count - 1;\n\n  if (loop && !spanGaps) {\n    // loop and not spanning gaps, first find a gap to start from\n    while (start < count && !points[start].skip) {\n      start++;\n    }\n  }\n\n  // find first non skipped point (after the first gap possibly)\n  while (start < count && points[start].skip) {\n    start++;\n  }\n\n  // if we looped to count, start needs to be 0\n  start %= count;\n\n  if (loop) {\n    // loop will go past count, if start > 0\n    end += start;\n  }\n\n  while (end > start && points[end % count].skip) {\n    end--;\n  }\n\n  // end could be more than count, normalize\n  end %= count;\n\n  return {start, end};\n}\n\n/**\n * Compute solid segments from Points, when spanGaps === false\n * @param {PointElement[]} points - the points\n * @param {number} start - start index\n * @param {number} max - max index (can go past count on a loop)\n * @param {boolean} loop - boolean indicating that this would be a loop if no gaps are found\n */\nfunction solidSegments(points, start, max, loop) {\n  const count = points.length;\n  const result = [];\n  let last = start;\n  let prev = points[start];\n  let end;\n\n  for (end = start + 1; end <= max; ++end) {\n    const cur = points[end % count];\n    if (cur.skip || cur.stop) {\n      if (!prev.skip) {\n        loop = false;\n        result.push({start: start % count, end: (end - 1) % count, loop});\n        // @ts-ignore\n        start = last = cur.stop ? end : null;\n      }\n    } else {\n      last = end;\n      if (prev.skip) {\n        start = end;\n      }\n    }\n    prev = cur;\n  }\n\n  if (last !== null) {\n    result.push({start: start % count, end: last % count, loop});\n  }\n\n  return result;\n}\n\n/**\n * Compute the continuous segments that define the whole line\n * There can be skipped points within a segment, if spanGaps is true.\n * @param {LineElement} line\n * @param {object} [segmentOptions]\n * @return {Segment[]}\n * @private\n */\nexport function _computeSegments(line, segmentOptions) {\n  const points = line.points;\n  const spanGaps = line.options.spanGaps;\n  const count = points.length;\n\n  if (!count) {\n    return [];\n  }\n\n  const loop = !!line._loop;\n  const {start, end} = findStartAndEnd(points, count, loop, spanGaps);\n\n  if (spanGaps === true) {\n    return splitByStyles(line, [{start, end, loop}], points, segmentOptions);\n  }\n\n  const max = end < start ? end + count : end;\n  const completeLoop = !!line._fullLoop && start === 0 && end === count - 1;\n  return splitByStyles(line, solidSegments(points, start, max, completeLoop), points, segmentOptions);\n}\n\n/**\n * @param {Segment[]} segments\n * @param {PointElement[]} points\n * @param {object} [segmentOptions]\n * @return {Segment[]}\n */\nfunction splitByStyles(line, segments, points, segmentOptions) {\n  if (!segmentOptions || !segmentOptions.setContext || !points) {\n    return segments;\n  }\n  return doSplitByStyles(line, segments, points, segmentOptions);\n}\n\n/**\n * @param {LineElement} line\n * @param {Segment[]} segments\n * @param {PointElement[]} points\n * @param {object} [segmentOptions]\n * @return {Segment[]}\n */\nfunction doSplitByStyles(line, segments, points, segmentOptions) {\n  const chartContext = line._chart.getContext();\n  const baseStyle = readStyle(line.options);\n  const {_datasetIndex: datasetIndex, options: {spanGaps}} = line;\n  const count = points.length;\n  const result = [];\n  let prevStyle = baseStyle;\n  let start = segments[0].start;\n  let i = start;\n\n  function addStyle(s, e, l, st) {\n    const dir = spanGaps ? -1 : 1;\n    if (s === e) {\n      return;\n    }\n    // Style can not start/end on a skipped point, adjust indices accordingly\n    s += count;\n    while (points[s % count].skip) {\n      s -= dir;\n    }\n    while (points[e % count].skip) {\n      e += dir;\n    }\n    if (s % count !== e % count) {\n      result.push({start: s % count, end: e % count, loop: l, style: st});\n      prevStyle = st;\n      start = e % count;\n    }\n  }\n\n  for (const segment of segments) {\n    start = spanGaps ? start : segment.start;\n    let prev = points[start % count];\n    let style;\n    for (i = start + 1; i <= segment.end; i++) {\n      const pt = points[i % count];\n      style = readStyle(segmentOptions.setContext(createContext(chartContext, {\n        type: 'segment',\n        p0: prev,\n        p1: pt,\n        p0DataIndex: (i - 1) % count,\n        p1DataIndex: i % count,\n        datasetIndex\n      })));\n      if (styleChanged(style, prevStyle)) {\n        addStyle(start, i - 1, segment.loop, prevStyle);\n      }\n      prev = pt;\n      prevStyle = style;\n    }\n    if (start < i - 1) {\n      addStyle(start, i - 1, segment.loop, prevStyle);\n    }\n  }\n\n  return result;\n}\n\nfunction readStyle(options) {\n  return {\n    backgroundColor: options.backgroundColor,\n    borderCapStyle: options.borderCapStyle,\n    borderDash: options.borderDash,\n    borderDashOffset: options.borderDashOffset,\n    borderJoinStyle: options.borderJoinStyle,\n    borderWidth: options.borderWidth,\n    borderColor: options.borderColor\n  };\n}\n\nfunction styleChanged(style, prevStyle) {\n  if (!prevStyle) {\n    return false;\n  }\n  const cache = [];\n  const replacer = function(key, value) {\n    if (!isPatternOrGradient(value)) {\n      return value;\n    }\n    if (!cache.includes(value)) {\n      cache.push(value);\n    }\n    return cache.indexOf(value);\n  };\n  return JSON.stringify(style, replacer) !== JSON.stringify(prevStyle, replacer);\n}\n","import {requestAnimFrame} from '../helpers/helpers.extras.js';\n\n/**\n * @typedef { import('./core.animation.js').default } Animation\n * @typedef { import('./core.controller.js').default } Chart\n */\n\n/**\n * Please use the module's default export which provides a singleton instance\n * Note: class is export for typedoc\n */\nexport class Animator {\n  constructor() {\n    this._request = null;\n    this._charts = new Map();\n    this._running = false;\n    this._lastDate = undefined;\n  }\n\n  /**\n\t * @private\n\t */\n  _notify(chart, anims, date, type) {\n    const callbacks = anims.listeners[type];\n    const numSteps = anims.duration;\n\n    callbacks.forEach(fn => fn({\n      chart,\n      initial: anims.initial,\n      numSteps,\n      currentStep: Math.min(date - anims.start, numSteps)\n    }));\n  }\n\n  /**\n\t * @private\n\t */\n  _refresh() {\n    if (this._request) {\n      return;\n    }\n    this._running = true;\n\n    this._request = requestAnimFrame.call(window, () => {\n      this._update();\n      this._request = null;\n\n      if (this._running) {\n        this._refresh();\n      }\n    });\n  }\n\n  /**\n\t * @private\n\t */\n  _update(date = Date.now()) {\n    let remaining = 0;\n\n    this._charts.forEach((anims, chart) => {\n      if (!anims.running || !anims.items.length) {\n        return;\n      }\n      const items = anims.items;\n      let i = items.length - 1;\n      let draw = false;\n      let item;\n\n      for (; i >= 0; --i) {\n        item = items[i];\n\n        if (item._active) {\n          if (item._total > anims.duration) {\n            // if the animation has been updated and its duration prolonged,\n            // update to total duration of current animations run (for progress event)\n            anims.duration = item._total;\n          }\n          item.tick(date);\n          draw = true;\n        } else {\n          // Remove the item by replacing it with last item and removing the last\n          // A lot faster than splice.\n          items[i] = items[items.length - 1];\n          items.pop();\n        }\n      }\n\n      if (draw) {\n        chart.draw();\n        this._notify(chart, anims, date, 'progress');\n      }\n\n      if (!items.length) {\n        anims.running = false;\n        this._notify(chart, anims, date, 'complete');\n        anims.initial = false;\n      }\n\n      remaining += items.length;\n    });\n\n    this._lastDate = date;\n\n    if (remaining === 0) {\n      this._running = false;\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _getAnims(chart) {\n    const charts = this._charts;\n    let anims = charts.get(chart);\n    if (!anims) {\n      anims = {\n        running: false,\n        initial: true,\n        items: [],\n        listeners: {\n          complete: [],\n          progress: []\n        }\n      };\n      charts.set(chart, anims);\n    }\n    return anims;\n  }\n\n  /**\n\t * @param {Chart} chart\n\t * @param {string} event - event name\n\t * @param {Function} cb - callback\n\t */\n  listen(chart, event, cb) {\n    this._getAnims(chart).listeners[event].push(cb);\n  }\n\n  /**\n\t * Add animations\n\t * @param {Chart} chart\n\t * @param {Animation[]} items - animations\n\t */\n  add(chart, items) {\n    if (!items || !items.length) {\n      return;\n    }\n    this._getAnims(chart).items.push(...items);\n  }\n\n  /**\n\t * Counts number of active animations for the chart\n\t * @param {Chart} chart\n\t */\n  has(chart) {\n    return this._getAnims(chart).items.length > 0;\n  }\n\n  /**\n\t * Start animating (all charts)\n\t * @param {Chart} chart\n\t */\n  start(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims) {\n      return;\n    }\n    anims.running = true;\n    anims.start = Date.now();\n    anims.duration = anims.items.reduce((acc, cur) => Math.max(acc, cur._duration), 0);\n    this._refresh();\n  }\n\n  running(chart) {\n    if (!this._running) {\n      return false;\n    }\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.running || !anims.items.length) {\n      return false;\n    }\n    return true;\n  }\n\n  /**\n\t * Stop all animations for the chart\n\t * @param {Chart} chart\n\t */\n  stop(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.items.length) {\n      return;\n    }\n    const items = anims.items;\n    let i = items.length - 1;\n\n    for (; i >= 0; --i) {\n      items[i].cancel();\n    }\n    anims.items = [];\n    this._notify(chart, anims, Date.now(), 'complete');\n  }\n\n  /**\n\t * Remove chart from Animator\n\t * @param {Chart} chart\n\t */\n  remove(chart) {\n    return this._charts.delete(chart);\n  }\n}\n\n// singleton instance\nexport default /* #__PURE__ */ new Animator();\n","import effects from '../helpers/helpers.easing.js';\nimport {resolve} from '../helpers/helpers.options.js';\nimport {color as helpersColor} from '../helpers/helpers.color.js';\n\nconst transparent = 'transparent';\nconst interpolators = {\n  boolean(from, to, factor) {\n    return factor > 0.5 ? to : from;\n  },\n  /**\n   * @param {string} from\n   * @param {string} to\n   * @param {number} factor\n   */\n  color(from, to, factor) {\n    const c0 = helpersColor(from || transparent);\n    const c1 = c0.valid && helpersColor(to || transparent);\n    return c1 && c1.valid\n      ? c1.mix(c0, factor).hexString()\n      : to;\n  },\n  number(from, to, factor) {\n    return from + (to - from) * factor;\n  }\n};\n\nexport default class Animation {\n  constructor(cfg, target, prop, to) {\n    const currentValue = target[prop];\n\n    to = resolve([cfg.to, to, currentValue, cfg.from]);\n    const from = resolve([cfg.from, currentValue, to]);\n\n    this._active = true;\n    this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n    this._easing = effects[cfg.easing] || effects.linear;\n    this._start = Math.floor(Date.now() + (cfg.delay || 0));\n    this._duration = this._total = Math.floor(cfg.duration);\n    this._loop = !!cfg.loop;\n    this._target = target;\n    this._prop = prop;\n    this._from = from;\n    this._to = to;\n    this._promises = undefined;\n  }\n\n  active() {\n    return this._active;\n  }\n\n  update(cfg, to, date) {\n    if (this._active) {\n      this._notify(false);\n\n      const currentValue = this._target[this._prop];\n      const elapsed = date - this._start;\n      const remain = this._duration - elapsed;\n      this._start = date;\n      this._duration = Math.floor(Math.max(remain, cfg.duration));\n      this._total += elapsed;\n      this._loop = !!cfg.loop;\n      this._to = resolve([cfg.to, to, currentValue, cfg.from]);\n      this._from = resolve([cfg.from, currentValue, to]);\n    }\n  }\n\n  cancel() {\n    if (this._active) {\n      // update current evaluated value, for smoother animations\n      this.tick(Date.now());\n      this._active = false;\n      this._notify(false);\n    }\n  }\n\n  tick(date) {\n    const elapsed = date - this._start;\n    const duration = this._duration;\n    const prop = this._prop;\n    const from = this._from;\n    const loop = this._loop;\n    const to = this._to;\n    let factor;\n\n    this._active = from !== to && (loop || (elapsed < duration));\n\n    if (!this._active) {\n      this._target[prop] = to;\n      this._notify(true);\n      return;\n    }\n\n    if (elapsed < 0) {\n      this._target[prop] = from;\n      return;\n    }\n\n    factor = (elapsed / duration) % 2;\n    factor = loop && factor > 1 ? 2 - factor : factor;\n    factor = this._easing(Math.min(1, Math.max(0, factor)));\n\n    this._target[prop] = this._fn(from, to, factor);\n  }\n\n  wait() {\n    const promises = this._promises || (this._promises = []);\n    return new Promise((res, rej) => {\n      promises.push({res, rej});\n    });\n  }\n\n  _notify(resolved) {\n    const method = resolved ? 'res' : 'rej';\n    const promises = this._promises || [];\n    for (let i = 0; i < promises.length; i++) {\n      promises[i][method]();\n    }\n  }\n}\n","import animator from './core.animator.js';\nimport Animation from './core.animation.js';\nimport defaults from './core.defaults.js';\nimport {isArray, isObject} from '../helpers/helpers.core.js';\n\nexport default class Animations {\n  constructor(chart, config) {\n    this._chart = chart;\n    this._properties = new Map();\n    this.configure(config);\n  }\n\n  configure(config) {\n    if (!isObject(config)) {\n      return;\n    }\n\n    const animationOptions = Object.keys(defaults.animation);\n    const animatedProps = this._properties;\n\n    Object.getOwnPropertyNames(config).forEach(key => {\n      const cfg = config[key];\n      if (!isObject(cfg)) {\n        return;\n      }\n      const resolved = {};\n      for (const option of animationOptions) {\n        resolved[option] = cfg[option];\n      }\n\n      (isArray(cfg.properties) && cfg.properties || [key]).forEach((prop) => {\n        if (prop === key || !animatedProps.has(prop)) {\n          animatedProps.set(prop, resolved);\n        }\n      });\n    });\n  }\n\n  /**\n\t * Utility to handle animation of `options`.\n\t * @private\n\t */\n  _animateOptions(target, values) {\n    const newOptions = values.options;\n    const options = resolveTargetOptions(target, newOptions);\n    if (!options) {\n      return [];\n    }\n\n    const animations = this._createAnimations(options, newOptions);\n    if (newOptions.$shared) {\n      // Going to shared options:\n      // After all animations are done, assign the shared options object to the element\n      // So any new updates to the shared options are observed\n      awaitAll(target.options.$animations, newOptions).then(() => {\n        target.options = newOptions;\n      }, () => {\n        // rejected, noop\n      });\n    }\n\n    return animations;\n  }\n\n  /**\n\t * @private\n\t */\n  _createAnimations(target, values) {\n    const animatedProps = this._properties;\n    const animations = [];\n    const running = target.$animations || (target.$animations = {});\n    const props = Object.keys(values);\n    const date = Date.now();\n    let i;\n\n    for (i = props.length - 1; i >= 0; --i) {\n      const prop = props[i];\n      if (prop.charAt(0) === '$') {\n        continue;\n      }\n\n      if (prop === 'options') {\n        animations.push(...this._animateOptions(target, values));\n        continue;\n      }\n      const value = values[prop];\n      let animation = running[prop];\n      const cfg = animatedProps.get(prop);\n\n      if (animation) {\n        if (cfg && animation.active()) {\n          // There is an existing active animation, let's update that\n          animation.update(cfg, value, date);\n          continue;\n        } else {\n          animation.cancel();\n        }\n      }\n      if (!cfg || !cfg.duration) {\n        // not animated, set directly to new value\n        target[prop] = value;\n        continue;\n      }\n\n      running[prop] = animation = new Animation(cfg, target, prop, value);\n      animations.push(animation);\n    }\n    return animations;\n  }\n\n\n  /**\n\t * Update `target` properties to new values, using configured animations\n\t * @param {object} target - object to update\n\t * @param {object} values - new target properties\n\t * @returns {boolean|undefined} - `true` if animations were started\n\t **/\n  update(target, values) {\n    if (this._properties.size === 0) {\n      // Nothing is animated, just apply the new values.\n      Object.assign(target, values);\n      return;\n    }\n\n    const animations = this._createAnimations(target, values);\n\n    if (animations.length) {\n      animator.add(this._chart, animations);\n      return true;\n    }\n  }\n}\n\nfunction awaitAll(animations, properties) {\n  const running = [];\n  const keys = Object.keys(properties);\n  for (let i = 0; i < keys.length; i++) {\n    const anim = animations[keys[i]];\n    if (anim && anim.active()) {\n      running.push(anim.wait());\n    }\n  }\n  // @ts-ignore\n  return Promise.all(running);\n}\n\nfunction resolveTargetOptions(target, newOptions) {\n  if (!newOptions) {\n    return;\n  }\n  let options = target.options;\n  if (!options) {\n    target.options = newOptions;\n    return;\n  }\n  if (options.$shared) {\n    // Going from shared options to distinct one:\n    // Create new options object containing the old shared values and start updating that.\n    target.options = options = Object.assign({}, options, {$shared: false, $animations: {}});\n  }\n  return options;\n}\n","import Animations from './core.animations.js';\nimport defaults from './core.defaults.js';\nimport {isArray, isFinite, isObject, valueOrDefault, resolveObjectKey, defined} from '../helpers/helpers.core.js';\nimport {listenArrayEvents, unlistenArrayEvents} from '../helpers/helpers.collection.js';\nimport {createContext, sign} from '../helpers/index.js';\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n * @typedef { import('./core.scale.js').default } Scale\n */\n\nfunction scaleClip(scale, allowedOverflow) {\n  const opts = scale && scale.options || {};\n  const reverse = opts.reverse;\n  const min = opts.min === undefined ? allowedOverflow : 0;\n  const max = opts.max === undefined ? allowedOverflow : 0;\n  return {\n    start: reverse ? max : min,\n    end: reverse ? min : max\n  };\n}\n\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n  if (allowedOverflow === false) {\n    return false;\n  }\n  const x = scaleClip(xScale, allowedOverflow);\n  const y = scaleClip(yScale, allowedOverflow);\n\n  return {\n    top: y.end,\n    right: x.end,\n    bottom: y.start,\n    left: x.start\n  };\n}\n\nfunction toClip(value) {\n  let t, r, b, l;\n\n  if (isObject(value)) {\n    t = value.top;\n    r = value.right;\n    b = value.bottom;\n    l = value.left;\n  } else {\n    t = r = b = l = value;\n  }\n\n  return {\n    top: t,\n    right: r,\n    bottom: b,\n    left: l,\n    disabled: value === false\n  };\n}\n\nfunction getSortedDatasetIndices(chart, filterVisible) {\n  const keys = [];\n  const metasets = chart._getSortedDatasetMetas(filterVisible);\n  let i, ilen;\n\n  for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n    keys.push(metasets[i].index);\n  }\n  return keys;\n}\n\nfunction applyStack(stack, value, dsIndex, options = {}) {\n  const keys = stack.keys;\n  const singleMode = options.mode === 'single';\n  let i, ilen, datasetIndex, otherValue;\n\n  if (value === null) {\n    return;\n  }\n\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    datasetIndex = +keys[i];\n    if (datasetIndex === dsIndex) {\n      if (options.all) {\n        continue;\n      }\n      break;\n    }\n    otherValue = stack.values[datasetIndex];\n    if (isFinite(otherValue) && (singleMode || (value === 0 || sign(value) === sign(otherValue)))) {\n      value += otherValue;\n    }\n  }\n  return value;\n}\n\nfunction convertObjectDataToArray(data, meta) {\n  const {iScale, vScale} = meta;\n  const iAxisKey = iScale.axis === 'x' ? 'x' : 'y';\n  const vAxisKey = vScale.axis === 'x' ? 'x' : 'y';\n  const keys = Object.keys(data);\n  const adata = new Array(keys.length);\n  let i, ilen, key;\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    key = keys[i];\n    adata[i] = {\n      [iAxisKey]: key,\n      [vAxisKey]: data[key]\n    };\n  }\n  return adata;\n}\n\nfunction isStacked(scale, meta) {\n  const stacked = scale && scale.options.stacked;\n  return stacked || (stacked === undefined && meta.stack !== undefined);\n}\n\nfunction getStackKey(indexScale, valueScale, meta) {\n  return `${indexScale.id}.${valueScale.id}.${meta.stack || meta.type}`;\n}\n\nfunction getUserBounds(scale) {\n  const {min, max, minDefined, maxDefined} = scale.getUserBounds();\n  return {\n    min: minDefined ? min : Number.NEGATIVE_INFINITY,\n    max: maxDefined ? max : Number.POSITIVE_INFINITY\n  };\n}\n\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n  const subStack = stacks[stackKey] || (stacks[stackKey] = {});\n  return subStack[indexValue] || (subStack[indexValue] = {});\n}\n\nfunction getLastIndexInStack(stack, vScale, positive, type) {\n  for (const meta of vScale.getMatchingVisibleMetas(type).reverse()) {\n    const value = stack[meta.index];\n    if ((positive && value > 0) || (!positive && value < 0)) {\n      return meta.index;\n    }\n  }\n\n  return null;\n}\n\nfunction updateStacks(controller, parsed) {\n  const {chart, _cachedMeta: meta} = controller;\n  const stacks = chart._stacks || (chart._stacks = {}); // map structure is {stackKey: {datasetIndex: value}}\n  const {iScale, vScale, index: datasetIndex} = meta;\n  const iAxis = iScale.axis;\n  const vAxis = vScale.axis;\n  const key = getStackKey(iScale, vScale, meta);\n  const ilen = parsed.length;\n  let stack;\n\n  for (let i = 0; i < ilen; ++i) {\n    const item = parsed[i];\n    const {[iAxis]: index, [vAxis]: value} = item;\n    const itemStacks = item._stacks || (item._stacks = {});\n    stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\n    stack[datasetIndex] = value;\n\n    stack._top = getLastIndexInStack(stack, vScale, true, meta.type);\n    stack._bottom = getLastIndexInStack(stack, vScale, false, meta.type);\n\n    const visualValues = stack._visualValues || (stack._visualValues = {});\n    visualValues[datasetIndex] = value;\n  }\n}\n\nfunction getFirstScaleId(chart, axis) {\n  const scales = chart.scales;\n  return Object.keys(scales).filter(key => scales[key].axis === axis).shift();\n}\n\nfunction createDatasetContext(parent, index) {\n  return createContext(parent,\n    {\n      active: false,\n      dataset: undefined,\n      datasetIndex: index,\n      index,\n      mode: 'default',\n      type: 'dataset'\n    }\n  );\n}\n\nfunction createDataContext(parent, index, element) {\n  return createContext(parent, {\n    active: false,\n    dataIndex: index,\n    parsed: undefined,\n    raw: undefined,\n    element,\n    index,\n    mode: 'default',\n    type: 'data'\n  });\n}\n\nfunction clearStacks(meta, items) {\n  // Not using meta.index here, because it might be already updated if the dataset changed location\n  const datasetIndex = meta.controller.index;\n  const axis = meta.vScale && meta.vScale.axis;\n  if (!axis) {\n    return;\n  }\n\n  items = items || meta._parsed;\n  for (const parsed of items) {\n    const stacks = parsed._stacks;\n    if (!stacks || stacks[axis] === undefined || stacks[axis][datasetIndex] === undefined) {\n      return;\n    }\n    delete stacks[axis][datasetIndex];\n    if (stacks[axis]._visualValues !== undefined && stacks[axis]._visualValues[datasetIndex] !== undefined) {\n      delete stacks[axis]._visualValues[datasetIndex];\n    }\n  }\n}\n\nconst isDirectUpdateMode = (mode) => mode === 'reset' || mode === 'none';\nconst cloneIfNotShared = (cached, shared) => shared ? cached : Object.assign({}, cached);\nconst createStack = (canStack, meta, chart) => canStack && !meta.hidden && meta._stacked\n  && {keys: getSortedDatasetIndices(chart, true), values: null};\n\nexport default class DatasetController {\n\n  /**\n   * @type {any}\n   */\n  static defaults = {};\n\n  /**\n   * Element type used to generate a meta dataset (e.g. Chart.element.LineElement).\n   */\n  static datasetElementType = null;\n\n  /**\n   * Element type used to generate a meta data (e.g. Chart.element.PointElement).\n   */\n  static dataElementType = null;\n\n  /**\n\t * @param {Chart} chart\n\t * @param {number} datasetIndex\n\t */\n  constructor(chart, datasetIndex) {\n    this.chart = chart;\n    this._ctx = chart.ctx;\n    this.index = datasetIndex;\n    this._cachedDataOpts = {};\n    this._cachedMeta = this.getMeta();\n    this._type = this._cachedMeta.type;\n    this.options = undefined;\n    /** @type {boolean | object} */\n    this._parsing = false;\n    this._data = undefined;\n    this._objectData = undefined;\n    this._sharedOptions = undefined;\n    this._drawStart = undefined;\n    this._drawCount = undefined;\n    this.enableOptionSharing = false;\n    this.supportsDecimation = false;\n    this.$context = undefined;\n    this._syncList = [];\n    this.datasetElementType = new.target.datasetElementType;\n    this.dataElementType = new.target.dataElementType;\n\n    this.initialize();\n  }\n\n  initialize() {\n    const meta = this._cachedMeta;\n    this.configure();\n    this.linkScales();\n    meta._stacked = isStacked(meta.vScale, meta);\n    this.addElements();\n\n    if (this.options.fill && !this.chart.isPluginEnabled('filler')) {\n      console.warn(\"Tried to use the 'fill' option without the 'Filler' plugin enabled. Please import and register the 'Filler' plugin and make sure it is not disabled in the options\");\n    }\n  }\n\n  updateIndex(datasetIndex) {\n    if (this.index !== datasetIndex) {\n      clearStacks(this._cachedMeta);\n    }\n    this.index = datasetIndex;\n  }\n\n  linkScales() {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const dataset = this.getDataset();\n\n    const chooseId = (axis, x, y, r) => axis === 'x' ? x : axis === 'r' ? r : y;\n\n    const xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n    const yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n    const rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n    const indexAxis = meta.indexAxis;\n    const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n    const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n    meta.xScale = this.getScaleForId(xid);\n    meta.yScale = this.getScaleForId(yid);\n    meta.rScale = this.getScaleForId(rid);\n    meta.iScale = this.getScaleForId(iid);\n    meta.vScale = this.getScaleForId(vid);\n  }\n\n  getDataset() {\n    return this.chart.data.datasets[this.index];\n  }\n\n  getMeta() {\n    return this.chart.getDatasetMeta(this.index);\n  }\n\n  /**\n\t * @param {string} scaleID\n\t * @return {Scale}\n\t */\n  getScaleForId(scaleID) {\n    return this.chart.scales[scaleID];\n  }\n\n  /**\n\t * @private\n\t */\n  _getOtherScale(scale) {\n    const meta = this._cachedMeta;\n    return scale === meta.iScale\n      ? meta.vScale\n      : meta.iScale;\n  }\n\n  reset() {\n    this._update('reset');\n  }\n\n  /**\n\t * @private\n\t */\n  _destroy() {\n    const meta = this._cachedMeta;\n    if (this._data) {\n      unlistenArrayEvents(this._data, this);\n    }\n    if (meta._stacked) {\n      clearStacks(meta);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _dataCheck() {\n    const dataset = this.getDataset();\n    const data = dataset.data || (dataset.data = []);\n    const _data = this._data;\n\n    // In order to correctly handle data addition/deletion animation (and thus simulate\n    // real-time charts), we need to monitor these data modifications and synchronize\n    // the internal metadata accordingly.\n\n    if (isObject(data)) {\n      const meta = this._cachedMeta;\n      this._data = convertObjectDataToArray(data, meta);\n    } else if (_data !== data) {\n      if (_data) {\n        // This case happens when the user replaced the data array instance.\n        unlistenArrayEvents(_data, this);\n        // Discard old parsed data and stacks\n        const meta = this._cachedMeta;\n        clearStacks(meta);\n        meta._parsed = [];\n      }\n      if (data && Object.isExtensible(data)) {\n        listenArrayEvents(data, this);\n      }\n      this._syncList = [];\n      this._data = data;\n    }\n  }\n\n  addElements() {\n    const meta = this._cachedMeta;\n\n    this._dataCheck();\n\n    if (this.datasetElementType) {\n      meta.dataset = new this.datasetElementType();\n    }\n  }\n\n  buildOrUpdateElements(resetNewElements) {\n    const meta = this._cachedMeta;\n    const dataset = this.getDataset();\n    let stackChanged = false;\n\n    this._dataCheck();\n\n    // make sure cached _stacked status is current\n    const oldStacked = meta._stacked;\n    meta._stacked = isStacked(meta.vScale, meta);\n\n    // detect change in stack option\n    if (meta.stack !== dataset.stack) {\n      stackChanged = true;\n      // remove values from old stack\n      clearStacks(meta);\n      meta.stack = dataset.stack;\n    }\n\n    // Re-sync meta data in case the user replaced the data array or if we missed\n    // any updates and so make sure that we handle number of datapoints changing.\n    this._resyncElements(resetNewElements);\n\n    // if stack changed, update stack values for the whole dataset\n    if (stackChanged || oldStacked !== meta._stacked) {\n      updateStacks(this, meta._parsed);\n    }\n  }\n\n  /**\n\t * Merges user-supplied and default dataset-level options\n\t * @private\n\t */\n  configure() {\n    const config = this.chart.config;\n    const scopeKeys = config.datasetScopeKeys(this._type);\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys, true);\n    this.options = config.createResolver(scopes, this.getContext());\n    this._parsing = this.options.parsing;\n    this._cachedDataOpts = {};\n  }\n\n  /**\n\t * @param {number} start\n\t * @param {number} count\n\t */\n  parse(start, count) {\n    const {_cachedMeta: meta, _data: data} = this;\n    const {iScale, _stacked} = meta;\n    const iAxis = iScale.axis;\n\n    let sorted = start === 0 && count === data.length ? true : meta._sorted;\n    let prev = start > 0 && meta._parsed[start - 1];\n    let i, cur, parsed;\n\n    if (this._parsing === false) {\n      meta._parsed = data;\n      meta._sorted = true;\n      parsed = data;\n    } else {\n      if (isArray(data[start])) {\n        parsed = this.parseArrayData(meta, data, start, count);\n      } else if (isObject(data[start])) {\n        parsed = this.parseObjectData(meta, data, start, count);\n      } else {\n        parsed = this.parsePrimitiveData(meta, data, start, count);\n      }\n\n      const isNotInOrderComparedToPrev = () => cur[iAxis] === null || (prev && cur[iAxis] < prev[iAxis]);\n      for (i = 0; i < count; ++i) {\n        meta._parsed[i + start] = cur = parsed[i];\n        if (sorted) {\n          if (isNotInOrderComparedToPrev()) {\n            sorted = false;\n          }\n          prev = cur;\n        }\n      }\n      meta._sorted = sorted;\n    }\n\n    if (_stacked) {\n      updateStacks(this, parsed);\n    }\n  }\n\n  /**\n\t * Parse array of primitive values\n\t * @param {object} meta - dataset meta\n\t * @param {array} data - data array. Example [1,3,4]\n\t * @param {number} start - start index\n\t * @param {number} count - number of items to parse\n\t * @returns {object} parsed item - item containing index and a parsed value\n\t * for each scale id.\n\t * Example: {xScale0: 0, yScale0: 1}\n\t * @protected\n\t */\n  parsePrimitiveData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const labels = iScale.getLabels();\n    const singleScale = iScale === vScale;\n    const parsed = new Array(count);\n    let i, ilen, index;\n\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      parsed[i] = {\n        [iAxis]: singleScale || iScale.parse(labels[index], index),\n        [vAxis]: vScale.parse(data[index], index)\n      };\n    }\n    return parsed;\n  }\n\n  /**\n\t * Parse array of arrays\n\t * @param {object} meta - dataset meta\n\t * @param {array} data - data array. Example [[1,2],[3,4]]\n\t * @param {number} start - start index\n\t * @param {number} count - number of items to parse\n\t * @returns {object} parsed item - item containing index and a parsed value\n\t * for each scale id.\n\t * Example: {x: 0, y: 1}\n\t * @protected\n\t */\n  parseArrayData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(item[0], index),\n        y: yScale.parse(item[1], index)\n      };\n    }\n    return parsed;\n  }\n\n  /**\n\t * Parse array of objects\n\t * @param {object} meta - dataset meta\n\t * @param {array} data - data array. Example [{x:1, y:5}, {x:2, y:10}]\n\t * @param {number} start - start index\n\t * @param {number} count - number of items to parse\n\t * @returns {object} parsed item - item containing index and a parsed value\n\t * for each scale id. _custom is optional\n\t * Example: {xScale0: 0, yScale0: 1, _custom: {r: 10, foo: 'bar'}}\n\t * @protected\n\t */\n  parseObjectData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\n        y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\n      };\n    }\n    return parsed;\n  }\n\n  /**\n\t * @protected\n\t */\n  getParsed(index) {\n    return this._cachedMeta._parsed[index];\n  }\n\n  /**\n\t * @protected\n\t */\n  getDataElement(index) {\n    return this._cachedMeta.data[index];\n  }\n\n  /**\n\t * @protected\n\t */\n  applyStack(scale, parsed, mode) {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const value = parsed[scale.axis];\n    const stack = {\n      keys: getSortedDatasetIndices(chart, true),\n      values: parsed._stacks[scale.axis]._visualValues\n    };\n    return applyStack(stack, value, meta.index, {mode});\n  }\n\n  /**\n\t * @protected\n\t */\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    const parsedValue = parsed[scale.axis];\n    let value = parsedValue === null ? NaN : parsedValue;\n    const values = stack && parsed._stacks[scale.axis];\n    if (stack && values) {\n      stack.values = values;\n      value = applyStack(stack, parsedValue, this._cachedMeta.index);\n    }\n    range.min = Math.min(range.min, value);\n    range.max = Math.max(range.max, value);\n  }\n\n  /**\n\t * @protected\n\t */\n  getMinMax(scale, canStack) {\n    const meta = this._cachedMeta;\n    const _parsed = meta._parsed;\n    const sorted = meta._sorted && scale === meta.iScale;\n    const ilen = _parsed.length;\n    const otherScale = this._getOtherScale(scale);\n    const stack = createStack(canStack, meta, this.chart);\n    const range = {min: Number.POSITIVE_INFINITY, max: Number.NEGATIVE_INFINITY};\n    const {min: otherMin, max: otherMax} = getUserBounds(otherScale);\n    let i, parsed;\n\n    function _skip() {\n      parsed = _parsed[i];\n      const otherValue = parsed[otherScale.axis];\n      return !isFinite(parsed[scale.axis]) || otherMin > otherValue || otherMax < otherValue;\n    }\n\n    for (i = 0; i < ilen; ++i) {\n      if (_skip()) {\n        continue;\n      }\n      this.updateRangeFromParsed(range, scale, parsed, stack);\n      if (sorted) {\n        // if the data is sorted, we don't need to check further from this end of array\n        break;\n      }\n    }\n    if (sorted) {\n      // in the sorted case, find first non-skipped value from other end of array\n      for (i = ilen - 1; i >= 0; --i) {\n        if (_skip()) {\n          continue;\n        }\n        this.updateRangeFromParsed(range, scale, parsed, stack);\n        break;\n      }\n    }\n    return range;\n  }\n\n  getAllParsedValues(scale) {\n    const parsed = this._cachedMeta._parsed;\n    const values = [];\n    let i, ilen, value;\n\n    for (i = 0, ilen = parsed.length; i < ilen; ++i) {\n      value = parsed[i][scale.axis];\n      if (isFinite(value)) {\n        values.push(value);\n      }\n    }\n    return values;\n  }\n\n  /**\n\t * @return {number|boolean}\n\t * @protected\n\t */\n  getMaxOverflow() {\n    return false;\n  }\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const vScale = meta.vScale;\n    const parsed = this.getParsed(index);\n    return {\n      label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n      value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n    };\n  }\n\n  /**\n\t * @private\n\t */\n  _update(mode) {\n    const meta = this._cachedMeta;\n    this.update(mode || 'default');\n    meta._clip = toClip(valueOrDefault(this.options.clip, defaultClip(meta.xScale, meta.yScale, this.getMaxOverflow())));\n  }\n\n  /**\n\t * @param {string} mode\n\t */\n  update(mode) {} // eslint-disable-line no-unused-vars\n\n  draw() {\n    const ctx = this._ctx;\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const elements = meta.data || [];\n    const area = chart.chartArea;\n    const active = [];\n    const start = this._drawStart || 0;\n    const count = this._drawCount || (elements.length - start);\n    const drawActiveElementsOnTop = this.options.drawActiveElementsOnTop;\n    let i;\n\n    if (meta.dataset) {\n      meta.dataset.draw(ctx, area, start, count);\n    }\n\n    for (i = start; i < start + count; ++i) {\n      const element = elements[i];\n      if (element.hidden) {\n        continue;\n      }\n      if (element.active && drawActiveElementsOnTop) {\n        active.push(element);\n      } else {\n        element.draw(ctx, area);\n      }\n    }\n\n    for (i = 0; i < active.length; ++i) {\n      active[i].draw(ctx, area);\n    }\n  }\n\n  /**\n\t * Returns a set of predefined style properties that should be used to represent the dataset\n\t * or the data if the index is specified\n\t * @param {number} index - data index\n\t * @param {boolean} [active] - true if hover\n\t * @return {object} style object\n\t */\n  getStyle(index, active) {\n    const mode = active ? 'active' : 'default';\n    return index === undefined && this._cachedMeta.dataset\n      ? this.resolveDatasetElementOptions(mode)\n      : this.resolveDataElementOptions(index || 0, mode);\n  }\n\n  /**\n\t * @protected\n\t */\n  getContext(index, active, mode) {\n    const dataset = this.getDataset();\n    let context;\n    if (index >= 0 && index < this._cachedMeta.data.length) {\n      const element = this._cachedMeta.data[index];\n      context = element.$context ||\n        (element.$context = createDataContext(this.getContext(), index, element));\n      context.parsed = this.getParsed(index);\n      context.raw = dataset.data[index];\n      context.index = context.dataIndex = index;\n    } else {\n      context = this.$context ||\n        (this.$context = createDatasetContext(this.chart.getContext(), this.index));\n      context.dataset = dataset;\n      context.index = context.datasetIndex = this.index;\n    }\n\n    context.active = !!active;\n    context.mode = mode;\n    return context;\n  }\n\n  /**\n\t * @param {string} [mode]\n\t * @protected\n\t */\n  resolveDatasetElementOptions(mode) {\n    return this._resolveElementOptions(this.datasetElementType.id, mode);\n  }\n\n  /**\n\t * @param {number} index\n\t * @param {string} [mode]\n\t * @protected\n\t */\n  resolveDataElementOptions(index, mode) {\n    return this._resolveElementOptions(this.dataElementType.id, mode, index);\n  }\n\n  /**\n\t * @private\n\t */\n  _resolveElementOptions(elementType, mode = 'default', index) {\n    const active = mode === 'active';\n    const cache = this._cachedDataOpts;\n    const cacheKey = elementType + '-' + mode;\n    const cached = cache[cacheKey];\n    const sharing = this.enableOptionSharing && defined(index);\n    if (cached) {\n      return cloneIfNotShared(cached, sharing);\n    }\n    const config = this.chart.config;\n    const scopeKeys = config.datasetElementScopeKeys(this._type, elementType);\n    const prefixes = active ? [`${elementType}Hover`, 'hover', elementType, ''] : [elementType, ''];\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n    const names = Object.keys(defaults.elements[elementType]);\n    // context is provided as a function, and is called only if needed,\n    // so we don't create a context for each element if not needed.\n    const context = () => this.getContext(index, active, mode);\n    const values = config.resolveNamedOptions(scopes, names, context, prefixes);\n\n    if (values.$shared) {\n      // `$shared` indicates this set of options can be shared between multiple elements.\n      // Sharing is used to reduce number of properties to change during animation.\n      values.$shared = sharing;\n\n      // We cache options by `mode`, which can be 'active' for example. This enables us\n      // to have the 'active' element options and 'default' options to switch between\n      // when interacting.\n      cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n    }\n\n    return values;\n  }\n\n\n  /**\n\t * @private\n\t */\n  _resolveAnimations(index, transition, active) {\n    const chart = this.chart;\n    const cache = this._cachedDataOpts;\n    const cacheKey = `animation-${transition}`;\n    const cached = cache[cacheKey];\n    if (cached) {\n      return cached;\n    }\n    let options;\n    if (chart.options.animation !== false) {\n      const config = this.chart.config;\n      const scopeKeys = config.datasetAnimationScopeKeys(this._type, transition);\n      const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n      options = config.createResolver(scopes, this.getContext(index, active, transition));\n    }\n    const animations = new Animations(chart, options && options.animations);\n    if (options && options._cacheable) {\n      cache[cacheKey] = Object.freeze(animations);\n    }\n    return animations;\n  }\n\n  /**\n\t * Utility for getting the options object shared between elements\n\t * @protected\n\t */\n  getSharedOptions(options) {\n    if (!options.$shared) {\n      return;\n    }\n    return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n  }\n\n  /**\n\t * Utility for determining if `options` should be included in the updated properties\n\t * @protected\n\t */\n  includeOptions(mode, sharedOptions) {\n    return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n  }\n\n  /**\n   * @todo v4, rename to getSharedOptions and remove excess functions\n   */\n  _getSharedOptions(start, mode) {\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const previouslySharedOptions = this._sharedOptions;\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions) || (sharedOptions !== previouslySharedOptions);\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n    return {sharedOptions, includeOptions};\n  }\n\n  /**\n\t * Utility for updating an element with new properties, using animations when appropriate.\n\t * @protected\n\t */\n  updateElement(element, index, properties, mode) {\n    if (isDirectUpdateMode(mode)) {\n      Object.assign(element, properties);\n    } else {\n      this._resolveAnimations(index, mode).update(element, properties);\n    }\n  }\n\n  /**\n\t * Utility to animate the shared options, that are potentially affecting multiple elements.\n\t * @protected\n\t */\n  updateSharedOptions(sharedOptions, mode, newOptions) {\n    if (sharedOptions && !isDirectUpdateMode(mode)) {\n      this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _setStyle(element, index, mode, active) {\n    element.active = active;\n    const options = this.getStyle(index, active);\n    this._resolveAnimations(index, mode, active).update(element, {\n      // When going from active to inactive, we need to update to the shared options.\n      // This way the once hovered element will end up with the same original shared options instance, after animation.\n      options: (!active && this.getSharedOptions(options)) || options\n    });\n  }\n\n  removeHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', false);\n  }\n\n  setHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', true);\n  }\n\n  /**\n\t * @private\n\t */\n  _removeDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n\n    if (element) {\n      this._setStyle(element, undefined, 'active', false);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _setDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n\n    if (element) {\n      this._setStyle(element, undefined, 'active', true);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _resyncElements(resetNewElements) {\n    const data = this._data;\n    const elements = this._cachedMeta.data;\n\n    // Apply changes detected through array listeners\n    for (const [method, arg1, arg2] of this._syncList) {\n      this[method](arg1, arg2);\n    }\n    this._syncList = [];\n\n    const numMeta = elements.length;\n    const numData = data.length;\n    const count = Math.min(numData, numMeta);\n\n    if (count) {\n      // TODO: It is not optimal to always parse the old data\n      // This is done because we are not detecting direct assignments:\n      // chart.data.datasets[0].data[5] = 10;\n      // chart.data.datasets[0].data[5].y = 10;\n      this.parse(0, count);\n    }\n\n    if (numData > numMeta) {\n      this._insertElements(numMeta, numData - numMeta, resetNewElements);\n    } else if (numData < numMeta) {\n      this._removeElements(numData, numMeta - numData);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _insertElements(start, count, resetNewElements = true) {\n    const meta = this._cachedMeta;\n    const data = meta.data;\n    const end = start + count;\n    let i;\n\n    const move = (arr) => {\n      arr.length += count;\n      for (i = arr.length - 1; i >= end; i--) {\n        arr[i] = arr[i - count];\n      }\n    };\n    move(data);\n\n    for (i = start; i < end; ++i) {\n      data[i] = new this.dataElementType();\n    }\n\n    if (this._parsing) {\n      move(meta._parsed);\n    }\n    this.parse(start, count);\n\n    if (resetNewElements) {\n      this.updateElements(data, start, count, 'reset');\n    }\n  }\n\n  updateElements(element, start, count, mode) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * @private\n\t */\n  _removeElements(start, count) {\n    const meta = this._cachedMeta;\n    if (this._parsing) {\n      const removed = meta._parsed.splice(start, count);\n      if (meta._stacked) {\n        clearStacks(meta, removed);\n      }\n    }\n    meta.data.splice(start, count);\n  }\n\n  /**\n\t * @private\n   */\n  _sync(args) {\n    if (this._parsing) {\n      this._syncList.push(args);\n    } else {\n      const [method, arg1, arg2] = args;\n      this[method](arg1, arg2);\n    }\n    this.chart._dataChanges.push([this.index, ...args]);\n  }\n\n  _onDataPush() {\n    const count = arguments.length;\n    this._sync(['_insertElements', this.getDataset().data.length - count, count]);\n  }\n\n  _onDataPop() {\n    this._sync(['_removeElements', this._cachedMeta.data.length - 1, 1]);\n  }\n\n  _onDataShift() {\n    this._sync(['_removeElements', 0, 1]);\n  }\n\n  _onDataSplice(start, count) {\n    if (count) {\n      this._sync(['_removeElements', start, count]);\n    }\n    const newCount = arguments.length - 2;\n    if (newCount) {\n      this._sync(['_insertElements', start, newCount]);\n    }\n  }\n\n  _onDataUnshift() {\n    this._sync(['_insertElements', 0, arguments.length]);\n  }\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {isNullOrUndef} from '../helpers/index.js';\nimport {isNumber} from '../helpers/helpers.math.js';\nimport {_getStartAndCountOfVisiblePoints, _scaleRangesChanged} from '../helpers/helpers.extras.js';\n\nexport default class LineController extends DatasetController {\n\n  static id = 'line';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: 'line',\n    dataElementType: 'point',\n\n    showLine: true,\n    spanGaps: false,\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    scales: {\n      _index_: {\n        type: 'category',\n      },\n      _value_: {\n        type: 'linear',\n      },\n    }\n  };\n\n  initialize() {\n    this.enableOptionSharing = true;\n    this.supportsDecimation = true;\n    super.initialize();\n  }\n\n  update(mode) {\n    const meta = this._cachedMeta;\n    const {dataset: line, data: points = [], _dataset} = meta;\n    // @ts-ignore\n    const animationsDisabled = this.chart._animationsDisabled;\n    let {start, count} = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n\n    this._drawStart = start;\n    this._drawCount = count;\n\n    if (_scaleRangesChanged(meta)) {\n      start = 0;\n      count = points.length;\n    }\n\n    // Update Line\n    line._chart = this.chart;\n    line._datasetIndex = this.index;\n    line._decimated = !!_dataset._decimated;\n    line.points = points;\n\n    const options = this.resolveDatasetElementOptions(mode);\n    if (!this.options.showLine) {\n      options.borderWidth = 0;\n    }\n    options.segment = this.options.segment;\n    this.updateElement(line, undefined, {\n      animated: !animationsDisabled,\n      options\n    }, mode);\n\n    // Update Points\n    this.updateElements(points, start, count, mode);\n  }\n\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale, _stacked, _dataset} = this._cachedMeta;\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const {spanGaps, segment} = this.options;\n    const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n    const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n    const end = start + count;\n    const pointsCount = points.length;\n    let prevParsed = start > 0 && this.getParsed(start - 1);\n\n    for (let i = 0; i < pointsCount; ++i) {\n      const point = points[i];\n      const properties = directUpdate ? point : {};\n\n      if (i < start || i >= end) {\n        properties.skip = true;\n        continue;\n      }\n\n      const parsed = this.getParsed(i);\n      const nullData = isNullOrUndef(parsed[vAxis]);\n      const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n      const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n\n      properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n      properties.stop = i > 0 && (Math.abs(parsed[iAxis] - prevParsed[iAxis])) > maxGapLength;\n      if (segment) {\n        properties.parsed = parsed;\n        properties.raw = _dataset.data[i];\n      }\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      }\n\n      if (!directUpdate) {\n        this.updateElement(point, i, properties, mode);\n      }\n\n      prevParsed = parsed;\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  getMaxOverflow() {\n    const meta = this._cachedMeta;\n    const dataset = meta.dataset;\n    const border = dataset.options && dataset.options.borderWidth || 0;\n    const data = meta.data || [];\n    if (!data.length) {\n      return border;\n    }\n    const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n    const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n    return Math.max(border, firstPoint, lastPoint) / 2;\n  }\n\n  draw() {\n    const meta = this._cachedMeta;\n    meta.dataset.updateControlPoints(this.chart.chartArea, meta.iScale.axis);\n    super.draw();\n  }\n}\n","/**\n * @namespace Chart._adapters\n * @since 2.8.0\n * @private\n */\n\nimport type {AnyObject} from '../types/basic.js';\nimport type {ChartOptions} from '../types/index.js';\n\nexport type TimeUnit = 'millisecond' | 'second' | 'minute' | 'hour' | 'day' | 'week' | 'month' | 'quarter' | 'year';\n\nexport interface DateAdapter<T extends AnyObject = AnyObject> {\n  readonly options: T;\n  /**\n   * Will called with chart options after adapter creation.\n   */\n  init(this: DateAdapter<T>, chartOptions: ChartOptions): void;\n  /**\n   * Returns a map of time formats for the supported formatting units defined\n   * in Unit as well as 'datetime' representing a detailed date/time string.\n   */\n  formats(this: DateAdapter<T>): Record<string, string>;\n  /**\n   * Parses the given `value` and return the associated timestamp.\n   * @param value - the value to parse (usually comes from the data)\n   * @param [format] - the expected data format\n   */\n  parse(this: DateAdapter<T>, value: unknown, format?: TimeUnit): number | null;\n  /**\n   * Returns the formatted date in the specified `format` for a given `timestamp`.\n   * @param timestamp - the timestamp to format\n   * @param format - the date/time token\n   */\n  format(this: DateAdapter<T>, timestamp: number, format: TimeUnit): string;\n  /**\n   * Adds the specified `amount` of `unit` to the given `timestamp`.\n   * @param timestamp - the input timestamp\n   * @param amount - the amount to add\n   * @param unit - the unit as string\n   */\n  add(this: DateAdapter<T>, timestamp: number, amount: number, unit: TimeUnit): number;\n  /**\n   * Returns the number of `unit` between the given timestamps.\n   * @param a - the input timestamp (reference)\n   * @param b - the timestamp to subtract\n   * @param unit - the unit as string\n   */\n  diff(this: DateAdapter<T>, a: number, b: number, unit: TimeUnit): number;\n  /**\n   * Returns start of `unit` for the given `timestamp`.\n   * @param timestamp - the input timestamp\n   * @param unit - the unit as string\n   * @param [weekday] - the ISO day of the week with 1 being Monday\n   * and 7 being Sunday (only needed if param *unit* is `isoWeek`).\n   */\n  startOf(this: DateAdapter<T>, timestamp: number, unit: TimeUnit | 'isoWeek', weekday?: number): number;\n  /**\n   * Returns end of `unit` for the given `timestamp`.\n   * @param timestamp - the input timestamp\n   * @param unit - the unit as string\n   */\n  endOf(this: DateAdapter<T>, timestamp: number, unit: TimeUnit | 'isoWeek'): number;\n}\n\nfunction abstract<T = void>(): T {\n  throw new Error('This method is not implemented: Check that a complete date adapter is provided.');\n}\n\n/**\n * Date adapter (current used by the time scale)\n * @namespace Chart._adapters._date\n * @memberof Chart._adapters\n * @private\n */\nclass DateAdapterBase implements DateAdapter {\n\n  /**\n   * Override default date adapter methods.\n   * Accepts type parameter to define options type.\n   * @example\n   * Chart._adapters._date.override<{myAdapterOption: string}>({\n   *   init() {\n   *     console.log(this.options.myAdapterOption);\n   *   }\n   * })\n   */\n  static override<T extends AnyObject = AnyObject>(\n    members: Partial<Omit<DateAdapter<T>, 'options'>>\n  ) {\n    Object.assign(DateAdapterBase.prototype, members);\n  }\n\n  readonly options: AnyObject;\n\n  constructor(options: AnyObject) {\n    this.options = options || {};\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  init() {}\n\n  formats(): Record<string, string> {\n    return abstract();\n  }\n\n  parse(): number | null {\n    return abstract();\n  }\n\n  format(): string {\n    return abstract();\n  }\n\n  add(): number {\n    return abstract();\n  }\n\n  diff(): number {\n    return abstract();\n  }\n\n  startOf(): number {\n    return abstract();\n  }\n\n  endOf(): number {\n    return abstract();\n  }\n}\n\nexport default {\n  _date: DateAdapterBase\n};\n","import {_lookupByKey, _rlookupByKey} from '../helpers/helpers.collection.js';\nimport {getRelativePosition} from '../helpers/helpers.dom.js';\nimport {_angleBetween, getAngleFromPoint} from '../helpers/helpers.math.js';\nimport {_isPointInArea} from '../helpers/index.js';\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n * @typedef {{axis?: string, intersect?: boolean, includeInvisible?: boolean}} InteractionOptions\n * @typedef {{datasetIndex: number, index: number, element: import('./core.element.js').default}} InteractionItem\n * @typedef { import('../types/index.js').Point } Point\n */\n\n/**\n * Helper function to do binary search when possible\n * @param {object} metaset - the dataset meta\n * @param {string} axis - the axis mode. x|y|xy|r\n * @param {number} value - the value to find\n * @param {boolean} [intersect] - should the element intersect\n * @returns {{lo:number, hi:number}} indices to search data array between\n */\nfunction binarySearch(metaset, axis, value, intersect) {\n  const {controller, data, _sorted} = metaset;\n  const iScale = controller._cachedMeta.iScale;\n  if (iScale && axis === iScale.axis && axis !== 'r' && _sorted && data.length) {\n    const lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\n    if (!intersect) {\n      return lookupMethod(data, axis, value);\n    } else if (controller._sharedOptions) {\n      // _sharedOptions indicates that each element has equal options -> equal proportions\n      // So we can do a ranged binary search based on the range of first element and\n      // be confident to get the full range of indices that can intersect with the value.\n      const el = data[0];\n      const range = typeof el.getRange === 'function' && el.getRange(axis);\n      if (range) {\n        const start = lookupMethod(data, axis, value - range);\n        const end = lookupMethod(data, axis, value + range);\n        return {lo: start.lo, hi: end.hi};\n      }\n    }\n  }\n  // Default to all elements, when binary search can not be used.\n  return {lo: 0, hi: data.length - 1};\n}\n\n/**\n * Helper function to select candidate elements for interaction\n * @param {Chart} chart - the chart\n * @param {string} axis - the axis mode. x|y|xy|r\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {function} handler - the callback to execute for each visible item\n * @param {boolean} [intersect] - consider intersecting items\n */\nfunction evaluateInteractionItems(chart, axis, position, handler, intersect) {\n  const metasets = chart.getSortedVisibleDatasetMetas();\n  const value = position[axis];\n  for (let i = 0, ilen = metasets.length; i < ilen; ++i) {\n    const {index, data} = metasets[i];\n    const {lo, hi} = binarySearch(metasets[i], axis, value, intersect);\n    for (let j = lo; j <= hi; ++j) {\n      const element = data[j];\n      if (!element.skip) {\n        handler(element, index, j);\n      }\n    }\n  }\n}\n\n/**\n * Get a distance metric function for two points based on the\n * axis mode setting\n * @param {string} axis - the axis mode. x|y|xy|r\n */\nfunction getDistanceMetricForAxis(axis) {\n  const useX = axis.indexOf('x') !== -1;\n  const useY = axis.indexOf('y') !== -1;\n\n  return function(pt1, pt2) {\n    const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n    const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n    return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n  };\n}\n\n/**\n * Helper function to get the items that intersect the event position\n * @param {Chart} chart - the chart\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axis mode. x|y|xy|r\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @param {boolean} [includeInvisible] - include invisible points that are outside of the chart area\n * @return {InteractionItem[]} the nearest items\n */\nfunction getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) {\n  const items = [];\n\n  if (!includeInvisible && !chart.isPointInArea(position)) {\n    return items;\n  }\n\n  const evaluationFunc = function(element, datasetIndex, index) {\n    if (!includeInvisible && !_isPointInArea(element, chart.chartArea, 0)) {\n      return;\n    }\n    if (element.inRange(position.x, position.y, useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n    }\n  };\n\n  evaluateInteractionItems(chart, axis, position, evaluationFunc, true);\n  return items;\n}\n\n/**\n * Helper function to get the items nearest to the event position for a radial chart\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axes along which to measure distance\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @return {InteractionItem[]} the nearest items\n */\nfunction getNearestRadialItems(chart, position, axis, useFinalPosition) {\n  let items = [];\n\n  function evaluationFunc(element, datasetIndex, index) {\n    const {startAngle, endAngle} = element.getProps(['startAngle', 'endAngle'], useFinalPosition);\n    const {angle} = getAngleFromPoint(element, {x: position.x, y: position.y});\n\n    if (_angleBetween(angle, startAngle, endAngle)) {\n      items.push({element, datasetIndex, index});\n    }\n  }\n\n  evaluateInteractionItems(chart, axis, position, evaluationFunc);\n  return items;\n}\n\n/**\n * Helper function to get the items nearest to the event position for a cartesian chart\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axes along which to measure distance\n * @param {boolean} [intersect] - if true, only consider items that intersect the position\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @param {boolean} [includeInvisible] - include invisible points that are outside of the chart area\n * @return {InteractionItem[]} the nearest items\n */\nfunction getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n  let items = [];\n  const distanceMetric = getDistanceMetricForAxis(axis);\n  let minDistance = Number.POSITIVE_INFINITY;\n\n  function evaluationFunc(element, datasetIndex, index) {\n    const inRange = element.inRange(position.x, position.y, useFinalPosition);\n    if (intersect && !inRange) {\n      return;\n    }\n\n    const center = element.getCenterPoint(useFinalPosition);\n    const pointInArea = !!includeInvisible || chart.isPointInArea(center);\n    if (!pointInArea && !inRange) {\n      return;\n    }\n\n    const distance = distanceMetric(position, center);\n    if (distance < minDistance) {\n      items = [{element, datasetIndex, index}];\n      minDistance = distance;\n    } else if (distance === minDistance) {\n      // Can have multiple items at the same distance in which case we sort by size\n      items.push({element, datasetIndex, index});\n    }\n  }\n\n  evaluateInteractionItems(chart, axis, position, evaluationFunc);\n  return items;\n}\n\n/**\n * Helper function to get the items nearest to the event position considering all visible items in the chart\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axes along which to measure distance\n * @param {boolean} [intersect] - if true, only consider items that intersect the position\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @param {boolean} [includeInvisible] - include invisible points that are outside of the chart area\n * @return {InteractionItem[]} the nearest items\n */\nfunction getNearestItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n  if (!includeInvisible && !chart.isPointInArea(position)) {\n    return [];\n  }\n\n  return axis === 'r' && !intersect\n    ? getNearestRadialItems(chart, position, axis, useFinalPosition)\n    : getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible);\n}\n\n/**\n * Helper function to get the items matching along the given X or Y axis\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axis to match\n * @param {boolean} [intersect] - if true, only consider items that intersect the position\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @return {InteractionItem[]} the nearest items\n */\nfunction getAxisItems(chart, position, axis, intersect, useFinalPosition) {\n  const items = [];\n  const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n  let intersectsItem = false;\n\n  evaluateInteractionItems(chart, axis, position, (element, datasetIndex, index) => {\n    if (element[rangeMethod] && element[rangeMethod](position[axis], useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n      intersectsItem = intersectsItem || element.inRange(position.x, position.y, useFinalPosition);\n    }\n  });\n\n  // If we want to trigger on an intersect and we don't have any items\n  // that intersect the position, return nothing\n  if (intersect && !intersectsItem) {\n    return [];\n  }\n  return items;\n}\n\n/**\n * Contains interaction related functions\n * @namespace Chart.Interaction\n */\nexport default {\n  // Part of the public API to facilitate developers creating their own modes\n  evaluateInteractionItems,\n\n  // Helper function for different modes\n  modes: {\n    /**\n\t\t * Returns items at the same index. If the options.intersect parameter is true, we only return items if we intersect something\n\t\t * If the options.intersect mode is false, we find the nearest item and return the items at the same index as that item\n\t\t * @function Chart.Interaction.modes.index\n\t\t * @since v2.4.0\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    index(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      // Default axis for index mode is 'x' to match old behaviour\n      const axis = options.axis || 'x';\n      const includeInvisible = options.includeInvisible || false;\n      const items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible)\n        : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n      const elements = [];\n\n      if (!items.length) {\n        return [];\n      }\n\n      chart.getSortedVisibleDatasetMetas().forEach((meta) => {\n        const index = items[0].index;\n        const element = meta.data[index];\n\n        // don't count items that are skipped (null data)\n        if (element && !element.skip) {\n          elements.push({element, datasetIndex: meta.index, index});\n        }\n      });\n\n      return elements;\n    },\n\n    /**\n\t\t * Returns items in the same dataset. If the options.intersect parameter is true, we only return items if we intersect something\n\t\t * If the options.intersect is false, we find the nearest item and return the items in that dataset\n\t\t * @function Chart.Interaction.modes.dataset\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    dataset(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      let items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) :\n        getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n\n      if (items.length > 0) {\n        const datasetIndex = items[0].datasetIndex;\n        const data = chart.getDatasetMeta(datasetIndex).data;\n        items = [];\n        for (let i = 0; i < data.length; ++i) {\n          items.push({element: data[i], datasetIndex, index: i});\n        }\n      }\n\n      return items;\n    },\n\n    /**\n\t\t * Point mode returns all elements that hit test based on the event position\n\t\t * of the event\n\t\t * @function Chart.Interaction.modes.intersect\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    point(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      return getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible);\n    },\n\n    /**\n\t\t * nearest mode returns the element closest to the point\n\t\t * @function Chart.Interaction.modes.intersect\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    nearest(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      return getNearestItems(chart, position, axis, options.intersect, useFinalPosition, includeInvisible);\n    },\n\n    /**\n\t\t * x mode returns the elements that hit-test at the current x coordinate\n\t\t * @function Chart.Interaction.modes.x\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    x(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      return getAxisItems(chart, position, 'x', options.intersect, useFinalPosition);\n    },\n\n    /**\n\t\t * y mode returns the elements that hit-test at the current y coordinate\n\t\t * @function Chart.Interaction.modes.y\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    y(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      return getAxisItems(chart, position, 'y', options.intersect, useFinalPosition);\n    }\n  }\n};\n","import {defined, each, isObject} from '../helpers/helpers.core.js';\nimport {toPadding} from '../helpers/helpers.options.js';\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n */\n\nconst STATIC_POSITIONS = ['left', 'top', 'right', 'bottom'];\n\nfunction filterByPosition(array, position) {\n  return array.filter(v => v.pos === position);\n}\n\nfunction filterDynamicPositionByAxis(array, axis) {\n  return array.filter(v => STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\n}\n\nfunction sortByWeight(array, reverse) {\n  return array.sort((a, b) => {\n    const v0 = reverse ? b : a;\n    const v1 = reverse ? a : b;\n    return v0.weight === v1.weight ?\n      v0.index - v1.index :\n      v0.weight - v1.weight;\n  });\n}\n\nfunction wrapBoxes(boxes) {\n  const layoutBoxes = [];\n  let i, ilen, box, pos, stack, stackWeight;\n\n  for (i = 0, ilen = (boxes || []).length; i < ilen; ++i) {\n    box = boxes[i];\n    ({position: pos, options: {stack, stackWeight = 1}} = box);\n    layoutBoxes.push({\n      index: i,\n      box,\n      pos,\n      horizontal: box.isHorizontal(),\n      weight: box.weight,\n      stack: stack && (pos + stack),\n      stackWeight\n    });\n  }\n  return layoutBoxes;\n}\n\nfunction buildStacks(layouts) {\n  const stacks = {};\n  for (const wrap of layouts) {\n    const {stack, pos, stackWeight} = wrap;\n    if (!stack || !STATIC_POSITIONS.includes(pos)) {\n      continue;\n    }\n    const _stack = stacks[stack] || (stacks[stack] = {count: 0, placed: 0, weight: 0, size: 0});\n    _stack.count++;\n    _stack.weight += stackWeight;\n  }\n  return stacks;\n}\n\n/**\n * store dimensions used instead of available chartArea in fitBoxes\n **/\nfunction setLayoutDims(layouts, params) {\n  const stacks = buildStacks(layouts);\n  const {vBoxMaxWidth, hBoxMaxHeight} = params;\n  let i, ilen, layout;\n  for (i = 0, ilen = layouts.length; i < ilen; ++i) {\n    layout = layouts[i];\n    const {fullSize} = layout.box;\n    const stack = stacks[layout.stack];\n    const factor = stack && layout.stackWeight / stack.weight;\n    if (layout.horizontal) {\n      layout.width = factor ? factor * vBoxMaxWidth : fullSize && params.availableWidth;\n      layout.height = hBoxMaxHeight;\n    } else {\n      layout.width = vBoxMaxWidth;\n      layout.height = factor ? factor * hBoxMaxHeight : fullSize && params.availableHeight;\n    }\n  }\n  return stacks;\n}\n\nfunction buildLayoutBoxes(boxes) {\n  const layoutBoxes = wrapBoxes(boxes);\n  const fullSize = sortByWeight(layoutBoxes.filter(wrap => wrap.box.fullSize), true);\n  const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n  const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n  const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n  const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n  const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n  const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n\n  return {\n    fullSize,\n    leftAndTop: left.concat(top),\n    rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n    chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n    vertical: left.concat(right).concat(centerVertical),\n    horizontal: top.concat(bottom).concat(centerHorizontal)\n  };\n}\n\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n  return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\n\nfunction updateMaxPadding(maxPadding, boxPadding) {\n  maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n  maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n  maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n  maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\n\nfunction updateDims(chartArea, params, layout, stacks) {\n  const {pos, box} = layout;\n  const maxPadding = chartArea.maxPadding;\n\n  // dynamically placed boxes size is not considered\n  if (!isObject(pos)) {\n    if (layout.size) {\n      // this layout was already counted for, lets first reduce old size\n      chartArea[pos] -= layout.size;\n    }\n    const stack = stacks[layout.stack] || {size: 0, count: 1};\n    stack.size = Math.max(stack.size, layout.horizontal ? box.height : box.width);\n    layout.size = stack.size / stack.count;\n    chartArea[pos] += layout.size;\n  }\n\n  if (box.getPadding) {\n    updateMaxPadding(maxPadding, box.getPadding());\n  }\n\n  const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n  const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n  const widthChanged = newWidth !== chartArea.w;\n  const heightChanged = newHeight !== chartArea.h;\n  chartArea.w = newWidth;\n  chartArea.h = newHeight;\n\n  // return booleans on the changes per direction\n  return layout.horizontal\n    ? {same: widthChanged, other: heightChanged}\n    : {same: heightChanged, other: widthChanged};\n}\n\nfunction handleMaxPadding(chartArea) {\n  const maxPadding = chartArea.maxPadding;\n\n  function updatePos(pos) {\n    const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n    chartArea[pos] += change;\n    return change;\n  }\n  chartArea.y += updatePos('top');\n  chartArea.x += updatePos('left');\n  updatePos('right');\n  updatePos('bottom');\n}\n\nfunction getMargins(horizontal, chartArea) {\n  const maxPadding = chartArea.maxPadding;\n\n  function marginForPositions(positions) {\n    const margin = {left: 0, top: 0, right: 0, bottom: 0};\n    positions.forEach((pos) => {\n      margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n    });\n    return margin;\n  }\n\n  return horizontal\n    ? marginForPositions(['left', 'right'])\n    : marginForPositions(['top', 'bottom']);\n}\n\nfunction fitBoxes(boxes, chartArea, params, stacks) {\n  const refitBoxes = [];\n  let i, ilen, layout, box, refit, changed;\n\n  for (i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i) {\n    layout = boxes[i];\n    box = layout.box;\n\n    box.update(\n      layout.width || chartArea.w,\n      layout.height || chartArea.h,\n      getMargins(layout.horizontal, chartArea)\n    );\n    const {same, other} = updateDims(chartArea, params, layout, stacks);\n\n    // Dimensions changed and there were non full width boxes before this\n    // -> we have to refit those\n    refit |= same && refitBoxes.length;\n\n    // Chart area changed in the opposite direction\n    changed = changed || other;\n\n    if (!box.fullSize) { // fullSize boxes don't need to be re-fitted in any case\n      refitBoxes.push(layout);\n    }\n  }\n\n  return refit && fitBoxes(refitBoxes, chartArea, params, stacks) || changed;\n}\n\nfunction setBoxDims(box, left, top, width, height) {\n  box.top = top;\n  box.left = left;\n  box.right = left + width;\n  box.bottom = top + height;\n  box.width = width;\n  box.height = height;\n}\n\nfunction placeBoxes(boxes, chartArea, params, stacks) {\n  const userPadding = params.padding;\n  let {x, y} = chartArea;\n\n  for (const layout of boxes) {\n    const box = layout.box;\n    const stack = stacks[layout.stack] || {count: 1, placed: 0, weight: 1};\n    const weight = (layout.stackWeight / stack.weight) || 1;\n    if (layout.horizontal) {\n      const width = chartArea.w * weight;\n      const height = stack.size || box.height;\n      if (defined(stack.start)) {\n        y = stack.start;\n      }\n      if (box.fullSize) {\n        setBoxDims(box, userPadding.left, y, params.outerWidth - userPadding.right - userPadding.left, height);\n      } else {\n        setBoxDims(box, chartArea.left + stack.placed, y, width, height);\n      }\n      stack.start = y;\n      stack.placed += width;\n      y = box.bottom;\n    } else {\n      const height = chartArea.h * weight;\n      const width = stack.size || box.width;\n      if (defined(stack.start)) {\n        x = stack.start;\n      }\n      if (box.fullSize) {\n        setBoxDims(box, x, userPadding.top, width, params.outerHeight - userPadding.bottom - userPadding.top);\n      } else {\n        setBoxDims(box, x, chartArea.top + stack.placed, width, height);\n      }\n      stack.start = x;\n      stack.placed += height;\n      x = box.right;\n    }\n  }\n\n  chartArea.x = x;\n  chartArea.y = y;\n}\n\n/**\n * @interface LayoutItem\n * @typedef {object} LayoutItem\n * @prop {string} position - The position of the item in the chart layout. Possible values are\n * 'left', 'top', 'right', 'bottom', and 'chartArea'\n * @prop {number} weight - The weight used to sort the item. Higher weights are further away from the chart area\n * @prop {boolean} fullSize - if true, and the item is horizontal, then push vertical boxes down\n * @prop {function} isHorizontal - returns true if the layout item is horizontal (ie. top or bottom)\n * @prop {function} update - Takes two parameters: width and height. Returns size of item\n * @prop {function} draw - Draws the element\n * @prop {function} [getPadding] -  Returns an object with padding on the edges\n * @prop {number} width - Width of item. Must be valid after update()\n * @prop {number} height - Height of item. Must be valid after update()\n * @prop {number} left - Left edge of the item. Set by layout system and cannot be used in update\n * @prop {number} top - Top edge of the item. Set by layout system and cannot be used in update\n * @prop {number} right - Right edge of the item. Set by layout system and cannot be used in update\n * @prop {number} bottom - Bottom edge of the item. Set by layout system and cannot be used in update\n */\n\n// The layout service is very self explanatory.  It's responsible for the layout within a chart.\n// Scales, Legends and Plugins all rely on the layout service and can easily register to be placed anywhere they need\n// It is this service's responsibility of carrying out that layout.\nexport default {\n\n  /**\n\t * Register a box to a chart.\n\t * A box is simply a reference to an object that requires layout. eg. Scales, Legend, Title.\n\t * @param {Chart} chart - the chart to use\n\t * @param {LayoutItem} item - the item to add to be laid out\n\t */\n  addBox(chart, item) {\n    if (!chart.boxes) {\n      chart.boxes = [];\n    }\n\n    // initialize item with default values\n    item.fullSize = item.fullSize || false;\n    item.position = item.position || 'top';\n    item.weight = item.weight || 0;\n    // @ts-ignore\n    item._layers = item._layers || function() {\n      return [{\n        z: 0,\n        draw(chartArea) {\n          item.draw(chartArea);\n        }\n      }];\n    };\n\n    chart.boxes.push(item);\n  },\n\n  /**\n\t * Remove a layoutItem from a chart\n\t * @param {Chart} chart - the chart to remove the box from\n\t * @param {LayoutItem} layoutItem - the item to remove from the layout\n\t */\n  removeBox(chart, layoutItem) {\n    const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n    if (index !== -1) {\n      chart.boxes.splice(index, 1);\n    }\n  },\n\n  /**\n\t * Sets (or updates) options on the given `item`.\n\t * @param {Chart} chart - the chart in which the item lives (or will be added to)\n\t * @param {LayoutItem} item - the item to configure with the given options\n\t * @param {object} options - the new item options.\n\t */\n  configure(chart, item, options) {\n    item.fullSize = options.fullSize;\n    item.position = options.position;\n    item.weight = options.weight;\n  },\n\n  /**\n\t * Fits boxes of the given chart into the given size by having each box measure itself\n\t * then running a fitting algorithm\n\t * @param {Chart} chart - the chart\n\t * @param {number} width - the width to fit into\n\t * @param {number} height - the height to fit into\n   * @param {number} minPadding - minimum padding required for each side of chart area\n\t */\n  update(chart, width, height, minPadding) {\n    if (!chart) {\n      return;\n    }\n\n    const padding = toPadding(chart.options.layout.padding);\n    const availableWidth = Math.max(width - padding.width, 0);\n    const availableHeight = Math.max(height - padding.height, 0);\n    const boxes = buildLayoutBoxes(chart.boxes);\n    const verticalBoxes = boxes.vertical;\n    const horizontalBoxes = boxes.horizontal;\n\n    // Before any changes are made, notify boxes that an update is about to being\n    // This is used to clear any cached data (e.g. scale limits)\n    each(chart.boxes, box => {\n      if (typeof box.beforeLayout === 'function') {\n        box.beforeLayout();\n      }\n    });\n\n    // Essentially we now have any number of boxes on each of the 4 sides.\n    // Our canvas looks like the following.\n    // The areas L1 and L2 are the left axes. R1 is the right axis, T1 is the top axis and\n    // B1 is the bottom axis\n    // There are also 4 quadrant-like locations (left to right instead of clockwise) reserved for chart overlays\n    // These locations are single-box locations only, when trying to register a chartArea location that is already taken,\n    // an error will be thrown.\n    //\n    // |----------------------------------------------------|\n    // |                  T1 (Full Width)                   |\n    // |----------------------------------------------------|\n    // |    |    |                 T2                  |    |\n    // |    |----|-------------------------------------|----|\n    // |    |    | C1 |                           | C2 |    |\n    // |    |    |----|                           |----|    |\n    // |    |    |                                     |    |\n    // | L1 | L2 |           ChartArea (C0)            | R1 |\n    // |    |    |                                     |    |\n    // |    |    |----|                           |----|    |\n    // |    |    | C3 |                           | C4 |    |\n    // |    |----|-------------------------------------|----|\n    // |    |    |                 B1                  |    |\n    // |----------------------------------------------------|\n    // |                  B2 (Full Width)                   |\n    // |----------------------------------------------------|\n    //\n\n    const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap) =>\n      wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\n\n    const params = Object.freeze({\n      outerWidth: width,\n      outerHeight: height,\n      padding,\n      availableWidth,\n      availableHeight,\n      vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n      hBoxMaxHeight: availableHeight / 2\n    });\n    const maxPadding = Object.assign({}, padding);\n    updateMaxPadding(maxPadding, toPadding(minPadding));\n    const chartArea = Object.assign({\n      maxPadding,\n      w: availableWidth,\n      h: availableHeight,\n      x: padding.left,\n      y: padding.top\n    }, padding);\n\n    const stacks = setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n\n    // First fit the fullSize boxes, to reduce probability of re-fitting.\n    fitBoxes(boxes.fullSize, chartArea, params, stacks);\n\n    // Then fit vertical boxes\n    fitBoxes(verticalBoxes, chartArea, params, stacks);\n\n    // Then fit horizontal boxes\n    if (fitBoxes(horizontalBoxes, chartArea, params, stacks)) {\n      // if the area changed, re-fit vertical boxes\n      fitBoxes(verticalBoxes, chartArea, params, stacks);\n    }\n\n    handleMaxPadding(chartArea);\n\n    // Finally place the boxes to correct coordinates\n    placeBoxes(boxes.leftAndTop, chartArea, params, stacks);\n\n    // Move to opposite side of chart\n    chartArea.x += chartArea.w;\n    chartArea.y += chartArea.h;\n\n    placeBoxes(boxes.rightAndBottom, chartArea, params, stacks);\n\n    chart.chartArea = {\n      left: chartArea.left,\n      top: chartArea.top,\n      right: chartArea.left + chartArea.w,\n      bottom: chartArea.top + chartArea.h,\n      height: chartArea.h,\n      width: chartArea.w,\n    };\n\n    // Finally update boxes in chartArea (radial scale for example)\n    each(boxes.chartArea, (layout) => {\n      const box = layout.box;\n      Object.assign(box, chart.chartArea);\n      box.update(chartArea.w, chartArea.h, {left: 0, top: 0, right: 0, bottom: 0});\n    });\n  }\n};\n","\n/**\n * @typedef { import('../core/core.controller.js').default } Chart\n */\n\n/**\n * Abstract class that allows abstracting platform dependencies away from the chart.\n */\nexport default class BasePlatform {\n  /**\n\t * Called at chart construction time, returns a context2d instance implementing\n\t * the [W3C Canvas 2D Context API standard]{@link https://www.w3.org/TR/2dcontext/}.\n\t * @param {HTMLCanvasElement} canvas - The canvas from which to acquire context (platform specific)\n\t * @param {number} [aspectRatio] - The chart options\n\t */\n  acquireContext(canvas, aspectRatio) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * Called at chart destruction time, releases any resources associated to the context\n\t * previously returned by the acquireContext() method.\n\t * @param {CanvasRenderingContext2D} context - The context2d instance\n\t * @returns {boolean} true if the method succeeded, else false\n\t */\n  releaseContext(context) { // eslint-disable-line no-unused-vars\n    return false;\n  }\n\n  /**\n\t * Registers the specified listener on the given chart.\n\t * @param {Chart} chart - Chart from which to listen for event\n\t * @param {string} type - The ({@link ChartEvent}) type to listen for\n\t * @param {function} listener - Receives a notification (an object that implements\n\t * the {@link ChartEvent} interface) when an event of the specified type occurs.\n\t */\n  addEventListener(chart, type, listener) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * Removes the specified listener previously registered with addEventListener.\n\t * @param {Chart} chart - Chart from which to remove the listener\n\t * @param {string} type - The ({@link ChartEvent}) type to remove\n\t * @param {function} listener - The listener function to remove from the event target.\n\t */\n  removeEventListener(chart, type, listener) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * @returns {number} the current devicePixelRatio of the device this platform is connected to.\n\t */\n  getDevicePixelRatio() {\n    return 1;\n  }\n\n  /**\n\t * Returns the maximum size in pixels of given canvas element.\n\t * @param {HTMLCanvasElement} element\n\t * @param {number} [width] - content width of parent element\n\t * @param {number} [height] - content height of parent element\n\t * @param {number} [aspectRatio] - aspect ratio to maintain\n\t */\n  getMaximumSize(element, width, height, aspectRatio) {\n    width = Math.max(0, width || element.width);\n    height = height || element.height;\n    return {\n      width,\n      height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n    };\n  }\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t * @returns {boolean} true if the canvas is attached to the platform, false if not.\n\t */\n  isAttached(canvas) { // eslint-disable-line no-unused-vars\n    return true;\n  }\n\n  /**\n   * Updates config with platform specific requirements\n   * @param {import('../core/core.config.js').default} config\n   */\n  updateConfig(config) { // eslint-disable-line no-unused-vars\n    // no-op\n  }\n}\n","/**\n * Platform fallback implementation (minimal).\n * @see https://github.com/chartjs/Chart.js/pull/4591#issuecomment-319575939\n */\n\nimport BasePlatform from './platform.base.js';\n\n/**\n * Platform class for charts without access to the DOM or to many element properties\n * This platform is used by default for any chart passed an OffscreenCanvas.\n * @extends BasePlatform\n */\nexport default class BasicPlatform extends BasePlatform {\n  acquireContext(item) {\n    // To prevent canvas fingerprinting, some add-ons undefine the getContext\n    // method, for example: https://github.com/kkapsner/CanvasBlocker\n    // https://github.com/chartjs/Chart.js/issues/2807\n    return item && item.getContext && item.getContext('2d') || null;\n  }\n  updateConfig(config) {\n    config.options.animation = false;\n  }\n}\n","/**\n * Chart.Platform implementation for targeting a web browser\n */\n\nimport BasePlatform from './platform.base.js';\nimport {_getParentNode, getRelativePosition, supportsEventListenerOptions, readUsedSize, getMaximumSize} from '../helpers/helpers.dom.js';\nimport {throttled} from '../helpers/helpers.extras.js';\nimport {isNullOrUndef} from '../helpers/helpers.core.js';\n\n/**\n * @typedef { import('../core/core.controller.js').default } Chart\n */\n\nconst EXPANDO_KEY = '$chartjs';\n\n/**\n * DOM event types -> Chart.js event types.\n * Note: only events with different types are mapped.\n * @see https://developer.mozilla.org/en-US/docs/Web/Events\n */\nconst EVENT_TYPES = {\n  touchstart: 'mousedown',\n  touchmove: 'mousemove',\n  touchend: 'mouseup',\n  pointerenter: 'mouseenter',\n  pointerdown: 'mousedown',\n  pointermove: 'mousemove',\n  pointerup: 'mouseup',\n  pointerleave: 'mouseout',\n  pointerout: 'mouseout'\n};\n\nconst isNullOrEmpty = value => value === null || value === '';\n/**\n * Initializes the canvas style and render size without modifying the canvas display size,\n * since responsiveness is handled by the controller.resize() method. The config is used\n * to determine the aspect ratio to apply in case no explicit height has been specified.\n * @param {HTMLCanvasElement} canvas\n * @param {number} [aspectRatio]\n */\nfunction initCanvas(canvas, aspectRatio) {\n  const style = canvas.style;\n\n  // NOTE(SB) canvas.getAttribute('width') !== canvas.width: in the first case it\n  // returns null or '' if no explicit value has been set to the canvas attribute.\n  const renderHeight = canvas.getAttribute('height');\n  const renderWidth = canvas.getAttribute('width');\n\n  // Chart.js modifies some canvas values that we want to restore on destroy\n  canvas[EXPANDO_KEY] = {\n    initial: {\n      height: renderHeight,\n      width: renderWidth,\n      style: {\n        display: style.display,\n        height: style.height,\n        width: style.width\n      }\n    }\n  };\n\n  // Force canvas to display as block to avoid extra space caused by inline\n  // elements, which would interfere with the responsive resize process.\n  // https://github.com/chartjs/Chart.js/issues/2538\n  style.display = style.display || 'block';\n  // Include possible borders in the size\n  style.boxSizing = style.boxSizing || 'border-box';\n\n  if (isNullOrEmpty(renderWidth)) {\n    const displayWidth = readUsedSize(canvas, 'width');\n    if (displayWidth !== undefined) {\n      canvas.width = displayWidth;\n    }\n  }\n\n  if (isNullOrEmpty(renderHeight)) {\n    if (canvas.style.height === '') {\n      // If no explicit render height and style height, let's apply the aspect ratio,\n      // which one can be specified by the user but also by charts as default option\n      // (i.e. options.aspectRatio). If not specified, use canvas aspect ratio of 2.\n      canvas.height = canvas.width / (aspectRatio || 2);\n    } else {\n      const displayHeight = readUsedSize(canvas, 'height');\n      if (displayHeight !== undefined) {\n        canvas.height = displayHeight;\n      }\n    }\n  }\n\n  return canvas;\n}\n\n// Default passive to true as expected by Chrome for 'touchstart' and 'touchend' events.\n// https://github.com/chartjs/Chart.js/issues/4287\nconst eventListenerOptions = supportsEventListenerOptions ? {passive: true} : false;\n\nfunction addListener(node, type, listener) {\n  if (node) {\n    node.addEventListener(type, listener, eventListenerOptions);\n  }\n}\n\nfunction removeListener(chart, type, listener) {\n  if (chart && chart.canvas) {\n    chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n  }\n}\n\nfunction fromNativeEvent(event, chart) {\n  const type = EVENT_TYPES[event.type] || event.type;\n  const {x, y} = getRelativePosition(event, chart);\n  return {\n    type,\n    chart,\n    native: event,\n    x: x !== undefined ? x : null,\n    y: y !== undefined ? y : null,\n  };\n}\n\nfunction nodeListContains(nodeList, canvas) {\n  for (const node of nodeList) {\n    if (node === canvas || node.contains(canvas)) {\n      return true;\n    }\n  }\n}\n\nfunction createAttachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const observer = new MutationObserver(entries => {\n    let trigger = false;\n    for (const entry of entries) {\n      trigger = trigger || nodeListContains(entry.addedNodes, canvas);\n      trigger = trigger && !nodeListContains(entry.removedNodes, canvas);\n    }\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {childList: true, subtree: true});\n  return observer;\n}\n\nfunction createDetachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const observer = new MutationObserver(entries => {\n    let trigger = false;\n    for (const entry of entries) {\n      trigger = trigger || nodeListContains(entry.removedNodes, canvas);\n      trigger = trigger && !nodeListContains(entry.addedNodes, canvas);\n    }\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {childList: true, subtree: true});\n  return observer;\n}\n\nconst drpListeningCharts = new Map();\nlet oldDevicePixelRatio = 0;\n\nfunction onWindowResize() {\n  const dpr = window.devicePixelRatio;\n  if (dpr === oldDevicePixelRatio) {\n    return;\n  }\n  oldDevicePixelRatio = dpr;\n  drpListeningCharts.forEach((resize, chart) => {\n    if (chart.currentDevicePixelRatio !== dpr) {\n      resize();\n    }\n  });\n}\n\nfunction listenDevicePixelRatioChanges(chart, resize) {\n  if (!drpListeningCharts.size) {\n    window.addEventListener('resize', onWindowResize);\n  }\n  drpListeningCharts.set(chart, resize);\n}\n\nfunction unlistenDevicePixelRatioChanges(chart) {\n  drpListeningCharts.delete(chart);\n  if (!drpListeningCharts.size) {\n    window.removeEventListener('resize', onWindowResize);\n  }\n}\n\nfunction createResizeObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const container = canvas && _getParentNode(canvas);\n  if (!container) {\n    return;\n  }\n  const resize = throttled((width, height) => {\n    const w = container.clientWidth;\n    listener(width, height);\n    if (w < container.clientWidth) {\n      // If the container size shrank during chart resize, let's assume\n      // scrollbar appeared. So we resize again with the scrollbar visible -\n      // effectively making chart smaller and the scrollbar hidden again.\n      // Because we are inside `throttled`, and currently `ticking`, scroll\n      // events are ignored during this whole 2 resize process.\n      // If we assumed wrong and something else happened, we are resizing\n      // twice in a frame (potential performance issue)\n      listener();\n    }\n  }, window);\n\n  // @ts-ignore until https://github.com/microsoft/TypeScript/issues/37861 implemented\n  const observer = new ResizeObserver(entries => {\n    const entry = entries[0];\n    const width = entry.contentRect.width;\n    const height = entry.contentRect.height;\n    // When its container's display is set to 'none' the callback will be called with a\n    // size of (0, 0), which will cause the chart to lose its original height, so skip\n    // resizing in such case.\n    if (width === 0 && height === 0) {\n      return;\n    }\n    resize(width, height);\n  });\n  observer.observe(container);\n  listenDevicePixelRatioChanges(chart, resize);\n\n  return observer;\n}\n\nfunction releaseObserver(chart, type, observer) {\n  if (observer) {\n    observer.disconnect();\n  }\n  if (type === 'resize') {\n    unlistenDevicePixelRatioChanges(chart);\n  }\n}\n\nfunction createProxyAndListen(chart, type, listener) {\n  const canvas = chart.canvas;\n  const proxy = throttled((event) => {\n    // This case can occur if the chart is destroyed while waiting\n    // for the throttled function to occur. We prevent crashes by checking\n    // for a destroyed chart\n    if (chart.ctx !== null) {\n      listener(fromNativeEvent(event, chart));\n    }\n  }, chart);\n\n  addListener(canvas, type, proxy);\n\n  return proxy;\n}\n\n/**\n * Platform class for charts that can access the DOM and global window/document properties\n * @extends BasePlatform\n */\nexport default class DomPlatform extends BasePlatform {\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t * @param {number} [aspectRatio]\n\t * @return {CanvasRenderingContext2D|null}\n\t */\n  acquireContext(canvas, aspectRatio) {\n    // To prevent canvas fingerprinting, some add-ons undefine the getContext\n    // method, for example: https://github.com/kkapsner/CanvasBlocker\n    // https://github.com/chartjs/Chart.js/issues/2807\n    const context = canvas && canvas.getContext && canvas.getContext('2d');\n\n    // `instanceof HTMLCanvasElement/CanvasRenderingContext2D` fails when the canvas is\n    // inside an iframe or when running in a protected environment. We could guess the\n    // types from their toString() value but let's keep things flexible and assume it's\n    // a sufficient condition if the canvas has a context2D which has canvas as `canvas`.\n    // https://github.com/chartjs/Chart.js/issues/3887\n    // https://github.com/chartjs/Chart.js/issues/4102\n    // https://github.com/chartjs/Chart.js/issues/4152\n    if (context && context.canvas === canvas) {\n      // Load platform resources on first chart creation, to make it possible to\n      // import the library before setting platform options.\n      initCanvas(canvas, aspectRatio);\n      return context;\n    }\n\n    return null;\n  }\n\n  /**\n\t * @param {CanvasRenderingContext2D} context\n\t */\n  releaseContext(context) {\n    const canvas = context.canvas;\n    if (!canvas[EXPANDO_KEY]) {\n      return false;\n    }\n\n    const initial = canvas[EXPANDO_KEY].initial;\n    ['height', 'width'].forEach((prop) => {\n      const value = initial[prop];\n      if (isNullOrUndef(value)) {\n        canvas.removeAttribute(prop);\n      } else {\n        canvas.setAttribute(prop, value);\n      }\n    });\n\n    const style = initial.style || {};\n    Object.keys(style).forEach((key) => {\n      canvas.style[key] = style[key];\n    });\n\n    // The canvas render size might have been changed (and thus the state stack discarded),\n    // we can't use save() and restore() to restore the initial state. So make sure that at\n    // least the canvas context is reset to the default state by setting the canvas width.\n    // https://www.w3.org/TR/2011/WD-html5-20110525/the-canvas-element.html\n    // eslint-disable-next-line no-self-assign\n    canvas.width = canvas.width;\n\n    delete canvas[EXPANDO_KEY];\n    return true;\n  }\n\n  /**\n\t *\n\t * @param {Chart} chart\n\t * @param {string} type\n\t * @param {function} listener\n\t */\n  addEventListener(chart, type, listener) {\n    // Can have only one listener per type, so make sure previous is removed\n    this.removeEventListener(chart, type);\n\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const handlers = {\n      attach: createAttachObserver,\n      detach: createDetachObserver,\n      resize: createResizeObserver\n    };\n    const handler = handlers[type] || createProxyAndListen;\n    proxies[type] = handler(chart, type, listener);\n  }\n\n\n  /**\n\t * @param {Chart} chart\n\t * @param {string} type\n\t */\n  removeEventListener(chart, type) {\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const proxy = proxies[type];\n\n    if (!proxy) {\n      return;\n    }\n\n    const handlers = {\n      attach: releaseObserver,\n      detach: releaseObserver,\n      resize: releaseObserver\n    };\n    const handler = handlers[type] || removeListener;\n    handler(chart, type, proxy);\n    proxies[type] = undefined;\n  }\n\n  getDevicePixelRatio() {\n    return window.devicePixelRatio;\n  }\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t * @param {number} [width] - content width of parent element\n\t * @param {number} [height] - content height of parent element\n\t * @param {number} [aspectRatio] - aspect ratio to maintain\n\t */\n  getMaximumSize(canvas, width, height, aspectRatio) {\n    return getMaximumSize(canvas, width, height, aspectRatio);\n  }\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t */\n  isAttached(canvas) {\n    const container = canvas && _getParentNode(canvas);\n    return !!(container && container.isConnected);\n  }\n}\n","import type {AnyObject} from '../types/basic.js';\nimport type {Point} from '../types/geometric.js';\nimport type {Animation} from '../types/animation.js';\nimport {isNumber} from '../helpers/helpers.math.js';\n\nexport default class Element<T = AnyObject, O = AnyObject> {\n\n  static defaults = {};\n  static defaultRoutes = undefined;\n\n  x: number;\n  y: number;\n  active = false;\n  options: O;\n  $animations: Record<keyof T, Animation>;\n\n  tooltipPosition(useFinalPosition: boolean): Point {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y} as Point;\n  }\n\n  hasValue() {\n    return isNumber(this.x) && isNumber(this.y);\n  }\n\n  /**\n   * Gets the current or final value of each prop. Can return extra properties (whole object).\n   * @param props - properties to get\n   * @param [final] - get the final value (animation target)\n   */\n  getProps<P extends (keyof T)[]>(props: P, final?: boolean): Pick<T, P[number]>;\n  getProps<P extends string>(props: P[], final?: boolean): Partial<Record<P, unknown>>;\n  getProps(props: string[], final?: boolean): Partial<Record<string, unknown>> {\n    const anims = this.$animations;\n    if (!final || !anims) {\n      // let's not create an object, if not needed\n      return this as Record<string, unknown>;\n    }\n    const ret: Record<string, unknown> = {};\n    props.forEach((prop) => {\n      ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : this[prop as string];\n    });\n    return ret;\n  }\n}\n","import {isNullOrUndef, valueOrDefault} from '../helpers/helpers.core.js';\nimport {_factorize} from '../helpers/helpers.math.js';\n\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n * @typedef {{value:number | string, label?:string, major?:boolean, $context?:any}} Tick\n */\n\n/**\n * Returns a subset of ticks to be plotted to avoid overlapping labels.\n * @param {import('./core.scale.js').default} scale\n * @param {Tick[]} ticks\n * @return {Tick[]}\n * @private\n */\nexport function autoSkip(scale, ticks) {\n  const tickOpts = scale.options.ticks;\n  const determinedMaxTicks = determineMaxTicks(scale);\n  const ticksLimit = Math.min(tickOpts.maxTicksLimit || determinedMaxTicks, determinedMaxTicks);\n  const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n  const numMajorIndices = majorIndices.length;\n  const first = majorIndices[0];\n  const last = majorIndices[numMajorIndices - 1];\n  const newTicks = [];\n\n  // If there are too many major ticks to display them all\n  if (numMajorIndices > ticksLimit) {\n    skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n    return newTicks;\n  }\n\n  const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n\n  if (numMajorIndices > 0) {\n    let i, ilen;\n    const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n    skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n    for (i = 0, ilen = numMajorIndices - 1; i < ilen; i++) {\n      skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n    }\n    skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n    return newTicks;\n  }\n  skip(ticks, newTicks, spacing);\n  return newTicks;\n}\n\nfunction determineMaxTicks(scale) {\n  const offset = scale.options.offset;\n  const tickLength = scale._tickSize();\n  const maxScale = scale._length / tickLength + (offset ? 0 : 1);\n  const maxChart = scale._maxLength / tickLength;\n  return Math.floor(Math.min(maxScale, maxChart));\n}\n\n/**\n * @param {number[]} majorIndices\n * @param {Tick[]} ticks\n * @param {number} ticksLimit\n */\nfunction calculateSpacing(majorIndices, ticks, ticksLimit) {\n  const evenMajorSpacing = getEvenSpacing(majorIndices);\n  const spacing = ticks.length / ticksLimit;\n\n  // If the major ticks are evenly spaced apart, place the minor ticks\n  // so that they divide the major ticks into even chunks\n  if (!evenMajorSpacing) {\n    return Math.max(spacing, 1);\n  }\n\n  const factors = _factorize(evenMajorSpacing);\n  for (let i = 0, ilen = factors.length - 1; i < ilen; i++) {\n    const factor = factors[i];\n    if (factor > spacing) {\n      return factor;\n    }\n  }\n  return Math.max(spacing, 1);\n}\n\n/**\n * @param {Tick[]} ticks\n */\nfunction getMajorIndices(ticks) {\n  const result = [];\n  let i, ilen;\n  for (i = 0, ilen = ticks.length; i < ilen; i++) {\n    if (ticks[i].major) {\n      result.push(i);\n    }\n  }\n  return result;\n}\n\n/**\n * @param {Tick[]} ticks\n * @param {Tick[]} newTicks\n * @param {number[]} majorIndices\n * @param {number} spacing\n */\nfunction skipMajors(ticks, newTicks, majorIndices, spacing) {\n  let count = 0;\n  let next = majorIndices[0];\n  let i;\n\n  spacing = Math.ceil(spacing);\n  for (i = 0; i < ticks.length; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = majorIndices[count * spacing];\n    }\n  }\n}\n\n/**\n * @param {Tick[]} ticks\n * @param {Tick[]} newTicks\n * @param {number} spacing\n * @param {number} [majorStart]\n * @param {number} [majorEnd]\n */\nfunction skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n  const start = valueOrDefault(majorStart, 0);\n  const end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\n  let count = 0;\n  let length, i, next;\n\n  spacing = Math.ceil(spacing);\n  if (majorEnd) {\n    length = majorEnd - majorStart;\n    spacing = length / Math.floor(length / spacing);\n  }\n\n  next = start;\n\n  while (next < 0) {\n    count++;\n    next = Math.round(start + count * spacing);\n  }\n\n  for (i = Math.max(start, 0); i < end; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = Math.round(start + count * spacing);\n    }\n  }\n}\n\n\n/**\n * @param {number[]} arr\n */\nfunction getEvenSpacing(arr) {\n  const len = arr.length;\n  let i, diff;\n\n  if (len < 2) {\n    return false;\n  }\n\n  for (diff = arr[0], i = 1; i < len; ++i) {\n    if (arr[i] - arr[i - 1] !== diff) {\n      return false;\n    }\n  }\n  return diff;\n}\n","import Element from './core.element.js';\nimport {_alignPixel, _measureText, renderText, clipArea, unclipArea} from '../helpers/helpers.canvas.js';\nimport {callback as call, each, finiteOrDefault, isArray, isFinite, isNullOrUndef, isObject, valueOrDefault} from '../helpers/helpers.core.js';\nimport {toDegrees, toRadians, _int16Range, _limitValue, HALF_PI} from '../helpers/helpers.math.js';\nimport {_alignStartEnd, _toLeftRightCenter} from '../helpers/helpers.extras.js';\nimport {createContext, toFont, toPadding, _addGrace} from '../helpers/helpers.options.js';\nimport {autoSkip} from './core.scale.autoskip.js';\n\nconst reverseAlign = (align) => align === 'left' ? 'right' : align === 'right' ? 'left' : align;\nconst offsetFromEdge = (scale, edge, offset) => edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\nconst getTicksLimit = (ticksLength, maxTicksLimit) => Math.min(maxTicksLimit || ticksLength, ticksLength);\n\n/**\n * @typedef { import('../types/index.js').Chart } Chart\n * @typedef {{value:number | string, label?:string, major?:boolean, $context?:any}} Tick\n */\n\n/**\n * Returns a new array containing numItems from arr\n * @param {any[]} arr\n * @param {number} numItems\n */\nfunction sample(arr, numItems) {\n  const result = [];\n  const increment = arr.length / numItems;\n  const len = arr.length;\n  let i = 0;\n\n  for (; i < len; i += increment) {\n    result.push(arr[Math.floor(i)]);\n  }\n  return result;\n}\n\n/**\n * @param {Scale} scale\n * @param {number} index\n * @param {boolean} offsetGridLines\n */\nfunction getPixelForGridLine(scale, index, offsetGridLines) {\n  const length = scale.ticks.length;\n  const validIndex = Math.min(index, length - 1);\n  const start = scale._startPixel;\n  const end = scale._endPixel;\n  const epsilon = 1e-6; // 1e-6 is margin in pixels for accumulated error.\n  let lineValue = scale.getPixelForTick(validIndex);\n  let offset;\n\n  if (offsetGridLines) {\n    if (length === 1) {\n      offset = Math.max(lineValue - start, end - lineValue);\n    } else if (index === 0) {\n      offset = (scale.getPixelForTick(1) - lineValue) / 2;\n    } else {\n      offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n    }\n    lineValue += validIndex < index ? offset : -offset;\n\n    // Return undefined if the pixel is out of the range\n    if (lineValue < start - epsilon || lineValue > end + epsilon) {\n      return;\n    }\n  }\n  return lineValue;\n}\n\n/**\n * @param {object} caches\n * @param {number} length\n */\nfunction garbageCollect(caches, length) {\n  each(caches, (cache) => {\n    const gc = cache.gc;\n    const gcLen = gc.length / 2;\n    let i;\n    if (gcLen > length) {\n      for (i = 0; i < gcLen; ++i) {\n        delete cache.data[gc[i]];\n      }\n      gc.splice(0, gcLen);\n    }\n  });\n}\n\n/**\n * @param {object} options\n */\nfunction getTickMarkLength(options) {\n  return options.drawTicks ? options.tickLength : 0;\n}\n\n/**\n * @param {object} options\n */\nfunction getTitleHeight(options, fallback) {\n  if (!options.display) {\n    return 0;\n  }\n\n  const font = toFont(options.font, fallback);\n  const padding = toPadding(options.padding);\n  const lines = isArray(options.text) ? options.text.length : 1;\n\n  return (lines * font.lineHeight) + padding.height;\n}\n\nfunction createScaleContext(parent, scale) {\n  return createContext(parent, {\n    scale,\n    type: 'scale'\n  });\n}\n\nfunction createTickContext(parent, index, tick) {\n  return createContext(parent, {\n    tick,\n    index,\n    type: 'tick'\n  });\n}\n\nfunction titleAlign(align, position, reverse) {\n  /** @type {CanvasTextAlign} */\n  let ret = _toLeftRightCenter(align);\n  if ((reverse && position !== 'right') || (!reverse && position === 'right')) {\n    ret = reverseAlign(ret);\n  }\n  return ret;\n}\n\nfunction titleArgs(scale, offset, position, align) {\n  const {top, left, bottom, right, chart} = scale;\n  const {chartArea, scales} = chart;\n  let rotation = 0;\n  let maxWidth, titleX, titleY;\n  const height = bottom - top;\n  const width = right - left;\n\n  if (scale.isHorizontal()) {\n    titleX = _alignStartEnd(align, left, right);\n\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleY = scales[positionAxisID].getPixelForValue(value) + height - offset;\n    } else if (position === 'center') {\n      titleY = (chartArea.bottom + chartArea.top) / 2 + height - offset;\n    } else {\n      titleY = offsetFromEdge(scale, position, offset);\n    }\n    maxWidth = right - left;\n  } else {\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleX = scales[positionAxisID].getPixelForValue(value) - width + offset;\n    } else if (position === 'center') {\n      titleX = (chartArea.left + chartArea.right) / 2 - width + offset;\n    } else {\n      titleX = offsetFromEdge(scale, position, offset);\n    }\n    titleY = _alignStartEnd(align, bottom, top);\n    rotation = position === 'left' ? -HALF_PI : HALF_PI;\n  }\n  return {titleX, titleY, maxWidth, rotation};\n}\n\nexport default class Scale extends Element {\n\n  // eslint-disable-next-line max-statements\n  constructor(cfg) {\n    super();\n\n    /** @type {string} */\n    this.id = cfg.id;\n    /** @type {string} */\n    this.type = cfg.type;\n    /** @type {any} */\n    this.options = undefined;\n    /** @type {CanvasRenderingContext2D} */\n    this.ctx = cfg.ctx;\n    /** @type {Chart} */\n    this.chart = cfg.chart;\n\n    // implements box\n    /** @type {number} */\n    this.top = undefined;\n    /** @type {number} */\n    this.bottom = undefined;\n    /** @type {number} */\n    this.left = undefined;\n    /** @type {number} */\n    this.right = undefined;\n    /** @type {number} */\n    this.width = undefined;\n    /** @type {number} */\n    this.height = undefined;\n    this._margins = {\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    };\n    /** @type {number} */\n    this.maxWidth = undefined;\n    /** @type {number} */\n    this.maxHeight = undefined;\n    /** @type {number} */\n    this.paddingTop = undefined;\n    /** @type {number} */\n    this.paddingBottom = undefined;\n    /** @type {number} */\n    this.paddingLeft = undefined;\n    /** @type {number} */\n    this.paddingRight = undefined;\n\n    // scale-specific properties\n    /** @type {string=} */\n    this.axis = undefined;\n    /** @type {number=} */\n    this.labelRotation = undefined;\n    this.min = undefined;\n    this.max = undefined;\n    this._range = undefined;\n    /** @type {Tick[]} */\n    this.ticks = [];\n    /** @type {object[]|null} */\n    this._gridLineItems = null;\n    /** @type {object[]|null} */\n    this._labelItems = null;\n    /** @type {object|null} */\n    this._labelSizes = null;\n    this._length = 0;\n    this._maxLength = 0;\n    this._longestTextCache = {};\n    /** @type {number} */\n    this._startPixel = undefined;\n    /** @type {number} */\n    this._endPixel = undefined;\n    this._reversePixels = false;\n    this._userMax = undefined;\n    this._userMin = undefined;\n    this._suggestedMax = undefined;\n    this._suggestedMin = undefined;\n    this._ticksLength = 0;\n    this._borderValue = 0;\n    this._cache = {};\n    this._dataLimitsCached = false;\n    this.$context = undefined;\n  }\n\n  /**\n\t * @param {any} options\n\t * @since 3.0\n\t */\n  init(options) {\n    this.options = options.setContext(this.getContext());\n\n    this.axis = options.axis;\n\n    // parse min/max value, so we can properly determine min/max for other scales\n    this._userMin = this.parse(options.min);\n    this._userMax = this.parse(options.max);\n    this._suggestedMin = this.parse(options.suggestedMin);\n    this._suggestedMax = this.parse(options.suggestedMax);\n  }\n\n  /**\n\t * Parse a supported input value to internal representation.\n\t * @param {*} raw\n\t * @param {number} [index]\n\t * @since 3.0\n\t */\n  parse(raw, index) { // eslint-disable-line no-unused-vars\n    return raw;\n  }\n\n  /**\n\t * @return {{min: number, max: number, minDefined: boolean, maxDefined: boolean}}\n\t * @protected\n\t * @since 3.0\n\t */\n  getUserBounds() {\n    let {_userMin, _userMax, _suggestedMin, _suggestedMax} = this;\n    _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n    _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n    _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n    _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n    return {\n      min: finiteOrDefault(_userMin, _suggestedMin),\n      max: finiteOrDefault(_userMax, _suggestedMax),\n      minDefined: isFinite(_userMin),\n      maxDefined: isFinite(_userMax)\n    };\n  }\n\n  /**\n\t * @param {boolean} canStack\n\t * @return {{min: number, max: number}}\n\t * @protected\n\t * @since 3.0\n\t */\n  getMinMax(canStack) {\n    let {min, max, minDefined, maxDefined} = this.getUserBounds();\n    let range;\n\n    if (minDefined && maxDefined) {\n      return {min, max};\n    }\n\n    const metas = this.getMatchingVisibleMetas();\n    for (let i = 0, ilen = metas.length; i < ilen; ++i) {\n      range = metas[i].controller.getMinMax(this, canStack);\n      if (!minDefined) {\n        min = Math.min(min, range.min);\n      }\n      if (!maxDefined) {\n        max = Math.max(max, range.max);\n      }\n    }\n\n    // Make sure min <= max when only min or max is defined by user and the data is outside that range\n    min = maxDefined && min > max ? max : min;\n    max = minDefined && min > max ? min : max;\n\n    return {\n      min: finiteOrDefault(min, finiteOrDefault(max, min)),\n      max: finiteOrDefault(max, finiteOrDefault(min, max))\n    };\n  }\n\n  /**\n\t * Get the padding needed for the scale\n\t * @return {{top: number, left: number, bottom: number, right: number}} the necessary padding\n\t * @private\n\t */\n  getPadding() {\n    return {\n      left: this.paddingLeft || 0,\n      top: this.paddingTop || 0,\n      right: this.paddingRight || 0,\n      bottom: this.paddingBottom || 0\n    };\n  }\n\n  /**\n\t * Returns the scale tick objects\n\t * @return {Tick[]}\n\t * @since 2.7\n\t */\n  getTicks() {\n    return this.ticks;\n  }\n\n  /**\n\t * @return {string[]}\n\t */\n  getLabels() {\n    const data = this.chart.data;\n    return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n  }\n\n  /**\n   * @return {import('../types.js').LabelItem[]}\n   */\n  getLabelItems(chartArea = this.chart.chartArea) {\n    const items = this._labelItems || (this._labelItems = this._computeLabelItems(chartArea));\n    return items;\n  }\n\n  // When a new layout is created, reset the data limits cache\n  beforeLayout() {\n    this._cache = {};\n    this._dataLimitsCached = false;\n  }\n\n  // These methods are ordered by lifecycle. Utilities then follow.\n  // Any function defined here is inherited by all scale types.\n  // Any function can be extended by the scale type\n\n  beforeUpdate() {\n    call(this.options.beforeUpdate, [this]);\n  }\n\n  /**\n\t * @param {number} maxWidth - the max width in pixels\n\t * @param {number} maxHeight - the max height in pixels\n\t * @param {{top: number, left: number, bottom: number, right: number}} margins - the space between the edge of the other scales and edge of the chart\n\t *   This space comes from two sources:\n\t *     - padding - space that's required to show the labels at the edges of the scale\n\t *     - thickness of scales or legends in another orientation\n\t */\n  update(maxWidth, maxHeight, margins) {\n    const {beginAtZero, grace, ticks: tickOpts} = this.options;\n    const sampleSize = tickOpts.sampleSize;\n\n    // Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n    this.beforeUpdate();\n\n    // Absorb the master measurements\n    this.maxWidth = maxWidth;\n    this.maxHeight = maxHeight;\n    this._margins = margins = Object.assign({\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    }, margins);\n\n    this.ticks = null;\n    this._labelSizes = null;\n    this._gridLineItems = null;\n    this._labelItems = null;\n\n    // Dimensions\n    this.beforeSetDimensions();\n    this.setDimensions();\n    this.afterSetDimensions();\n\n    this._maxLength = this.isHorizontal()\n      ? this.width + margins.left + margins.right\n      : this.height + margins.top + margins.bottom;\n\n    // Data min/max\n    if (!this._dataLimitsCached) {\n      this.beforeDataLimits();\n      this.determineDataLimits();\n      this.afterDataLimits();\n      this._range = _addGrace(this, grace, beginAtZero);\n      this._dataLimitsCached = true;\n    }\n\n    this.beforeBuildTicks();\n\n    this.ticks = this.buildTicks() || [];\n\n    // Allow modification of ticks in callback.\n    this.afterBuildTicks();\n\n    // Compute tick rotation and fit using a sampled subset of labels\n    // We generally don't need to compute the size of every single label for determining scale size\n    const samplingEnabled = sampleSize < this.ticks.length;\n    this._convertTicksToLabels(samplingEnabled ? sample(this.ticks, sampleSize) : this.ticks);\n\n    // configure is called twice, once here, once from core.controller.updateLayout.\n    // Here we haven't been positioned yet, but dimensions are correct.\n    // Variables set in configure are needed for calculateLabelRotation, and\n    // it's ok that coordinates are not correct there, only dimensions matter.\n    this.configure();\n\n    // Tick Rotation\n    this.beforeCalculateLabelRotation();\n    this.calculateLabelRotation(); // Preconditions: number of ticks and sizes of largest labels must be calculated beforehand\n    this.afterCalculateLabelRotation();\n\n    // Auto-skip\n    if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n      this.ticks = autoSkip(this, this.ticks);\n      this._labelSizes = null;\n      this.afterAutoSkip();\n    }\n\n    if (samplingEnabled) {\n      // Generate labels using all non-skipped ticks\n      this._convertTicksToLabels(this.ticks);\n    }\n\n    this.beforeFit();\n    this.fit(); // Preconditions: label rotation and label sizes must be calculated beforehand\n    this.afterFit();\n\n    // IMPORTANT: after this point, we consider that `this.ticks` will NEVER change!\n\n    this.afterUpdate();\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    let reversePixels = this.options.reverse;\n    let startPixel, endPixel;\n\n    if (this.isHorizontal()) {\n      startPixel = this.left;\n      endPixel = this.right;\n    } else {\n      startPixel = this.top;\n      endPixel = this.bottom;\n      // by default vertical scales are from bottom to top, so pixels are reversed\n      reversePixels = !reversePixels;\n    }\n    this._startPixel = startPixel;\n    this._endPixel = endPixel;\n    this._reversePixels = reversePixels;\n    this._length = endPixel - startPixel;\n    this._alignToPixels = this.options.alignToPixels;\n  }\n\n  afterUpdate() {\n    call(this.options.afterUpdate, [this]);\n  }\n\n  //\n\n  beforeSetDimensions() {\n    call(this.options.beforeSetDimensions, [this]);\n  }\n  setDimensions() {\n    // Set the unconstrained dimension before label rotation\n    if (this.isHorizontal()) {\n      // Reset position before calculating rotation\n      this.width = this.maxWidth;\n      this.left = 0;\n      this.right = this.width;\n    } else {\n      this.height = this.maxHeight;\n\n      // Reset position before calculating rotation\n      this.top = 0;\n      this.bottom = this.height;\n    }\n\n    // Reset padding\n    this.paddingLeft = 0;\n    this.paddingTop = 0;\n    this.paddingRight = 0;\n    this.paddingBottom = 0;\n  }\n  afterSetDimensions() {\n    call(this.options.afterSetDimensions, [this]);\n  }\n\n  _callHooks(name) {\n    this.chart.notifyPlugins(name, this.getContext());\n    call(this.options[name], [this]);\n  }\n\n  // Data limits\n  beforeDataLimits() {\n    this._callHooks('beforeDataLimits');\n  }\n  determineDataLimits() {}\n  afterDataLimits() {\n    this._callHooks('afterDataLimits');\n  }\n\n  //\n  beforeBuildTicks() {\n    this._callHooks('beforeBuildTicks');\n  }\n  /**\n\t * @return {object[]} the ticks\n\t */\n  buildTicks() {\n    return [];\n  }\n  afterBuildTicks() {\n    this._callHooks('afterBuildTicks');\n  }\n\n  beforeTickToLabelConversion() {\n    call(this.options.beforeTickToLabelConversion, [this]);\n  }\n  /**\n\t * Convert ticks to label strings\n\t * @param {Tick[]} ticks\n\t */\n  generateTickLabels(ticks) {\n    const tickOpts = this.options.ticks;\n    let i, ilen, tick;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      tick = ticks[i];\n      tick.label = call(tickOpts.callback, [tick.value, i, ticks], this);\n    }\n  }\n  afterTickToLabelConversion() {\n    call(this.options.afterTickToLabelConversion, [this]);\n  }\n\n  //\n\n  beforeCalculateLabelRotation() {\n    call(this.options.beforeCalculateLabelRotation, [this]);\n  }\n  calculateLabelRotation() {\n    const options = this.options;\n    const tickOpts = options.ticks;\n    const numTicks = getTicksLimit(this.ticks.length, options.ticks.maxTicksLimit);\n    const minRotation = tickOpts.minRotation || 0;\n    const maxRotation = tickOpts.maxRotation;\n    let labelRotation = minRotation;\n    let tickWidth, maxHeight, maxLabelDiagonal;\n\n    if (!this._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !this.isHorizontal()) {\n      this.labelRotation = minRotation;\n      return;\n    }\n\n    const labelSizes = this._getLabelSizes();\n    const maxLabelWidth = labelSizes.widest.width;\n    const maxLabelHeight = labelSizes.highest.height;\n\n    // Estimate the width of each grid based on the canvas width, the maximum\n    // label width and the number of tick intervals\n    const maxWidth = _limitValue(this.chart.width - maxLabelWidth, 0, this.maxWidth);\n    tickWidth = options.offset ? this.maxWidth / numTicks : maxWidth / (numTicks - 1);\n\n    // Allow 3 pixels x2 padding either side for label readability\n    if (maxLabelWidth + 6 > tickWidth) {\n      tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n      maxHeight = this.maxHeight - getTickMarkLength(options.grid)\n\t\t\t\t- tickOpts.padding - getTitleHeight(options.title, this.chart.options.font);\n      maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n      labelRotation = toDegrees(Math.min(\n        Math.asin(_limitValue((labelSizes.highest.height + 6) / tickWidth, -1, 1)),\n        Math.asin(_limitValue(maxHeight / maxLabelDiagonal, -1, 1)) - Math.asin(_limitValue(maxLabelHeight / maxLabelDiagonal, -1, 1))\n      ));\n      labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n    }\n\n    this.labelRotation = labelRotation;\n  }\n  afterCalculateLabelRotation() {\n    call(this.options.afterCalculateLabelRotation, [this]);\n  }\n  afterAutoSkip() {}\n\n  //\n\n  beforeFit() {\n    call(this.options.beforeFit, [this]);\n  }\n  fit() {\n    // Reset\n    const minSize = {\n      width: 0,\n      height: 0\n    };\n\n    const {chart, options: {ticks: tickOpts, title: titleOpts, grid: gridOpts}} = this;\n    const display = this._isVisible();\n    const isHorizontal = this.isHorizontal();\n\n    if (display) {\n      const titleHeight = getTitleHeight(titleOpts, chart.options.font);\n      if (isHorizontal) {\n        minSize.width = this.maxWidth;\n        minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n      } else {\n        minSize.height = this.maxHeight; // fill all the height\n        minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n      }\n\n      // Don't bother fitting the ticks if we are not showing the labels\n      if (tickOpts.display && this.ticks.length) {\n        const {first, last, widest, highest} = this._getLabelSizes();\n        const tickPadding = tickOpts.padding * 2;\n        const angleRadians = toRadians(this.labelRotation);\n        const cos = Math.cos(angleRadians);\n        const sin = Math.sin(angleRadians);\n\n        if (isHorizontal) {\n        // A horizontal axis is more constrained by the height.\n          const labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n          minSize.height = Math.min(this.maxHeight, minSize.height + labelHeight + tickPadding);\n        } else {\n        // A vertical axis is more constrained by the width. Labels are the\n        // dominant factor here, so get that length first and account for padding\n          const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n\n          minSize.width = Math.min(this.maxWidth, minSize.width + labelWidth + tickPadding);\n        }\n        this._calculatePadding(first, last, sin, cos);\n      }\n    }\n\n    this._handleMargins();\n\n    if (isHorizontal) {\n      this.width = this._length = chart.width - this._margins.left - this._margins.right;\n      this.height = minSize.height;\n    } else {\n      this.width = minSize.width;\n      this.height = this._length = chart.height - this._margins.top - this._margins.bottom;\n    }\n  }\n\n  _calculatePadding(first, last, sin, cos) {\n    const {ticks: {align, padding}, position} = this.options;\n    const isRotated = this.labelRotation !== 0;\n    const labelsBelowTicks = position !== 'top' && this.axis === 'x';\n\n    if (this.isHorizontal()) {\n      const offsetLeft = this.getPixelForTick(0) - this.left;\n      const offsetRight = this.right - this.getPixelForTick(this.ticks.length - 1);\n      let paddingLeft = 0;\n      let paddingRight = 0;\n\n      // Ensure that our ticks are always inside the canvas. When rotated, ticks are right aligned\n      // which means that the right padding is dominated by the font height\n      if (isRotated) {\n        if (labelsBelowTicks) {\n          paddingLeft = cos * first.width;\n          paddingRight = sin * last.height;\n        } else {\n          paddingLeft = sin * first.height;\n          paddingRight = cos * last.width;\n        }\n      } else if (align === 'start') {\n        paddingRight = last.width;\n      } else if (align === 'end') {\n        paddingLeft = first.width;\n      } else if (align !== 'inner') {\n        paddingLeft = first.width / 2;\n        paddingRight = last.width / 2;\n      }\n\n      // Adjust padding taking into account changes in offsets\n      this.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * this.width / (this.width - offsetLeft), 0);\n      this.paddingRight = Math.max((paddingRight - offsetRight + padding) * this.width / (this.width - offsetRight), 0);\n    } else {\n      let paddingTop = last.height / 2;\n      let paddingBottom = first.height / 2;\n\n      if (align === 'start') {\n        paddingTop = 0;\n        paddingBottom = first.height;\n      } else if (align === 'end') {\n        paddingTop = last.height;\n        paddingBottom = 0;\n      }\n\n      this.paddingTop = paddingTop + padding;\n      this.paddingBottom = paddingBottom + padding;\n    }\n  }\n\n  /**\n\t * Handle margins and padding interactions\n\t * @private\n\t */\n  _handleMargins() {\n    if (this._margins) {\n      this._margins.left = Math.max(this.paddingLeft, this._margins.left);\n      this._margins.top = Math.max(this.paddingTop, this._margins.top);\n      this._margins.right = Math.max(this.paddingRight, this._margins.right);\n      this._margins.bottom = Math.max(this.paddingBottom, this._margins.bottom);\n    }\n  }\n\n  afterFit() {\n    call(this.options.afterFit, [this]);\n  }\n\n  // Shared Methods\n  /**\n\t * @return {boolean}\n\t */\n  isHorizontal() {\n    const {axis, position} = this.options;\n    return position === 'top' || position === 'bottom' || axis === 'x';\n  }\n  /**\n\t * @return {boolean}\n\t */\n  isFullSize() {\n    return this.options.fullSize;\n  }\n\n  /**\n\t * @param {Tick[]} ticks\n\t * @private\n\t */\n  _convertTicksToLabels(ticks) {\n    this.beforeTickToLabelConversion();\n\n    this.generateTickLabels(ticks);\n\n    // Ticks should be skipped when callback returns null or undef, so lets remove those.\n    let i, ilen;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      if (isNullOrUndef(ticks[i].label)) {\n        ticks.splice(i, 1);\n        ilen--;\n        i--;\n      }\n    }\n\n    this.afterTickToLabelConversion();\n  }\n\n  /**\n\t * @return {{ first: object, last: object, widest: object, highest: object, widths: Array, heights: array }}\n\t * @private\n\t */\n  _getLabelSizes() {\n    let labelSizes = this._labelSizes;\n\n    if (!labelSizes) {\n      const sampleSize = this.options.ticks.sampleSize;\n      let ticks = this.ticks;\n      if (sampleSize < ticks.length) {\n        ticks = sample(ticks, sampleSize);\n      }\n\n      this._labelSizes = labelSizes = this._computeLabelSizes(ticks, ticks.length, this.options.ticks.maxTicksLimit);\n    }\n\n    return labelSizes;\n  }\n\n  /**\n\t * Returns {width, height, offset} objects for the first, last, widest, highest tick\n\t * labels where offset indicates the anchor point offset from the top in pixels.\n\t * @return {{ first: object, last: object, widest: object, highest: object, widths: Array, heights: array }}\n\t * @private\n\t */\n  _computeLabelSizes(ticks, length, maxTicksLimit) {\n    const {ctx, _longestTextCache: caches} = this;\n    const widths = [];\n    const heights = [];\n    const increment = Math.floor(length / getTicksLimit(length, maxTicksLimit));\n    let widestLabelSize = 0;\n    let highestLabelSize = 0;\n    let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n\n    for (i = 0; i < length; i += increment) {\n      label = ticks[i].label;\n      tickFont = this._resolveTickFontOptions(i);\n      ctx.font = fontString = tickFont.string;\n      cache = caches[fontString] = caches[fontString] || {data: {}, gc: []};\n      lineHeight = tickFont.lineHeight;\n      width = height = 0;\n      // Undefined labels and arrays should not be measured\n      if (!isNullOrUndef(label) && !isArray(label)) {\n        width = _measureText(ctx, cache.data, cache.gc, width, label);\n        height = lineHeight;\n      } else if (isArray(label)) {\n        // if it is an array let's measure each element\n        for (j = 0, jlen = label.length; j < jlen; ++j) {\n          nestedLabel = /** @type {string} */ (label[j]);\n          // Undefined labels and arrays should not be measured\n          if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\n            width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n            height += lineHeight;\n          }\n        }\n      }\n      widths.push(width);\n      heights.push(height);\n      widestLabelSize = Math.max(width, widestLabelSize);\n      highestLabelSize = Math.max(height, highestLabelSize);\n    }\n    garbageCollect(caches, length);\n\n    const widest = widths.indexOf(widestLabelSize);\n    const highest = heights.indexOf(highestLabelSize);\n\n    const valueAt = (idx) => ({width: widths[idx] || 0, height: heights[idx] || 0});\n\n    return {\n      first: valueAt(0),\n      last: valueAt(length - 1),\n      widest: valueAt(widest),\n      highest: valueAt(highest),\n      widths,\n      heights,\n    };\n  }\n\n  /**\n\t * Used to get the label to display in the tooltip for the given value\n\t * @param {*} value\n\t * @return {string}\n\t */\n  getLabelForValue(value) {\n    return value;\n  }\n\n  /**\n\t * Returns the location of the given data point. Value can either be an index or a numerical value\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {*} value\n\t * @param {number} [index]\n\t * @return {number}\n\t */\n  getPixelForValue(value, index) { // eslint-disable-line no-unused-vars\n    return NaN;\n  }\n\n  /**\n\t * Used to get the data value from a given pixel. This is the inverse of getPixelForValue\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {number} pixel\n\t * @return {*}\n\t */\n  getValueForPixel(pixel) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * Returns the location of the tick at the given index\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {number} index\n\t * @return {number}\n\t */\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n\n  /**\n\t * Utility for getting the pixel location of a percentage of scale\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {number} decimal\n\t * @return {number}\n\t */\n  getPixelForDecimal(decimal) {\n    if (this._reversePixels) {\n      decimal = 1 - decimal;\n    }\n\n    const pixel = this._startPixel + decimal * this._length;\n    return _int16Range(this._alignToPixels ? _alignPixel(this.chart, pixel, 0) : pixel);\n  }\n\n  /**\n\t * @param {number} pixel\n\t * @return {number}\n\t */\n  getDecimalForPixel(pixel) {\n    const decimal = (pixel - this._startPixel) / this._length;\n    return this._reversePixels ? 1 - decimal : decimal;\n  }\n\n  /**\n\t * Returns the pixel for the minimum chart value\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @return {number}\n\t */\n  getBasePixel() {\n    return this.getPixelForValue(this.getBaseValue());\n  }\n\n  /**\n\t * @return {number}\n\t */\n  getBaseValue() {\n    const {min, max} = this;\n\n    return min < 0 && max < 0 ? max :\n      min > 0 && max > 0 ? min :\n      0;\n  }\n\n  /**\n\t * @protected\n\t */\n  getContext(index) {\n    const ticks = this.ticks || [];\n\n    if (index >= 0 && index < ticks.length) {\n      const tick = ticks[index];\n      return tick.$context ||\n\t\t\t\t(tick.$context = createTickContext(this.getContext(), index, tick));\n    }\n    return this.$context ||\n\t\t\t(this.$context = createScaleContext(this.chart.getContext(), this));\n  }\n\n  /**\n\t * @return {number}\n\t * @private\n\t */\n  _tickSize() {\n    const optionTicks = this.options.ticks;\n\n    // Calculate space needed by label in axis direction.\n    const rot = toRadians(this.labelRotation);\n    const cos = Math.abs(Math.cos(rot));\n    const sin = Math.abs(Math.sin(rot));\n\n    const labelSizes = this._getLabelSizes();\n    const padding = optionTicks.autoSkipPadding || 0;\n    const w = labelSizes ? labelSizes.widest.width + padding : 0;\n    const h = labelSizes ? labelSizes.highest.height + padding : 0;\n\n    // Calculate space needed for 1 tick in axis direction.\n    return this.isHorizontal()\n      ? h * cos > w * sin ? w / cos : h / sin\n      : h * sin < w * cos ? h / cos : w / sin;\n  }\n\n  /**\n\t * @return {boolean}\n\t * @private\n\t */\n  _isVisible() {\n    const display = this.options.display;\n\n    if (display !== 'auto') {\n      return !!display;\n    }\n\n    return this.getMatchingVisibleMetas().length > 0;\n  }\n\n  /**\n\t * @private\n\t */\n  _computeGridLineItems(chartArea) {\n    const axis = this.axis;\n    const chart = this.chart;\n    const options = this.options;\n    const {grid, position, border} = options;\n    const offset = grid.offset;\n    const isHorizontal = this.isHorizontal();\n    const ticks = this.ticks;\n    const ticksLength = ticks.length + (offset ? 1 : 0);\n    const tl = getTickMarkLength(grid);\n    const items = [];\n\n    const borderOpts = border.setContext(this.getContext());\n    const axisWidth = borderOpts.display ? borderOpts.width : 0;\n    const axisHalfWidth = axisWidth / 2;\n    const alignBorderValue = function(pixel) {\n      return _alignPixel(chart, pixel, axisWidth);\n    };\n    let borderValue, i, lineValue, alignedLineValue;\n    let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n\n    if (position === 'top') {\n      borderValue = alignBorderValue(this.bottom);\n      ty1 = this.bottom - tl;\n      ty2 = borderValue - axisHalfWidth;\n      y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n      y2 = chartArea.bottom;\n    } else if (position === 'bottom') {\n      borderValue = alignBorderValue(this.top);\n      y1 = chartArea.top;\n      y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = this.top + tl;\n    } else if (position === 'left') {\n      borderValue = alignBorderValue(this.right);\n      tx1 = this.right - tl;\n      tx2 = borderValue - axisHalfWidth;\n      x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n      x2 = chartArea.right;\n    } else if (position === 'right') {\n      borderValue = alignBorderValue(this.left);\n      x1 = chartArea.left;\n      x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n      tx1 = borderValue + axisHalfWidth;\n      tx2 = this.left + tl;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n\n      y1 = chartArea.top;\n      y2 = chartArea.bottom;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = ty1 + tl;\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n\n      tx1 = borderValue - axisHalfWidth;\n      tx2 = tx1 - tl;\n      x1 = chartArea.left;\n      x2 = chartArea.right;\n    }\n\n    const limit = valueOrDefault(options.ticks.maxTicksLimit, ticksLength);\n    const step = Math.max(1, Math.ceil(ticksLength / limit));\n    for (i = 0; i < ticksLength; i += step) {\n      const context = this.getContext(i);\n      const optsAtIndex = grid.setContext(context);\n      const optsAtIndexBorder = border.setContext(context);\n\n      const lineWidth = optsAtIndex.lineWidth;\n      const lineColor = optsAtIndex.color;\n      const borderDash = optsAtIndexBorder.dash || [];\n      const borderDashOffset = optsAtIndexBorder.dashOffset;\n\n      const tickWidth = optsAtIndex.tickWidth;\n      const tickColor = optsAtIndex.tickColor;\n      const tickBorderDash = optsAtIndex.tickBorderDash || [];\n      const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n\n      lineValue = getPixelForGridLine(this, i, offset);\n\n      // Skip if the pixel is out of the range\n      if (lineValue === undefined) {\n        continue;\n      }\n\n      alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\n\n      if (isHorizontal) {\n        tx1 = tx2 = x1 = x2 = alignedLineValue;\n      } else {\n        ty1 = ty2 = y1 = y2 = alignedLineValue;\n      }\n\n      items.push({\n        tx1,\n        ty1,\n        tx2,\n        ty2,\n        x1,\n        y1,\n        x2,\n        y2,\n        width: lineWidth,\n        color: lineColor,\n        borderDash,\n        borderDashOffset,\n        tickWidth,\n        tickColor,\n        tickBorderDash,\n        tickBorderDashOffset,\n      });\n    }\n\n    this._ticksLength = ticksLength;\n    this._borderValue = borderValue;\n\n    return items;\n  }\n\n  /**\n\t * @private\n\t */\n  _computeLabelItems(chartArea) {\n    const axis = this.axis;\n    const options = this.options;\n    const {position, ticks: optionTicks} = options;\n    const isHorizontal = this.isHorizontal();\n    const ticks = this.ticks;\n    const {align, crossAlign, padding, mirror} = optionTicks;\n    const tl = getTickMarkLength(options.grid);\n    const tickAndPadding = tl + padding;\n    const hTickAndPadding = mirror ? -padding : tickAndPadding;\n    const rotation = -toRadians(this.labelRotation);\n    const items = [];\n    let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n    let textBaseline = 'middle';\n\n    if (position === 'top') {\n      y = this.bottom - hTickAndPadding;\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (position === 'bottom') {\n      y = this.top + hTickAndPadding;\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (position === 'left') {\n      const ret = this._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (position === 'right') {\n      const ret = this._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        y = ((chartArea.top + chartArea.bottom) / 2) + tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        y = this.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n      }\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        x = ((chartArea.left + chartArea.right) / 2) - tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        x = this.chart.scales[positionAxisID].getPixelForValue(value);\n      }\n      textAlign = this._getYAxisLabelAlignment(tl).textAlign;\n    }\n\n    if (axis === 'y') {\n      if (align === 'start') {\n        textBaseline = 'top';\n      } else if (align === 'end') {\n        textBaseline = 'bottom';\n      }\n    }\n\n    const labelSizes = this._getLabelSizes();\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      label = tick.label;\n\n      const optsAtIndex = optionTicks.setContext(this.getContext(i));\n      pixel = this.getPixelForTick(i) + optionTicks.labelOffset;\n      font = this._resolveTickFontOptions(i);\n      lineHeight = font.lineHeight;\n      lineCount = isArray(label) ? label.length : 1;\n      const halfCount = lineCount / 2;\n      const color = optsAtIndex.color;\n      const strokeColor = optsAtIndex.textStrokeColor;\n      const strokeWidth = optsAtIndex.textStrokeWidth;\n      let tickTextAlign = textAlign;\n\n      if (isHorizontal) {\n        x = pixel;\n\n        if (textAlign === 'inner') {\n          if (i === ilen - 1) {\n            tickTextAlign = !this.options.reverse ? 'right' : 'left';\n          } else if (i === 0) {\n            tickTextAlign = !this.options.reverse ? 'left' : 'right';\n          } else {\n            tickTextAlign = 'center';\n          }\n        }\n\n        if (position === 'top') {\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = -lineCount * lineHeight + lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n          } else {\n            textOffset = -labelSizes.highest.height + lineHeight / 2;\n          }\n        } else {\n          // eslint-disable-next-line no-lonely-if\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n          } else {\n            textOffset = labelSizes.highest.height - lineCount * lineHeight;\n          }\n        }\n        if (mirror) {\n          textOffset *= -1;\n        }\n        if (rotation !== 0 && !optsAtIndex.showLabelBackdrop) {\n          x += (lineHeight / 2) * Math.sin(rotation);\n        }\n      } else {\n        y = pixel;\n        textOffset = (1 - lineCount) * lineHeight / 2;\n      }\n\n      let backdrop;\n\n      if (optsAtIndex.showLabelBackdrop) {\n        const labelPadding = toPadding(optsAtIndex.backdropPadding);\n        const height = labelSizes.heights[i];\n        const width = labelSizes.widths[i];\n\n        let top = textOffset - labelPadding.top;\n        let left = 0 - labelPadding.left;\n\n        switch (textBaseline) {\n        case 'middle':\n          top -= height / 2;\n          break;\n        case 'bottom':\n          top -= height;\n          break;\n        default:\n          break;\n        }\n\n        switch (textAlign) {\n        case 'center':\n          left -= width / 2;\n          break;\n        case 'right':\n          left -= width;\n          break;\n        case 'inner':\n          if (i === ilen - 1) {\n            left -= width;\n          } else if (i > 0) {\n            left -= width / 2;\n          }\n          break;\n        default:\n          break;\n        }\n\n        backdrop = {\n          left,\n          top,\n          width: width + labelPadding.width,\n          height: height + labelPadding.height,\n\n          color: optsAtIndex.backdropColor,\n        };\n      }\n\n      items.push({\n        label,\n        font,\n        textOffset,\n        options: {\n          rotation,\n          color,\n          strokeColor,\n          strokeWidth,\n          textAlign: tickTextAlign,\n          textBaseline,\n          translation: [x, y],\n          backdrop,\n        }\n      });\n    }\n\n    return items;\n  }\n\n  _getXAxisLabelAlignment() {\n    const {position, ticks} = this.options;\n    const rotation = -toRadians(this.labelRotation);\n\n    if (rotation) {\n      return position === 'top' ? 'left' : 'right';\n    }\n\n    let align = 'center';\n\n    if (ticks.align === 'start') {\n      align = 'left';\n    } else if (ticks.align === 'end') {\n      align = 'right';\n    } else if (ticks.align === 'inner') {\n      align = 'inner';\n    }\n\n    return align;\n  }\n\n  _getYAxisLabelAlignment(tl) {\n    const {position, ticks: {crossAlign, mirror, padding}} = this.options;\n    const labelSizes = this._getLabelSizes();\n    const tickAndPadding = tl + padding;\n    const widest = labelSizes.widest.width;\n\n    let textAlign;\n    let x;\n\n    if (position === 'left') {\n      if (mirror) {\n        x = this.right + padding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += (widest / 2);\n        } else {\n          textAlign = 'right';\n          x += widest;\n        }\n      } else {\n        x = this.right - tickAndPadding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x = this.left;\n        }\n      }\n    } else if (position === 'right') {\n      if (mirror) {\n        x = this.left + padding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x -= widest;\n        }\n      } else {\n        x = this.left + tickAndPadding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += widest / 2;\n        } else {\n          textAlign = 'right';\n          x = this.right;\n        }\n      }\n    } else {\n      textAlign = 'right';\n    }\n\n    return {textAlign, x};\n  }\n\n  /**\n\t * @private\n\t */\n  _computeLabelArea() {\n    if (this.options.ticks.mirror) {\n      return;\n    }\n\n    const chart = this.chart;\n    const position = this.options.position;\n\n    if (position === 'left' || position === 'right') {\n      return {top: 0, left: this.left, bottom: chart.height, right: this.right};\n    } if (position === 'top' || position === 'bottom') {\n      return {top: this.top, left: 0, bottom: this.bottom, right: chart.width};\n    }\n  }\n\n  /**\n   * @protected\n   */\n  drawBackground() {\n    const {ctx, options: {backgroundColor}, left, top, width, height} = this;\n    if (backgroundColor) {\n      ctx.save();\n      ctx.fillStyle = backgroundColor;\n      ctx.fillRect(left, top, width, height);\n      ctx.restore();\n    }\n  }\n\n  getLineWidthForValue(value) {\n    const grid = this.options.grid;\n    if (!this._isVisible() || !grid.display) {\n      return 0;\n    }\n    const ticks = this.ticks;\n    const index = ticks.findIndex(t => t.value === value);\n    if (index >= 0) {\n      const opts = grid.setContext(this.getContext(index));\n      return opts.lineWidth;\n    }\n    return 0;\n  }\n\n  /**\n\t * @protected\n\t */\n  drawGrid(chartArea) {\n    const grid = this.options.grid;\n    const ctx = this.ctx;\n    const items = this._gridLineItems || (this._gridLineItems = this._computeGridLineItems(chartArea));\n    let i, ilen;\n\n    const drawLine = (p1, p2, style) => {\n      if (!style.width || !style.color) {\n        return;\n      }\n      ctx.save();\n      ctx.lineWidth = style.width;\n      ctx.strokeStyle = style.color;\n      ctx.setLineDash(style.borderDash || []);\n      ctx.lineDashOffset = style.borderDashOffset;\n\n      ctx.beginPath();\n      ctx.moveTo(p1.x, p1.y);\n      ctx.lineTo(p2.x, p2.y);\n      ctx.stroke();\n      ctx.restore();\n    };\n\n    if (grid.display) {\n      for (i = 0, ilen = items.length; i < ilen; ++i) {\n        const item = items[i];\n\n        if (grid.drawOnChartArea) {\n          drawLine(\n            {x: item.x1, y: item.y1},\n            {x: item.x2, y: item.y2},\n            item\n          );\n        }\n\n        if (grid.drawTicks) {\n          drawLine(\n            {x: item.tx1, y: item.ty1},\n            {x: item.tx2, y: item.ty2},\n            {\n              color: item.tickColor,\n              width: item.tickWidth,\n              borderDash: item.tickBorderDash,\n              borderDashOffset: item.tickBorderDashOffset\n            }\n          );\n        }\n      }\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawBorder() {\n    const {chart, ctx, options: {border, grid}} = this;\n    const borderOpts = border.setContext(this.getContext());\n    const axisWidth = border.display ? borderOpts.width : 0;\n    if (!axisWidth) {\n      return;\n    }\n    const lastLineWidth = grid.setContext(this.getContext(0)).lineWidth;\n    const borderValue = this._borderValue;\n    let x1, x2, y1, y2;\n\n    if (this.isHorizontal()) {\n      x1 = _alignPixel(chart, this.left, axisWidth) - axisWidth / 2;\n      x2 = _alignPixel(chart, this.right, lastLineWidth) + lastLineWidth / 2;\n      y1 = y2 = borderValue;\n    } else {\n      y1 = _alignPixel(chart, this.top, axisWidth) - axisWidth / 2;\n      y2 = _alignPixel(chart, this.bottom, lastLineWidth) + lastLineWidth / 2;\n      x1 = x2 = borderValue;\n    }\n    ctx.save();\n    ctx.lineWidth = borderOpts.width;\n    ctx.strokeStyle = borderOpts.color;\n\n    ctx.beginPath();\n    ctx.moveTo(x1, y1);\n    ctx.lineTo(x2, y2);\n    ctx.stroke();\n\n    ctx.restore();\n  }\n\n  /**\n\t * @protected\n\t */\n  drawLabels(chartArea) {\n    const optionTicks = this.options.ticks;\n\n    if (!optionTicks.display) {\n      return;\n    }\n\n    const ctx = this.ctx;\n\n    const area = this._computeLabelArea();\n    if (area) {\n      clipArea(ctx, area);\n    }\n\n    const items = this.getLabelItems(chartArea);\n    for (const item of items) {\n      const renderTextOptions = item.options;\n      const tickFont = item.font;\n      const label = item.label;\n      const y = item.textOffset;\n      renderText(ctx, label, 0, y, tickFont, renderTextOptions);\n    }\n\n    if (area) {\n      unclipArea(ctx);\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawTitle() {\n    const {ctx, options: {position, title, reverse}} = this;\n\n    if (!title.display) {\n      return;\n    }\n\n    const font = toFont(title.font);\n    const padding = toPadding(title.padding);\n    const align = title.align;\n    let offset = font.lineHeight / 2;\n\n    if (position === 'bottom' || position === 'center' || isObject(position)) {\n      offset += padding.bottom;\n      if (isArray(title.text)) {\n        offset += font.lineHeight * (title.text.length - 1);\n      }\n    } else {\n      offset += padding.top;\n    }\n\n    const {titleX, titleY, maxWidth, rotation} = titleArgs(this, offset, position, align);\n\n    renderText(ctx, title.text, 0, 0, font, {\n      color: title.color,\n      maxWidth,\n      rotation,\n      textAlign: titleAlign(align, position, reverse),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n\n  draw(chartArea) {\n    if (!this._isVisible()) {\n      return;\n    }\n\n    this.drawBackground();\n    this.drawGrid(chartArea);\n    this.drawBorder();\n    this.drawTitle();\n    this.drawLabels(chartArea);\n  }\n\n  /**\n\t * @return {object[]}\n\t * @private\n\t */\n  _layers() {\n    const opts = this.options;\n    const tz = opts.ticks && opts.ticks.z || 0;\n    const gz = valueOrDefault(opts.grid && opts.grid.z, -1);\n    const bz = valueOrDefault(opts.border && opts.border.z, 0);\n\n    if (!this._isVisible() || this.draw !== Scale.prototype.draw) {\n      // backward compatibility: draw has been overridden by custom scale\n      return [{\n        z: tz,\n        draw: (chartArea) => {\n          this.draw(chartArea);\n        }\n      }];\n    }\n\n    return [{\n      z: gz,\n      draw: (chartArea) => {\n        this.drawBackground();\n        this.drawGrid(chartArea);\n        this.drawTitle();\n      }\n    }, {\n      z: bz,\n      draw: () => {\n        this.drawBorder();\n      }\n    }, {\n      z: tz,\n      draw: (chartArea) => {\n        this.drawLabels(chartArea);\n      }\n    }];\n  }\n\n  /**\n\t * Returns visible dataset metas that are attached to this scale\n\t * @param {string} [type] - if specified, also filter by dataset type\n\t * @return {object[]}\n\t */\n  getMatchingVisibleMetas(type) {\n    const metas = this.chart.getSortedVisibleDatasetMetas();\n    const axisID = this.axis + 'AxisID';\n    const result = [];\n    let i, ilen;\n\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      const meta = metas[i];\n      if (meta[axisID] === this.id && (!type || meta.type === type)) {\n        result.push(meta);\n      }\n    }\n    return result;\n  }\n\n  /**\n\t * @param {number} index\n\t * @return {object}\n\t * @protected\n \t */\n  _resolveTickFontOptions(index) {\n    const opts = this.options.ticks.setContext(this.getContext(index));\n    return toFont(opts.font);\n  }\n\n  /**\n   * @protected\n   */\n  _maxDigits() {\n    const fontSize = this._resolveTickFontOptions(0).lineHeight;\n    return (this.isHorizontal() ? this.width : this.height) / fontSize;\n  }\n}\n","import {merge} from '../helpers/index.js';\nimport defaults, {overrides} from './core.defaults.js';\n\n/**\n * @typedef {{id: string, defaults: any, overrides?: any, defaultRoutes: any}} IChartComponent\n */\n\nexport default class TypedRegistry {\n  constructor(type, scope, override) {\n    this.type = type;\n    this.scope = scope;\n    this.override = override;\n    this.items = Object.create(null);\n  }\n\n  isForType(type) {\n    return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n  }\n\n  /**\n\t * @param {IChartComponent} item\n\t * @returns {string} The scope where items defaults were registered to.\n\t */\n  register(item) {\n    const proto = Object.getPrototypeOf(item);\n    let parentScope;\n\n    if (isIChartComponent(proto)) {\n      // Make sure the parent is registered and note the scope where its defaults are.\n      parentScope = this.register(proto);\n    }\n\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope + '.' + id;\n\n    if (!id) {\n      throw new Error('class does not have id: ' + item);\n    }\n\n    if (id in items) {\n      // already registered\n      return scope;\n    }\n\n    items[id] = item;\n    registerDefaults(item, scope, parentScope);\n    if (this.override) {\n      defaults.override(item.id, item.overrides);\n    }\n\n    return scope;\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {object?}\n\t */\n  get(id) {\n    return this.items[id];\n  }\n\n  /**\n\t * @param {IChartComponent} item\n\t */\n  unregister(item) {\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope;\n\n    if (id in items) {\n      delete items[id];\n    }\n\n    if (scope && id in defaults[scope]) {\n      delete defaults[scope][id];\n      if (this.override) {\n        delete overrides[id];\n      }\n    }\n  }\n}\n\nfunction registerDefaults(item, scope, parentScope) {\n  // Inherit the parent's defaults and keep existing defaults\n  const itemDefaults = merge(Object.create(null), [\n    parentScope ? defaults.get(parentScope) : {},\n    defaults.get(scope),\n    item.defaults\n  ]);\n\n  defaults.set(scope, itemDefaults);\n\n  if (item.defaultRoutes) {\n    routeDefaults(scope, item.defaultRoutes);\n  }\n\n  if (item.descriptors) {\n    defaults.describe(scope, item.descriptors);\n  }\n}\n\nfunction routeDefaults(scope, routes) {\n  Object.keys(routes).forEach(property => {\n    const propertyParts = property.split('.');\n    const sourceName = propertyParts.pop();\n    const sourceScope = [scope].concat(propertyParts).join('.');\n    const parts = routes[property].split('.');\n    const targetName = parts.pop();\n    const targetScope = parts.join('.');\n    defaults.route(sourceScope, sourceName, targetScope, targetName);\n  });\n}\n\nfunction isIChartComponent(proto) {\n  return 'id' in proto && 'defaults' in proto;\n}\n","import DatasetController from './core.datasetController.js';\nimport Element from './core.element.js';\nimport Scale from './core.scale.js';\nimport TypedRegistry from './core.typedRegistry.js';\nimport {each, callback as call, _capitalize} from '../helpers/helpers.core.js';\n\n/**\n * Please use the module's default export which provides a singleton instance\n * Note: class is exported for typedoc\n */\nexport class Registry {\n  constructor() {\n    this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n    this.elements = new TypedRegistry(Element, 'elements');\n    this.plugins = new TypedRegistry(Object, 'plugins');\n    this.scales = new TypedRegistry(Scale, 'scales');\n    // Order is important, Scale has Element in prototype chain,\n    // so Scales must be before Elements. Plugins are a fallback, so not listed here.\n    this._typedRegistries = [this.controllers, this.scales, this.elements];\n  }\n\n  /**\n\t * @param  {...any} args\n\t */\n  add(...args) {\n    this._each('register', args);\n  }\n\n  remove(...args) {\n    this._each('unregister', args);\n  }\n\n  /**\n\t * @param  {...typeof DatasetController} args\n\t */\n  addControllers(...args) {\n    this._each('register', args, this.controllers);\n  }\n\n  /**\n\t * @param  {...typeof Element} args\n\t */\n  addElements(...args) {\n    this._each('register', args, this.elements);\n  }\n\n  /**\n\t * @param  {...any} args\n\t */\n  addPlugins(...args) {\n    this._each('register', args, this.plugins);\n  }\n\n  /**\n\t * @param  {...typeof Scale} args\n\t */\n  addScales(...args) {\n    this._each('register', args, this.scales);\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {typeof DatasetController}\n\t */\n  getController(id) {\n    return this._get(id, this.controllers, 'controller');\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {typeof Element}\n\t */\n  getElement(id) {\n    return this._get(id, this.elements, 'element');\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {object}\n\t */\n  getPlugin(id) {\n    return this._get(id, this.plugins, 'plugin');\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {typeof Scale}\n\t */\n  getScale(id) {\n    return this._get(id, this.scales, 'scale');\n  }\n\n  /**\n\t * @param  {...typeof DatasetController} args\n\t */\n  removeControllers(...args) {\n    this._each('unregister', args, this.controllers);\n  }\n\n  /**\n\t * @param  {...typeof Element} args\n\t */\n  removeElements(...args) {\n    this._each('unregister', args, this.elements);\n  }\n\n  /**\n\t * @param  {...any} args\n\t */\n  removePlugins(...args) {\n    this._each('unregister', args, this.plugins);\n  }\n\n  /**\n\t * @param  {...typeof Scale} args\n\t */\n  removeScales(...args) {\n    this._each('unregister', args, this.scales);\n  }\n\n  /**\n\t * @private\n\t */\n  _each(method, args, typedRegistry) {\n    [...args].forEach(arg => {\n      const reg = typedRegistry || this._getRegistryForType(arg);\n      if (typedRegistry || reg.isForType(arg) || (reg === this.plugins && arg.id)) {\n        this._exec(method, reg, arg);\n      } else {\n        // Handle loopable args\n        // Use case:\n        //  import * as plugins from './plugins.js';\n        //  Chart.register(plugins);\n        each(arg, item => {\n          // If there are mixed types in the loopable, make sure those are\n          // registered in correct registry\n          // Use case: (treemap exporting controller, elements etc)\n          //  import * as treemap from 'chartjs-chart-treemap.js';\n          //  Chart.register(treemap);\n\n          const itemReg = typedRegistry || this._getRegistryForType(item);\n          this._exec(method, itemReg, item);\n        });\n      }\n    });\n  }\n\n  /**\n\t * @private\n\t */\n  _exec(method, registry, component) {\n    const camelMethod = _capitalize(method);\n    call(component['before' + camelMethod], [], component); // beforeRegister / beforeUnregister\n    registry[method](component);\n    call(component['after' + camelMethod], [], component); // afterRegister / afterUnregister\n  }\n\n  /**\n\t * @private\n\t */\n  _getRegistryForType(type) {\n    for (let i = 0; i < this._typedRegistries.length; i++) {\n      const reg = this._typedRegistries[i];\n      if (reg.isForType(type)) {\n        return reg;\n      }\n    }\n    // plugins is the fallback registry\n    return this.plugins;\n  }\n\n  /**\n\t * @private\n\t */\n  _get(id, typedRegistry, type) {\n    const item = typedRegistry.get(id);\n    if (item === undefined) {\n      throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n    }\n    return item;\n  }\n\n}\n\n// singleton instance\nexport default /* #__PURE__ */ new Registry();\n","import registry from './core.registry.js';\nimport {callback as callCallback, isNullOrUndef, valueOrDefault} from '../helpers/helpers.core.js';\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n * @typedef { import('../plugins/plugin.tooltip.js').default } Tooltip\n */\n\n/**\n * @callback filterCallback\n * @param {{plugin: object, options: object}} value\n * @param {number} [index]\n * @param {array} [array]\n * @param {object} [thisArg]\n * @return {boolean}\n */\n\n\nexport default class PluginService {\n  constructor() {\n    this._init = [];\n  }\n\n  /**\n\t * Calls enabled plugins for `chart` on the specified hook and with the given args.\n\t * This method immediately returns as soon as a plugin explicitly returns false. The\n\t * returned value can be used, for instance, to interrupt the current action.\n\t * @param {Chart} chart - The chart instance for which plugins should be called.\n\t * @param {string} hook - The name of the plugin method to call (e.g. 'beforeUpdate').\n\t * @param {object} [args] - Extra arguments to apply to the hook call.\n   * @param {filterCallback} [filter] - Filtering function for limiting which plugins are notified\n\t * @returns {boolean} false if any of the plugins return false, else returns true.\n\t */\n  notify(chart, hook, args, filter) {\n    if (hook === 'beforeInit') {\n      this._init = this._createDescriptors(chart, true);\n      this._notify(this._init, chart, 'install');\n    }\n\n    const descriptors = filter ? this._descriptors(chart).filter(filter) : this._descriptors(chart);\n    const result = this._notify(descriptors, chart, hook, args);\n\n    if (hook === 'afterDestroy') {\n      this._notify(descriptors, chart, 'stop');\n      this._notify(this._init, chart, 'uninstall');\n    }\n    return result;\n  }\n\n  /**\n\t * @private\n\t */\n  _notify(descriptors, chart, hook, args) {\n    args = args || {};\n    for (const descriptor of descriptors) {\n      const plugin = descriptor.plugin;\n      const method = plugin[hook];\n      const params = [chart, args, descriptor.options];\n      if (callCallback(method, params, plugin) === false && args.cancelable) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  invalidate() {\n    // When plugins are registered, there is the possibility of a double\n    // invalidate situation. In this case, we only want to invalidate once.\n    // If we invalidate multiple times, the `_oldCache` is lost and all of the\n    // plugins are restarted without being correctly stopped.\n    // See https://github.com/chartjs/Chart.js/issues/8147\n    if (!isNullOrUndef(this._cache)) {\n      this._oldCache = this._cache;\n      this._cache = undefined;\n    }\n  }\n\n  /**\n\t * @param {Chart} chart\n\t * @private\n\t */\n  _descriptors(chart) {\n    if (this._cache) {\n      return this._cache;\n    }\n\n    const descriptors = this._cache = this._createDescriptors(chart);\n\n    this._notifyStateChanges(chart);\n\n    return descriptors;\n  }\n\n  _createDescriptors(chart, all) {\n    const config = chart && chart.config;\n    const options = valueOrDefault(config.options && config.options.plugins, {});\n    const plugins = allPlugins(config);\n    // options === false => all plugins are disabled\n    return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n  }\n\n  /**\n\t * @param {Chart} chart\n\t * @private\n\t */\n  _notifyStateChanges(chart) {\n    const previousDescriptors = this._oldCache || [];\n    const descriptors = this._cache;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.plugin.id === y.plugin.id));\n    this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n    this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n  }\n}\n\n/**\n * @param {import('./core.config.js').default} config\n */\nfunction allPlugins(config) {\n  const localIds = {};\n  const plugins = [];\n  const keys = Object.keys(registry.plugins.items);\n  for (let i = 0; i < keys.length; i++) {\n    plugins.push(registry.getPlugin(keys[i]));\n  }\n\n  const local = config.plugins || [];\n  for (let i = 0; i < local.length; i++) {\n    const plugin = local[i];\n\n    if (plugins.indexOf(plugin) === -1) {\n      plugins.push(plugin);\n      localIds[plugin.id] = true;\n    }\n  }\n\n  return {plugins, localIds};\n}\n\nfunction getOpts(options, all) {\n  if (!all && options === false) {\n    return null;\n  }\n  if (options === true) {\n    return {};\n  }\n  return options;\n}\n\nfunction createDescriptors(chart, {plugins, localIds}, options, all) {\n  const result = [];\n  const context = chart.getContext();\n\n  for (const plugin of plugins) {\n    const id = plugin.id;\n    const opts = getOpts(options[id], all);\n    if (opts === null) {\n      continue;\n    }\n    result.push({\n      plugin,\n      options: pluginOpts(chart.config, {plugin, local: localIds[id]}, opts, context)\n    });\n  }\n\n  return result;\n}\n\nfunction pluginOpts(config, {plugin, local}, opts, context) {\n  const keys = config.pluginScopeKeys(plugin);\n  const scopes = config.getOptionScopes(opts, keys);\n  if (local && plugin.defaults) {\n    // make sure plugin defaults are in scopes for local (not registered) plugins\n    scopes.push(plugin.defaults);\n  }\n  return config.createResolver(scopes, context, [''], {\n    // These are just defaults that plugins can override\n    scriptable: false,\n    indexable: false,\n    allKeys: true\n  });\n}\n","import defaults, {overrides, descriptors} from './core.defaults.js';\nimport {mergeIf, resolveObjectKey, isArray, isFunction, valueOrDefault, isObject} from '../helpers/helpers.core.js';\nimport {_attachContext, _createResolver, _descriptors} from '../helpers/helpers.config.js';\n\nexport function getIndexAxis(type, options) {\n  const datasetDefaults = defaults.datasets[type] || {};\n  const datasetOptions = (options.datasets || {})[type] || {};\n  return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\n\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n  let axis = id;\n  if (id === '_index_') {\n    axis = indexAxis;\n  } else if (id === '_value_') {\n    axis = indexAxis === 'x' ? 'y' : 'x';\n  }\n  return axis;\n}\n\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n  return axis === indexAxis ? '_index_' : '_value_';\n}\n\nfunction idMatchesAxis(id) {\n  if (id === 'x' || id === 'y' || id === 'r') {\n    return id;\n  }\n}\n\nfunction axisFromPosition(position) {\n  if (position === 'top' || position === 'bottom') {\n    return 'x';\n  }\n  if (position === 'left' || position === 'right') {\n    return 'y';\n  }\n}\n\nexport function determineAxis(id, ...scaleOptions) {\n  if (idMatchesAxis(id)) {\n    return id;\n  }\n  for (const opts of scaleOptions) {\n    const axis = opts.axis\n      || axisFromPosition(opts.position)\n      || id.length > 1 && idMatchesAxis(id[0].toLowerCase());\n    if (axis) {\n      return axis;\n    }\n  }\n  throw new Error(`Cannot determine type of '${id}' axis. Please provide 'axis' or 'position' option.`);\n}\n\nfunction getAxisFromDataset(id, axis, dataset) {\n  if (dataset[axis + 'AxisID'] === id) {\n    return {axis};\n  }\n}\n\nfunction retrieveAxisFromDatasets(id, config) {\n  if (config.data && config.data.datasets) {\n    const boundDs = config.data.datasets.filter((d) => d.xAxisID === id || d.yAxisID === id);\n    if (boundDs.length) {\n      return getAxisFromDataset(id, 'x', boundDs[0]) || getAxisFromDataset(id, 'y', boundDs[0]);\n    }\n  }\n  return {};\n}\n\nfunction mergeScaleConfig(config, options) {\n  const chartDefaults = overrides[config.type] || {scales: {}};\n  const configScales = options.scales || {};\n  const chartIndexAxis = getIndexAxis(config.type, options);\n  const scales = Object.create(null);\n\n  // First figure out first scale id's per axis.\n  Object.keys(configScales).forEach(id => {\n    const scaleConf = configScales[id];\n    if (!isObject(scaleConf)) {\n      return console.error(`Invalid scale configuration for scale: ${id}`);\n    }\n    if (scaleConf._proxy) {\n      return console.warn(`Ignoring resolver passed as options for scale: ${id}`);\n    }\n    const axis = determineAxis(id, scaleConf, retrieveAxisFromDatasets(id, config), defaults.scales[scaleConf.type]);\n    const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n    const defaultScaleOptions = chartDefaults.scales || {};\n    scales[id] = mergeIf(Object.create(null), [{axis}, scaleConf, defaultScaleOptions[axis], defaultScaleOptions[defaultId]]);\n  });\n\n  // Then merge dataset defaults to scale configs\n  config.data.datasets.forEach(dataset => {\n    const type = dataset.type || config.type;\n    const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n    const datasetDefaults = overrides[type] || {};\n    const defaultScaleOptions = datasetDefaults.scales || {};\n    Object.keys(defaultScaleOptions).forEach(defaultID => {\n      const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n      const id = dataset[axis + 'AxisID'] || axis;\n      scales[id] = scales[id] || Object.create(null);\n      mergeIf(scales[id], [{axis}, configScales[id], defaultScaleOptions[defaultID]]);\n    });\n  });\n\n  // apply scale defaults, if not overridden by dataset defaults\n  Object.keys(scales).forEach(key => {\n    const scale = scales[key];\n    mergeIf(scale, [defaults.scales[scale.type], defaults.scale]);\n  });\n\n  return scales;\n}\n\nfunction initOptions(config) {\n  const options = config.options || (config.options = {});\n\n  options.plugins = valueOrDefault(options.plugins, {});\n  options.scales = mergeScaleConfig(config, options);\n}\n\nfunction initData(data) {\n  data = data || {};\n  data.datasets = data.datasets || [];\n  data.labels = data.labels || [];\n  return data;\n}\n\nfunction initConfig(config) {\n  config = config || {};\n  config.data = initData(config.data);\n\n  initOptions(config);\n\n  return config;\n}\n\nconst keyCache = new Map();\nconst keysCached = new Set();\n\nfunction cachedKeys(cacheKey, generate) {\n  let keys = keyCache.get(cacheKey);\n  if (!keys) {\n    keys = generate();\n    keyCache.set(cacheKey, keys);\n    keysCached.add(keys);\n  }\n  return keys;\n}\n\nconst addIfFound = (set, obj, key) => {\n  const opts = resolveObjectKey(obj, key);\n  if (opts !== undefined) {\n    set.add(opts);\n  }\n};\n\nexport default class Config {\n  constructor(config) {\n    this._config = initConfig(config);\n    this._scopeCache = new Map();\n    this._resolverCache = new Map();\n  }\n\n  get platform() {\n    return this._config.platform;\n  }\n\n  get type() {\n    return this._config.type;\n  }\n\n  set type(type) {\n    this._config.type = type;\n  }\n\n  get data() {\n    return this._config.data;\n  }\n\n  set data(data) {\n    this._config.data = initData(data);\n  }\n\n  get options() {\n    return this._config.options;\n  }\n\n  set options(options) {\n    this._config.options = options;\n  }\n\n  get plugins() {\n    return this._config.plugins;\n  }\n\n  update() {\n    const config = this._config;\n    this.clearCache();\n    initOptions(config);\n  }\n\n  clearCache() {\n    this._scopeCache.clear();\n    this._resolverCache.clear();\n  }\n\n  /**\n   * Returns the option scope keys for resolving dataset options.\n   * These keys do not include the dataset itself, because it is not under options.\n   * @param {string} datasetType\n   * @return {string[][]}\n   */\n  datasetScopeKeys(datasetType) {\n    return cachedKeys(datasetType,\n      () => [[\n        `datasets.${datasetType}`,\n        ''\n      ]]);\n  }\n\n  /**\n   * Returns the option scope keys for resolving dataset animation options.\n   * These keys do not include the dataset itself, because it is not under options.\n   * @param {string} datasetType\n   * @param {string} transition\n   * @return {string[][]}\n   */\n  datasetAnimationScopeKeys(datasetType, transition) {\n    return cachedKeys(`${datasetType}.transition.${transition}`,\n      () => [\n        [\n          `datasets.${datasetType}.transitions.${transition}`,\n          `transitions.${transition}`,\n        ],\n        // The following are used for looking up the `animations` and `animation` keys\n        [\n          `datasets.${datasetType}`,\n          ''\n        ]\n      ]);\n  }\n\n  /**\n   * Returns the options scope keys for resolving element options that belong\n   * to an dataset. These keys do not include the dataset itself, because it\n   * is not under options.\n   * @param {string} datasetType\n   * @param {string} elementType\n   * @return {string[][]}\n   */\n  datasetElementScopeKeys(datasetType, elementType) {\n    return cachedKeys(`${datasetType}-${elementType}`,\n      () => [[\n        `datasets.${datasetType}.elements.${elementType}`,\n        `datasets.${datasetType}`,\n        `elements.${elementType}`,\n        ''\n      ]]);\n  }\n\n  /**\n   * Returns the options scope keys for resolving plugin options.\n   * @param {{id: string, additionalOptionScopes?: string[]}} plugin\n   * @return {string[][]}\n   */\n  pluginScopeKeys(plugin) {\n    const id = plugin.id;\n    const type = this.type;\n    return cachedKeys(`${type}-plugin-${id}`,\n      () => [[\n        `plugins.${id}`,\n        ...plugin.additionalOptionScopes || [],\n      ]]);\n  }\n\n  /**\n   * @private\n   */\n  _cachedScopes(mainScope, resetCache) {\n    const _scopeCache = this._scopeCache;\n    let cache = _scopeCache.get(mainScope);\n    if (!cache || resetCache) {\n      cache = new Map();\n      _scopeCache.set(mainScope, cache);\n    }\n    return cache;\n  }\n\n  /**\n   * Resolves the objects from options and defaults for option value resolution.\n   * @param {object} mainScope - The main scope object for options\n   * @param {string[][]} keyLists - The arrays of keys in resolution order\n   * @param {boolean} [resetCache] - reset the cache for this mainScope\n   */\n  getOptionScopes(mainScope, keyLists, resetCache) {\n    const {options, type} = this;\n    const cache = this._cachedScopes(mainScope, resetCache);\n    const cached = cache.get(keyLists);\n    if (cached) {\n      return cached;\n    }\n\n    const scopes = new Set();\n\n    keyLists.forEach(keys => {\n      if (mainScope) {\n        scopes.add(mainScope);\n        keys.forEach(key => addIfFound(scopes, mainScope, key));\n      }\n      keys.forEach(key => addIfFound(scopes, options, key));\n      keys.forEach(key => addIfFound(scopes, overrides[type] || {}, key));\n      keys.forEach(key => addIfFound(scopes, defaults, key));\n      keys.forEach(key => addIfFound(scopes, descriptors, key));\n    });\n\n    const array = Array.from(scopes);\n    if (array.length === 0) {\n      array.push(Object.create(null));\n    }\n    if (keysCached.has(keyLists)) {\n      cache.set(keyLists, array);\n    }\n    return array;\n  }\n\n  /**\n   * Returns the option scopes for resolving chart options\n   * @return {object[]}\n   */\n  chartOptionScopes() {\n    const {options, type} = this;\n\n    return [\n      options,\n      overrides[type] || {},\n      defaults.datasets[type] || {}, // https://github.com/chartjs/Chart.js/issues/8531\n      {type},\n      defaults,\n      descriptors\n    ];\n  }\n\n  /**\n   * @param {object[]} scopes\n   * @param {string[]} names\n   * @param {function|object} context\n   * @param {string[]} [prefixes]\n   * @return {object}\n   */\n  resolveNamedOptions(scopes, names, context, prefixes = ['']) {\n    const result = {$shared: true};\n    const {resolver, subPrefixes} = getResolver(this._resolverCache, scopes, prefixes);\n    let options = resolver;\n    if (needContext(resolver, names)) {\n      result.$shared = false;\n      context = isFunction(context) ? context() : context;\n      // subResolver is passed to scriptable options. It should not resolve to hover options.\n      const subResolver = this.createResolver(scopes, context, subPrefixes);\n      options = _attachContext(resolver, context, subResolver);\n    }\n\n    for (const prop of names) {\n      result[prop] = options[prop];\n    }\n    return result;\n  }\n\n  /**\n   * @param {object[]} scopes\n   * @param {object} [context]\n   * @param {string[]} [prefixes]\n   * @param {{scriptable: boolean, indexable: boolean, allKeys?: boolean}} [descriptorDefaults]\n   */\n  createResolver(scopes, context, prefixes = [''], descriptorDefaults) {\n    const {resolver} = getResolver(this._resolverCache, scopes, prefixes);\n    return isObject(context)\n      ? _attachContext(resolver, context, undefined, descriptorDefaults)\n      : resolver;\n  }\n}\n\nfunction getResolver(resolverCache, scopes, prefixes) {\n  let cache = resolverCache.get(scopes);\n  if (!cache) {\n    cache = new Map();\n    resolverCache.set(scopes, cache);\n  }\n  const cacheKey = prefixes.join();\n  let cached = cache.get(cacheKey);\n  if (!cached) {\n    const resolver = _createResolver(scopes, prefixes);\n    cached = {\n      resolver,\n      subPrefixes: prefixes.filter(p => !p.toLowerCase().includes('hover'))\n    };\n    cache.set(cacheKey, cached);\n  }\n  return cached;\n}\n\nconst hasFunction = value => isObject(value)\n  && Object.getOwnPropertyNames(value).some((key) => isFunction(value[key]));\n\nfunction needContext(proxy, names) {\n  const {isScriptable, isIndexable} = _descriptors(proxy);\n\n  for (const prop of names) {\n    const scriptable = isScriptable(prop);\n    const indexable = isIndexable(prop);\n    const value = (indexable || scriptable) && proxy[prop];\n    if ((scriptable && (isFunction(value) || hasFunction(value)))\n      || (indexable && isArray(value))) {\n      return true;\n    }\n  }\n  return false;\n}\n","import animator from './core.animator.js';\nimport defaults, {overrides} from './core.defaults.js';\nimport Interaction from './core.interaction.js';\nimport layouts from './core.layouts.js';\nimport {_detectPlatform} from '../platform/index.js';\nimport PluginService from './core.plugins.js';\nimport registry from './core.registry.js';\nimport Config, {determineAxis, getIndexAxis} from './core.config.js';\nimport {retinaScale, _isDomSupported} from '../helpers/helpers.dom.js';\nimport {each, callback as callCallback, uid, valueOrDefault, _elementsEqual, isNullOrUndef, setsEqual, defined, isFunction, _isClickEvent} from '../helpers/helpers.core.js';\nimport {clearCanvas, clipArea, createContext, unclipArea, _isPointInArea} from '../helpers/index.js';\n// @ts-ignore\nimport {version} from '../../package.json';\nimport {debounce} from '../helpers/helpers.extras.js';\n\n/**\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n * @typedef { import('../types/index.js').Point } Point\n */\n\nconst KNOWN_POSITIONS = ['top', 'bottom', 'left', 'right', 'chartArea'];\nfunction positionIsHorizontal(position, axis) {\n  return position === 'top' || position === 'bottom' || (KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x');\n}\n\nfunction compare2Level(l1, l2) {\n  return function(a, b) {\n    return a[l1] === b[l1]\n      ? a[l2] - b[l2]\n      : a[l1] - b[l1];\n  };\n}\n\nfunction onAnimationsComplete(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n\n  chart.notifyPlugins('afterRender');\n  callCallback(animationOptions && animationOptions.onComplete, [context], chart);\n}\n\nfunction onAnimationProgress(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n  callCallback(animationOptions && animationOptions.onProgress, [context], chart);\n}\n\n/**\n * Chart.js can take a string id of a canvas element, a 2d context, or a canvas element itself.\n * Attempt to unwrap the item passed into the chart constructor so that it is a canvas element (if possible).\n */\nfunction getCanvas(item) {\n  if (_isDomSupported() && typeof item === 'string') {\n    item = document.getElementById(item);\n  } else if (item && item.length) {\n    // Support for array based queries (such as jQuery)\n    item = item[0];\n  }\n\n  if (item && item.canvas) {\n    // Support for any object associated to a canvas (including a context2d)\n    item = item.canvas;\n  }\n  return item;\n}\n\nconst instances = {};\nconst getChart = (key) => {\n  const canvas = getCanvas(key);\n  return Object.values(instances).filter((c) => c.canvas === canvas).pop();\n};\n\nfunction moveNumericKeys(obj, start, move) {\n  const keys = Object.keys(obj);\n  for (const key of keys) {\n    const intKey = +key;\n    if (intKey >= start) {\n      const value = obj[key];\n      delete obj[key];\n      if (move > 0 || intKey > start) {\n        obj[intKey + move] = value;\n      }\n    }\n  }\n}\n\n/**\n * @param {ChartEvent} e\n * @param {ChartEvent|null} lastEvent\n * @param {boolean} inChartArea\n * @param {boolean} isClick\n * @returns {ChartEvent|null}\n */\nfunction determineLastEvent(e, lastEvent, inChartArea, isClick) {\n  if (!inChartArea || e.type === 'mouseout') {\n    return null;\n  }\n  if (isClick) {\n    return lastEvent;\n  }\n  return e;\n}\n\nfunction getSizeForArea(scale, chartArea, field) {\n  return scale.options.clip ? scale[field] : chartArea[field];\n}\n\nfunction getDatasetArea(meta, chartArea) {\n  const {xScale, yScale} = meta;\n  if (xScale && yScale) {\n    return {\n      left: getSizeForArea(xScale, chartArea, 'left'),\n      right: getSizeForArea(xScale, chartArea, 'right'),\n      top: getSizeForArea(yScale, chartArea, 'top'),\n      bottom: getSizeForArea(yScale, chartArea, 'bottom')\n    };\n  }\n  return chartArea;\n}\n\nclass Chart {\n\n  static defaults = defaults;\n  static instances = instances;\n  static overrides = overrides;\n  static registry = registry;\n  static version = version;\n  static getChart = getChart;\n\n  static register(...items) {\n    registry.add(...items);\n    invalidatePlugins();\n  }\n\n  static unregister(...items) {\n    registry.remove(...items);\n    invalidatePlugins();\n  }\n\n  // eslint-disable-next-line max-statements\n  constructor(item, userConfig) {\n    const config = this.config = new Config(userConfig);\n    const initialCanvas = getCanvas(item);\n    const existingChart = getChart(initialCanvas);\n    if (existingChart) {\n      throw new Error(\n        'Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' +\n\t\t\t\t' must be destroyed before the canvas with ID \\'' + existingChart.canvas.id + '\\' can be reused.'\n      );\n    }\n\n    const options = config.createResolver(config.chartOptionScopes(), this.getContext());\n\n    this.platform = new (config.platform || _detectPlatform(initialCanvas))();\n    this.platform.updateConfig(config);\n\n    const context = this.platform.acquireContext(initialCanvas, options.aspectRatio);\n    const canvas = context && context.canvas;\n    const height = canvas && canvas.height;\n    const width = canvas && canvas.width;\n\n    this.id = uid();\n    this.ctx = context;\n    this.canvas = canvas;\n    this.width = width;\n    this.height = height;\n    this._options = options;\n    // Store the previously used aspect ratio to determine if a resize\n    // is needed during updates. Do this after _options is set since\n    // aspectRatio uses a getter\n    this._aspectRatio = this.aspectRatio;\n    this._layers = [];\n    this._metasets = [];\n    this._stacks = undefined;\n    this.boxes = [];\n    this.currentDevicePixelRatio = undefined;\n    this.chartArea = undefined;\n    this._active = [];\n    this._lastEvent = undefined;\n    this._listeners = {};\n    /** @type {?{attach?: function, detach?: function, resize?: function}} */\n    this._responsiveListeners = undefined;\n    this._sortedMetasets = [];\n    this.scales = {};\n    this._plugins = new PluginService();\n    this.$proxies = {};\n    this._hiddenIndices = {};\n    this.attached = false;\n    this._animationsDisabled = undefined;\n    this.$context = undefined;\n    this._doResize = debounce(mode => this.update(mode), options.resizeDelay || 0);\n    this._dataChanges = [];\n\n    // Add the chart instance to the global namespace\n    instances[this.id] = this;\n\n    if (!context || !canvas) {\n      // The given item is not a compatible context2d element, let's return before finalizing\n      // the chart initialization but after setting basic chart / controller properties that\n      // can help to figure out that the chart is not valid (e.g chart.canvas !== null);\n      // https://github.com/chartjs/Chart.js/issues/2807\n      console.error(\"Failed to create chart: can't acquire context from the given item\");\n      return;\n    }\n\n    animator.listen(this, 'complete', onAnimationsComplete);\n    animator.listen(this, 'progress', onAnimationProgress);\n\n    this._initialize();\n    if (this.attached) {\n      this.update();\n    }\n  }\n\n  get aspectRatio() {\n    const {options: {aspectRatio, maintainAspectRatio}, width, height, _aspectRatio} = this;\n    if (!isNullOrUndef(aspectRatio)) {\n      // If aspectRatio is defined in options, use that.\n      return aspectRatio;\n    }\n\n    if (maintainAspectRatio && _aspectRatio) {\n      // If maintainAspectRatio is truthly and we had previously determined _aspectRatio, use that\n      return _aspectRatio;\n    }\n\n    // Calculate\n    return height ? width / height : null;\n  }\n\n  get data() {\n    return this.config.data;\n  }\n\n  set data(data) {\n    this.config.data = data;\n  }\n\n  get options() {\n    return this._options;\n  }\n\n  set options(options) {\n    this.config.options = options;\n  }\n\n  get registry() {\n    return registry;\n  }\n\n  /**\n\t * @private\n\t */\n  _initialize() {\n    // Before init plugin notification\n    this.notifyPlugins('beforeInit');\n\n    if (this.options.responsive) {\n      this.resize();\n    } else {\n      retinaScale(this, this.options.devicePixelRatio);\n    }\n\n    this.bindEvents();\n\n    // After init plugin notification\n    this.notifyPlugins('afterInit');\n\n    return this;\n  }\n\n  clear() {\n    clearCanvas(this.canvas, this.ctx);\n    return this;\n  }\n\n  stop() {\n    animator.stop(this);\n    return this;\n  }\n\n  /**\n\t * Resize the chart to its container or to explicit dimensions.\n\t * @param {number} [width]\n\t * @param {number} [height]\n\t */\n  resize(width, height) {\n    if (!animator.running(this)) {\n      this._resize(width, height);\n    } else {\n      this._resizeBeforeDraw = {width, height};\n    }\n  }\n\n  _resize(width, height) {\n    const options = this.options;\n    const canvas = this.canvas;\n    const aspectRatio = options.maintainAspectRatio && this.aspectRatio;\n    const newSize = this.platform.getMaximumSize(canvas, width, height, aspectRatio);\n    const newRatio = options.devicePixelRatio || this.platform.getDevicePixelRatio();\n    const mode = this.width ? 'resize' : 'attach';\n\n    this.width = newSize.width;\n    this.height = newSize.height;\n    this._aspectRatio = this.aspectRatio;\n    if (!retinaScale(this, newRatio, true)) {\n      return;\n    }\n\n    this.notifyPlugins('resize', {size: newSize});\n\n    callCallback(options.onResize, [this, newSize], this);\n\n    if (this.attached) {\n      if (this._doResize(mode)) {\n        // The resize update is delayed, only draw without updating.\n        this.render();\n      }\n    }\n  }\n\n  ensureScalesHaveIDs() {\n    const options = this.options;\n    const scalesOptions = options.scales || {};\n\n    each(scalesOptions, (axisOptions, axisID) => {\n      axisOptions.id = axisID;\n    });\n  }\n\n  /**\n\t * Builds a map of scale ID to scale object for future lookup.\n\t */\n  buildOrUpdateScales() {\n    const options = this.options;\n    const scaleOpts = options.scales;\n    const scales = this.scales;\n    const updated = Object.keys(scales).reduce((obj, id) => {\n      obj[id] = false;\n      return obj;\n    }, {});\n    let items = [];\n\n    if (scaleOpts) {\n      items = items.concat(\n        Object.keys(scaleOpts).map((id) => {\n          const scaleOptions = scaleOpts[id];\n          const axis = determineAxis(id, scaleOptions);\n          const isRadial = axis === 'r';\n          const isHorizontal = axis === 'x';\n          return {\n            options: scaleOptions,\n            dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n            dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n          };\n        })\n      );\n    }\n\n    each(items, (item) => {\n      const scaleOptions = item.options;\n      const id = scaleOptions.id;\n      const axis = determineAxis(id, scaleOptions);\n      const scaleType = valueOrDefault(scaleOptions.type, item.dtype);\n\n      if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n        scaleOptions.position = item.dposition;\n      }\n\n      updated[id] = true;\n      let scale = null;\n      if (id in scales && scales[id].type === scaleType) {\n        scale = scales[id];\n      } else {\n        const scaleClass = registry.getScale(scaleType);\n        scale = new scaleClass({\n          id,\n          type: scaleType,\n          ctx: this.ctx,\n          chart: this\n        });\n        scales[scale.id] = scale;\n      }\n\n      scale.init(scaleOptions, options);\n    });\n    // clear up discarded scales\n    each(updated, (hasUpdated, id) => {\n      if (!hasUpdated) {\n        delete scales[id];\n      }\n    });\n\n    each(scales, (scale) => {\n      layouts.configure(this, scale, scale.options);\n      layouts.addBox(this, scale);\n    });\n  }\n\n  /**\n\t * @private\n\t */\n  _updateMetasets() {\n    const metasets = this._metasets;\n    const numData = this.data.datasets.length;\n    const numMeta = metasets.length;\n\n    metasets.sort((a, b) => a.index - b.index);\n    if (numMeta > numData) {\n      for (let i = numData; i < numMeta; ++i) {\n        this._destroyDatasetMeta(i);\n      }\n      metasets.splice(numData, numMeta - numData);\n    }\n    this._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n  }\n\n  /**\n\t * @private\n\t */\n  _removeUnreferencedMetasets() {\n    const {_metasets: metasets, data: {datasets}} = this;\n    if (metasets.length > datasets.length) {\n      delete this._stacks;\n    }\n    metasets.forEach((meta, index) => {\n      if (datasets.filter(x => x === meta._dataset).length === 0) {\n        this._destroyDatasetMeta(index);\n      }\n    });\n  }\n\n  buildOrUpdateControllers() {\n    const newControllers = [];\n    const datasets = this.data.datasets;\n    let i, ilen;\n\n    this._removeUnreferencedMetasets();\n\n    for (i = 0, ilen = datasets.length; i < ilen; i++) {\n      const dataset = datasets[i];\n      let meta = this.getDatasetMeta(i);\n      const type = dataset.type || this.config.type;\n\n      if (meta.type && meta.type !== type) {\n        this._destroyDatasetMeta(i);\n        meta = this.getDatasetMeta(i);\n      }\n      meta.type = type;\n      meta.indexAxis = dataset.indexAxis || getIndexAxis(type, this.options);\n      meta.order = dataset.order || 0;\n      meta.index = i;\n      meta.label = '' + dataset.label;\n      meta.visible = this.isDatasetVisible(i);\n\n      if (meta.controller) {\n        meta.controller.updateIndex(i);\n        meta.controller.linkScales();\n      } else {\n        const ControllerClass = registry.getController(type);\n        const {datasetElementType, dataElementType} = defaults.datasets[type];\n        Object.assign(ControllerClass, {\n          dataElementType: registry.getElement(dataElementType),\n          datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n        });\n        meta.controller = new ControllerClass(this, i);\n        newControllers.push(meta.controller);\n      }\n    }\n\n    this._updateMetasets();\n    return newControllers;\n  }\n\n  /**\n\t * Reset the elements of all datasets\n\t * @private\n\t */\n  _resetElements() {\n    each(this.data.datasets, (dataset, datasetIndex) => {\n      this.getDatasetMeta(datasetIndex).controller.reset();\n    }, this);\n  }\n\n  /**\n\t* Resets the chart back to its state before the initial animation\n\t*/\n  reset() {\n    this._resetElements();\n    this.notifyPlugins('reset');\n  }\n\n  update(mode) {\n    const config = this.config;\n\n    config.update();\n    const options = this._options = config.createResolver(config.chartOptionScopes(), this.getContext());\n    const animsDisabled = this._animationsDisabled = !options.animation;\n\n    this._updateScales();\n    this._checkEventBindings();\n    this._updateHiddenIndices();\n\n    // plugins options references might have change, let's invalidate the cache\n    // https://github.com/chartjs/Chart.js/issues/5111#issuecomment-355934167\n    this._plugins.invalidate();\n\n    if (this.notifyPlugins('beforeUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n\n    // Make sure dataset controllers are updated and new controllers are reset\n    const newControllers = this.buildOrUpdateControllers();\n\n    this.notifyPlugins('beforeElementsUpdate');\n\n    // Make sure all dataset controllers have correct meta data counts\n    let minPadding = 0;\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; i++) {\n      const {controller} = this.getDatasetMeta(i);\n      const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n      // New controllers will be reset after the layout pass, so we only want to modify\n      // elements added to new datasets\n      controller.buildOrUpdateElements(reset);\n      minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n    }\n    minPadding = this._minPadding = options.layout.autoPadding ? minPadding : 0;\n    this._updateLayout(minPadding);\n\n    // Only reset the controllers if we have animations\n    if (!animsDisabled) {\n      // Can only reset the new controllers after the scales have been updated\n      // Reset is done to get the starting point for the initial animation\n      each(newControllers, (controller) => {\n        controller.reset();\n      });\n    }\n\n    this._updateDatasets(mode);\n\n    // Do this before render so that any plugins that need final scale updates can use it\n    this.notifyPlugins('afterUpdate', {mode});\n\n    this._layers.sort(compare2Level('z', '_idx'));\n\n    // Replay last event from before update, or set hover styles on active elements\n    const {_active, _lastEvent} = this;\n    if (_lastEvent) {\n      this._eventHandler(_lastEvent, true);\n    } else if (_active.length) {\n      this._updateHoverStyles(_active, _active, true);\n    }\n\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  _updateScales() {\n    each(this.scales, (scale) => {\n      layouts.removeBox(this, scale);\n    });\n\n    this.ensureScalesHaveIDs();\n    this.buildOrUpdateScales();\n  }\n\n  /**\n   * @private\n   */\n  _checkEventBindings() {\n    const options = this.options;\n    const existingEvents = new Set(Object.keys(this._listeners));\n    const newEvents = new Set(options.events);\n\n    if (!setsEqual(existingEvents, newEvents) || !!this._responsiveListeners !== options.responsive) {\n      // The configured events have changed. Rebind.\n      this.unbindEvents();\n      this.bindEvents();\n    }\n  }\n\n  /**\n   * @private\n   */\n  _updateHiddenIndices() {\n    const {_hiddenIndices} = this;\n    const changes = this._getUniformDataChanges() || [];\n    for (const {method, start, count} of changes) {\n      const move = method === '_removeElements' ? -count : count;\n      moveNumericKeys(_hiddenIndices, start, move);\n    }\n  }\n\n  /**\n   * @private\n   */\n  _getUniformDataChanges() {\n    const _dataChanges = this._dataChanges;\n    if (!_dataChanges || !_dataChanges.length) {\n      return;\n    }\n\n    this._dataChanges = [];\n    const datasetCount = this.data.datasets.length;\n    const makeSet = (idx) => new Set(\n      _dataChanges\n        .filter(c => c[0] === idx)\n        .map((c, i) => i + ',' + c.splice(1).join(','))\n    );\n\n    const changeSet = makeSet(0);\n    for (let i = 1; i < datasetCount; i++) {\n      if (!setsEqual(changeSet, makeSet(i))) {\n        return;\n      }\n    }\n    return Array.from(changeSet)\n      .map(c => c.split(','))\n      .map(a => ({method: a[1], start: +a[2], count: +a[3]}));\n  }\n\n  /**\n\t * Updates the chart layout unless a plugin returns `false` to the `beforeLayout`\n\t * hook, in which case, plugins will not be called on `afterLayout`.\n\t * @private\n\t */\n  _updateLayout(minPadding) {\n    if (this.notifyPlugins('beforeLayout', {cancelable: true}) === false) {\n      return;\n    }\n\n    layouts.update(this, this.width, this.height, minPadding);\n\n    const area = this.chartArea;\n    const noArea = area.width <= 0 || area.height <= 0;\n\n    this._layers = [];\n    each(this.boxes, (box) => {\n      if (noArea && box.position === 'chartArea') {\n        // Skip drawing and configuring chartArea boxes when chartArea is zero or negative\n        return;\n      }\n\n      // configure is called twice, once in core.scale.update and once here.\n      // Here the boxes are fully updated and at their final positions.\n      if (box.configure) {\n        box.configure();\n      }\n      this._layers.push(...box._layers());\n    }, this);\n\n    this._layers.forEach((item, index) => {\n      item._idx = index;\n    });\n\n    this.notifyPlugins('afterLayout');\n  }\n\n  /**\n\t * Updates all datasets unless a plugin returns `false` to the `beforeDatasetsUpdate`\n\t * hook, in which case, plugins will not be called on `afterDatasetsUpdate`.\n\t * @private\n\t */\n  _updateDatasets(mode) {\n    if (this.notifyPlugins('beforeDatasetsUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this.getDatasetMeta(i).controller.configure();\n    }\n\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this._updateDataset(i, isFunction(mode) ? mode({datasetIndex: i}) : mode);\n    }\n\n    this.notifyPlugins('afterDatasetsUpdate', {mode});\n  }\n\n  /**\n\t * Updates dataset at index unless a plugin returns `false` to the `beforeDatasetUpdate`\n\t * hook, in which case, plugins will not be called on `afterDatasetUpdate`.\n\t * @private\n\t */\n  _updateDataset(index, mode) {\n    const meta = this.getDatasetMeta(index);\n    const args = {meta, index, mode, cancelable: true};\n\n    if (this.notifyPlugins('beforeDatasetUpdate', args) === false) {\n      return;\n    }\n\n    meta.controller._update(mode);\n\n    args.cancelable = false;\n    this.notifyPlugins('afterDatasetUpdate', args);\n  }\n\n  render() {\n    if (this.notifyPlugins('beforeRender', {cancelable: true}) === false) {\n      return;\n    }\n\n    if (animator.has(this)) {\n      if (this.attached && !animator.running(this)) {\n        animator.start(this);\n      }\n    } else {\n      this.draw();\n      onAnimationsComplete({chart: this});\n    }\n  }\n\n  draw() {\n    let i;\n    if (this._resizeBeforeDraw) {\n      const {width, height} = this._resizeBeforeDraw;\n      // Unset pending resize request now to avoid possible recursion within _resize\n      this._resizeBeforeDraw = null;\n      this._resize(width, height);\n    }\n    this.clear();\n\n    if (this.width <= 0 || this.height <= 0) {\n      return;\n    }\n\n    if (this.notifyPlugins('beforeDraw', {cancelable: true}) === false) {\n      return;\n    }\n\n    // Because of plugin hooks (before/afterDatasetsDraw), datasets can't\n    // currently be part of layers. Instead, we draw\n    // layers <= 0 before(default, backward compat), and the rest after\n    const layers = this._layers;\n    for (i = 0; i < layers.length && layers[i].z <= 0; ++i) {\n      layers[i].draw(this.chartArea);\n    }\n\n    this._drawDatasets();\n\n    // Rest of layers\n    for (; i < layers.length; ++i) {\n      layers[i].draw(this.chartArea);\n    }\n\n    this.notifyPlugins('afterDraw');\n  }\n\n  /**\n\t * @private\n\t */\n  _getSortedDatasetMetas(filterVisible) {\n    const metasets = this._sortedMetasets;\n    const result = [];\n    let i, ilen;\n\n    for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n      const meta = metasets[i];\n      if (!filterVisible || meta.visible) {\n        result.push(meta);\n      }\n    }\n\n    return result;\n  }\n\n  /**\n\t * Gets the visible dataset metas in drawing order\n\t * @return {object[]}\n\t */\n  getSortedVisibleDatasetMetas() {\n    return this._getSortedDatasetMetas(true);\n  }\n\n  /**\n\t * Draws all datasets unless a plugin returns `false` to the `beforeDatasetsDraw`\n\t * hook, in which case, plugins will not be called on `afterDatasetsDraw`.\n\t * @private\n\t */\n  _drawDatasets() {\n    if (this.notifyPlugins('beforeDatasetsDraw', {cancelable: true}) === false) {\n      return;\n    }\n\n    const metasets = this.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      this._drawDataset(metasets[i]);\n    }\n\n    this.notifyPlugins('afterDatasetsDraw');\n  }\n\n  /**\n\t * Draws dataset at index unless a plugin returns `false` to the `beforeDatasetDraw`\n\t * hook, in which case, plugins will not be called on `afterDatasetDraw`.\n\t * @private\n\t */\n  _drawDataset(meta) {\n    const ctx = this.ctx;\n    const clip = meta._clip;\n    const useClip = !clip.disabled;\n    const area = getDatasetArea(meta, this.chartArea);\n    const args = {\n      meta,\n      index: meta.index,\n      cancelable: true\n    };\n\n    if (this.notifyPlugins('beforeDatasetDraw', args) === false) {\n      return;\n    }\n\n    if (useClip) {\n      clipArea(ctx, {\n        left: clip.left === false ? 0 : area.left - clip.left,\n        right: clip.right === false ? this.width : area.right + clip.right,\n        top: clip.top === false ? 0 : area.top - clip.top,\n        bottom: clip.bottom === false ? this.height : area.bottom + clip.bottom\n      });\n    }\n\n    meta.controller.draw();\n\n    if (useClip) {\n      unclipArea(ctx);\n    }\n\n    args.cancelable = false;\n    this.notifyPlugins('afterDatasetDraw', args);\n  }\n\n  /**\n   * Checks whether the given point is in the chart area.\n   * @param {Point} point - in relative coordinates (see, e.g., getRelativePosition)\n   * @returns {boolean}\n   */\n  isPointInArea(point) {\n    return _isPointInArea(point, this.chartArea, this._minPadding);\n  }\n\n  getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n    const method = Interaction.modes[mode];\n    if (typeof method === 'function') {\n      return method(this, e, options, useFinalPosition);\n    }\n\n    return [];\n  }\n\n  getDatasetMeta(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    const metasets = this._metasets;\n    let meta = metasets.filter(x => x && x._dataset === dataset).pop();\n\n    if (!meta) {\n      meta = {\n        type: null,\n        data: [],\n        dataset: null,\n        controller: null,\n        hidden: null,\t\t\t// See isDatasetVisible() comment\n        xAxisID: null,\n        yAxisID: null,\n        order: dataset && dataset.order || 0,\n        index: datasetIndex,\n        _dataset: dataset,\n        _parsed: [],\n        _sorted: false\n      };\n      metasets.push(meta);\n    }\n\n    return meta;\n  }\n\n  getContext() {\n    return this.$context || (this.$context = createContext(null, {chart: this, type: 'chart'}));\n  }\n\n  getVisibleDatasetCount() {\n    return this.getSortedVisibleDatasetMetas().length;\n  }\n\n  isDatasetVisible(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    if (!dataset) {\n      return false;\n    }\n\n    const meta = this.getDatasetMeta(datasetIndex);\n\n    // meta.hidden is a per chart dataset hidden flag override with 3 states: if true or false,\n    // the dataset.hidden value is ignored, else if null, the dataset hidden state is returned.\n    return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n  }\n\n  setDatasetVisibility(datasetIndex, visible) {\n    const meta = this.getDatasetMeta(datasetIndex);\n    meta.hidden = !visible;\n  }\n\n  toggleDataVisibility(index) {\n    this._hiddenIndices[index] = !this._hiddenIndices[index];\n  }\n\n  getDataVisibility(index) {\n    return !this._hiddenIndices[index];\n  }\n\n  /**\n\t * @private\n\t */\n  _updateVisibility(datasetIndex, dataIndex, visible) {\n    const mode = visible ? 'show' : 'hide';\n    const meta = this.getDatasetMeta(datasetIndex);\n    const anims = meta.controller._resolveAnimations(undefined, mode);\n\n    if (defined(dataIndex)) {\n      meta.data[dataIndex].hidden = !visible;\n      this.update();\n    } else {\n      this.setDatasetVisibility(datasetIndex, visible);\n      // Animate visible state, so hide animation can be seen. This could be handled better if update / updateDataset returned a Promise.\n      anims.update(meta, {visible});\n      this.update((ctx) => ctx.datasetIndex === datasetIndex ? mode : undefined);\n    }\n  }\n\n  hide(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, false);\n  }\n\n  show(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, true);\n  }\n\n  /**\n\t * @private\n\t */\n  _destroyDatasetMeta(datasetIndex) {\n    const meta = this._metasets[datasetIndex];\n    if (meta && meta.controller) {\n      meta.controller._destroy();\n    }\n    delete this._metasets[datasetIndex];\n  }\n\n  _stop() {\n    let i, ilen;\n    this.stop();\n    animator.remove(this);\n\n    for (i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this._destroyDatasetMeta(i);\n    }\n  }\n\n  destroy() {\n    this.notifyPlugins('beforeDestroy');\n    const {canvas, ctx} = this;\n\n    this._stop();\n    this.config.clearCache();\n\n    if (canvas) {\n      this.unbindEvents();\n      clearCanvas(canvas, ctx);\n      this.platform.releaseContext(ctx);\n      this.canvas = null;\n      this.ctx = null;\n    }\n\n    delete instances[this.id];\n\n    this.notifyPlugins('afterDestroy');\n  }\n\n  toBase64Image(...args) {\n    return this.canvas.toDataURL(...args);\n  }\n\n  /**\n\t * @private\n\t */\n  bindEvents() {\n    this.bindUserEvents();\n    if (this.options.responsive) {\n      this.bindResponsiveEvents();\n    } else {\n      this.attached = true;\n    }\n  }\n\n  /**\n   * @private\n   */\n  bindUserEvents() {\n    const listeners = this._listeners;\n    const platform = this.platform;\n\n    const _add = (type, listener) => {\n      platform.addEventListener(this, type, listener);\n      listeners[type] = listener;\n    };\n\n    const listener = (e, x, y) => {\n      e.offsetX = x;\n      e.offsetY = y;\n      this._eventHandler(e);\n    };\n\n    each(this.options.events, (type) => _add(type, listener));\n  }\n\n  /**\n   * @private\n   */\n  bindResponsiveEvents() {\n    if (!this._responsiveListeners) {\n      this._responsiveListeners = {};\n    }\n    const listeners = this._responsiveListeners;\n    const platform = this.platform;\n\n    const _add = (type, listener) => {\n      platform.addEventListener(this, type, listener);\n      listeners[type] = listener;\n    };\n    const _remove = (type, listener) => {\n      if (listeners[type]) {\n        platform.removeEventListener(this, type, listener);\n        delete listeners[type];\n      }\n    };\n\n    const listener = (width, height) => {\n      if (this.canvas) {\n        this.resize(width, height);\n      }\n    };\n\n    let detached; // eslint-disable-line prefer-const\n    const attached = () => {\n      _remove('attach', attached);\n\n      this.attached = true;\n      this.resize();\n\n      _add('resize', listener);\n      _add('detach', detached);\n    };\n\n    detached = () => {\n      this.attached = false;\n\n      _remove('resize', listener);\n\n      // Stop animating and remove metasets, so when re-attached, the animations start from beginning.\n      this._stop();\n      this._resize(0, 0);\n\n      _add('attach', attached);\n    };\n\n    if (platform.isAttached(this.canvas)) {\n      attached();\n    } else {\n      detached();\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  unbindEvents() {\n    each(this._listeners, (listener, type) => {\n      this.platform.removeEventListener(this, type, listener);\n    });\n    this._listeners = {};\n\n    each(this._responsiveListeners, (listener, type) => {\n      this.platform.removeEventListener(this, type, listener);\n    });\n    this._responsiveListeners = undefined;\n  }\n\n  updateHoverStyle(items, mode, enabled) {\n    const prefix = enabled ? 'set' : 'remove';\n    let meta, item, i, ilen;\n\n    if (mode === 'dataset') {\n      meta = this.getDatasetMeta(items[0].datasetIndex);\n      meta.controller['_' + prefix + 'DatasetHoverStyle']();\n    }\n\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      item = items[i];\n      const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n      if (controller) {\n        controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n      }\n    }\n  }\n\n  /**\n\t * Get active (hovered) elements\n\t * @returns array\n\t */\n  getActiveElements() {\n    return this._active || [];\n  }\n\n  /**\n\t * Set active (hovered) elements\n\t * @param {array} activeElements New active data points\n\t */\n  setActiveElements(activeElements) {\n    const lastActive = this._active || [];\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = this.getDatasetMeta(datasetIndex);\n      if (!meta) {\n        throw new Error('No dataset found at index ' + datasetIndex);\n      }\n\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(active, lastActive);\n\n    if (changed) {\n      this._active = active;\n      // Make sure we don't use the previous mouse event to override the active elements in update.\n      this._lastEvent = null;\n      this._updateHoverStyles(active, lastActive);\n    }\n  }\n\n  /**\n\t * Calls enabled plugins on the specified hook and with the given args.\n\t * This method immediately returns as soon as a plugin explicitly returns false. The\n\t * returned value can be used, for instance, to interrupt the current action.\n\t * @param {string} hook - The name of the plugin method to call (e.g. 'beforeUpdate').\n\t * @param {Object} [args] - Extra arguments to apply to the hook call.\n   * @param {import('./core.plugins.js').filterCallback} [filter] - Filtering function for limiting which plugins are notified\n\t * @returns {boolean} false if any of the plugins return false, else returns true.\n\t */\n  notifyPlugins(hook, args, filter) {\n    return this._plugins.notify(this, hook, args, filter);\n  }\n\n  /**\n   * Check if a plugin with the specific ID is registered and enabled\n   * @param {string} pluginId - The ID of the plugin of which to check if it is enabled\n   * @returns {boolean}\n   */\n  isPluginEnabled(pluginId) {\n    return this._plugins._cache.filter(p => p.plugin.id === pluginId).length === 1;\n  }\n\n  /**\n\t * @private\n\t */\n  _updateHoverStyles(active, lastActive, replay) {\n    const hoverOptions = this.options.hover;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.datasetIndex === y.datasetIndex && x.index === y.index));\n    const deactivated = diff(lastActive, active);\n    const activated = replay ? active : diff(active, lastActive);\n\n    if (deactivated.length) {\n      this.updateHoverStyle(deactivated, hoverOptions.mode, false);\n    }\n\n    if (activated.length && hoverOptions.mode) {\n      this.updateHoverStyle(activated, hoverOptions.mode, true);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _eventHandler(e, replay) {\n    const args = {\n      event: e,\n      replay,\n      cancelable: true,\n      inChartArea: this.isPointInArea(e)\n    };\n    const eventFilter = (plugin) => (plugin.options.events || this.options.events).includes(e.native.type);\n\n    if (this.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n      return;\n    }\n\n    const changed = this._handleEvent(e, replay, args.inChartArea);\n\n    args.cancelable = false;\n    this.notifyPlugins('afterEvent', args, eventFilter);\n\n    if (changed || args.changed) {\n      this.render();\n    }\n\n    return this;\n  }\n\n  /**\n\t * Handle an event\n\t * @param {ChartEvent} e the event to handle\n\t * @param {boolean} [replay] - true if the event was replayed by `update`\n   * @param {boolean} [inChartArea] - true if the event is inside chartArea\n\t * @return {boolean} true if the chart needs to re-render\n\t * @private\n\t */\n  _handleEvent(e, replay, inChartArea) {\n    const {_active: lastActive = [], options} = this;\n\n    // If the event is replayed from `update`, we should evaluate with the final positions.\n    //\n    // The `replay`:\n    // It's the last event (excluding click) that has occurred before `update`.\n    // So mouse has not moved. It's also over the chart, because there is a `replay`.\n    //\n    // The why:\n    // If animations are active, the elements haven't moved yet compared to state before update.\n    // But if they will, we are activating the elements that would be active, if this check\n    // was done after the animations have completed. => \"final positions\".\n    // If there is no animations, the \"final\" and \"current\" positions are equal.\n    // This is done so we do not have to evaluate the active elements each animation frame\n    // - it would be expensive.\n    const useFinalPosition = replay;\n    const active = this._getActiveElements(e, lastActive, inChartArea, useFinalPosition);\n    const isClick = _isClickEvent(e);\n    const lastEvent = determineLastEvent(e, this._lastEvent, inChartArea, isClick);\n\n    if (inChartArea) {\n      // Set _lastEvent to null while we are processing the event handlers.\n      // This prevents recursion if the handler calls chart.update()\n      this._lastEvent = null;\n\n      // Invoke onHover hook\n      callCallback(options.onHover, [e, active, this], this);\n\n      if (isClick) {\n        callCallback(options.onClick, [e, active, this], this);\n      }\n    }\n\n    const changed = !_elementsEqual(active, lastActive);\n    if (changed || replay) {\n      this._active = active;\n      this._updateHoverStyles(active, lastActive, replay);\n    }\n\n    this._lastEvent = lastEvent;\n\n    return changed;\n  }\n\n  /**\n   * @param {ChartEvent} e - The event\n   * @param {import('../types/index.js').ActiveElement[]} lastActive - Previously active elements\n   * @param {boolean} inChartArea - Is the event inside chartArea\n   * @param {boolean} useFinalPosition - Should the evaluation be done with current or final (after animation) element positions\n   * @returns {import('../types/index.js').ActiveElement[]} - The active elements\n   * @pravate\n   */\n  _getActiveElements(e, lastActive, inChartArea, useFinalPosition) {\n    if (e.type === 'mouseout') {\n      return [];\n    }\n\n    if (!inChartArea) {\n      // Let user control the active elements outside chartArea. Eg. using Legend.\n      return lastActive;\n    }\n\n    const hoverOptions = this.options.hover;\n    return this.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n  }\n}\n\n// @ts-ignore\nfunction invalidatePlugins() {\n  return each(Chart.instances, (chart) => chart._plugins.invalidate());\n}\n\nexport default Chart;\n","import {_isDomSupported} from '../helpers/index.js';\nimport BasePlatform from './platform.base.js';\nimport BasicPlatform from './platform.basic.js';\nimport DomPlatform from './platform.dom.js';\n\nexport function _detectPlatform(canvas) {\n  if (!_isDomSupported() || (typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas)) {\n    return BasicPlatform;\n  }\n  return DomPlatform;\n}\n\nexport {BasePlatform, BasicPlatform, DomPlatform};\n","import Element from '../core/core.element.js';\nimport {_bezierInterpolation, _pointInLine, _steppedInterpolation} from '../helpers/helpers.interpolation.js';\nimport {_computeSegments, _boundSegments} from '../helpers/helpers.segment.js';\nimport {_steppedLineTo, _bezierCurveTo} from '../helpers/helpers.canvas.js';\nimport {_updateBezierControlPoints} from '../helpers/helpers.curve.js';\nimport {valueOrDefault} from '../helpers/index.js';\n\n/**\n * @typedef { import('./element.point.js').default } PointElement\n */\n\nfunction setStyle(ctx, options, style = options) {\n  ctx.lineCap = valueOrDefault(style.borderCapStyle, options.borderCapStyle);\n  ctx.setLineDash(valueOrDefault(style.borderDash, options.borderDash));\n  ctx.lineDashOffset = valueOrDefault(style.borderDashOffset, options.borderDashOffset);\n  ctx.lineJoin = valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\n  ctx.lineWidth = valueOrDefault(style.borderWidth, options.borderWidth);\n  ctx.strokeStyle = valueOrDefault(style.borderColor, options.borderColor);\n}\n\nfunction lineTo(ctx, previous, target) {\n  ctx.lineTo(target.x, target.y);\n}\n\n/**\n * @returns {any}\n */\nfunction getLineMethod(options) {\n  if (options.stepped) {\n    return _steppedLineTo;\n  }\n\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierCurveTo;\n  }\n\n  return lineTo;\n}\n\nfunction pathVars(points, segment, params = {}) {\n  const count = points.length;\n  const {start: paramsStart = 0, end: paramsEnd = count - 1} = params;\n  const {start: segmentStart, end: segmentEnd} = segment;\n  const start = Math.max(paramsStart, segmentStart);\n  const end = Math.min(paramsEnd, segmentEnd);\n  const outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n\n  return {\n    count,\n    start,\n    loop: segment.loop,\n    ilen: end < start && !outside ? count + end - start : end - start\n  };\n}\n\n/**\n * Create path from points, grouping by truncated x-coordinate\n * Points need to be in order by x-coordinate for this to work efficiently\n * @param {CanvasRenderingContext2D|Path2D} ctx - Context\n * @param {LineElement} line\n * @param {object} segment\n * @param {number} segment.start - start index of the segment, referring the points array\n * @param {number} segment.end - end index of the segment, referring the points array\n * @param {boolean} segment.loop - indicates that the segment is a loop\n * @param {object} params\n * @param {boolean} params.move - move to starting point (vs line to it)\n * @param {boolean} params.reverse - path the segment from end to start\n * @param {number} params.start - limit segment to points starting from `start` index\n * @param {number} params.end - limit segment to points ending at `start` + `count` index\n */\nfunction pathSegment(ctx, line, segment, params) {\n  const {points, options} = line;\n  const {count, start, loop, ilen} = pathVars(points, segment, params);\n  const lineMethod = getLineMethod(options);\n  // eslint-disable-next-line prefer-const\n  let {move = true, reverse} = params || {};\n  let i, point, prev;\n\n  for (i = 0; i <= ilen; ++i) {\n    point = points[(start + (reverse ? ilen - i : i)) % count];\n\n    if (point.skip) {\n      // If there is a skipped point inside a segment, spanGaps must be true\n      continue;\n    } else if (move) {\n      ctx.moveTo(point.x, point.y);\n      move = false;\n    } else {\n      lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n\n    prev = point;\n  }\n\n  if (loop) {\n    point = points[(start + (reverse ? ilen : 0)) % count];\n    lineMethod(ctx, prev, point, reverse, options.stepped);\n  }\n\n  return !!loop;\n}\n\n/**\n * Create path from points, grouping by truncated x-coordinate\n * Points need to be in order by x-coordinate for this to work efficiently\n * @param {CanvasRenderingContext2D|Path2D} ctx - Context\n * @param {LineElement} line\n * @param {object} segment\n * @param {number} segment.start - start index of the segment, referring the points array\n * @param {number} segment.end - end index of the segment, referring the points array\n * @param {boolean} segment.loop - indicates that the segment is a loop\n * @param {object} params\n * @param {boolean} params.move - move to starting point (vs line to it)\n * @param {boolean} params.reverse - path the segment from end to start\n * @param {number} params.start - limit segment to points starting from `start` index\n * @param {number} params.end - limit segment to points ending at `start` + `count` index\n */\nfunction fastPathSegment(ctx, line, segment, params) {\n  const points = line.points;\n  const {count, start, ilen} = pathVars(points, segment, params);\n  const {move = true, reverse} = params || {};\n  let avgX = 0;\n  let countX = 0;\n  let i, point, prevX, minY, maxY, lastY;\n\n  const pointIndex = (index) => (start + (reverse ? ilen - index : index)) % count;\n  const drawX = () => {\n    if (minY !== maxY) {\n      // Draw line to maxY and minY, using the average x-coordinate\n      ctx.lineTo(avgX, maxY);\n      ctx.lineTo(avgX, minY);\n      // Line to y-value of last point in group. So the line continues\n      // from correct position. Not using move, to have solid path.\n      ctx.lineTo(avgX, lastY);\n    }\n  };\n\n  if (move) {\n    point = points[pointIndex(0)];\n    ctx.moveTo(point.x, point.y);\n  }\n\n  for (i = 0; i <= ilen; ++i) {\n    point = points[pointIndex(i)];\n\n    if (point.skip) {\n      // If there is a skipped point inside a segment, spanGaps must be true\n      continue;\n    }\n\n    const x = point.x;\n    const y = point.y;\n    const truncX = x | 0; // truncated x-coordinate\n\n    if (truncX === prevX) {\n      // Determine `minY` / `maxY` and `avgX` while we stay within same x-position\n      if (y < minY) {\n        minY = y;\n      } else if (y > maxY) {\n        maxY = y;\n      }\n      // For first point in group, countX is `0`, so average will be `x` / 1.\n      avgX = (countX * avgX + x) / ++countX;\n    } else {\n      drawX();\n      // Draw line to next x-position, using the first (or only)\n      // y-value in that group\n      ctx.lineTo(x, y);\n\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n    }\n    // Keep track of the last y-value in group\n    lastY = y;\n  }\n  drawX();\n}\n\n/**\n * @param {LineElement} line - the line\n * @returns {function}\n * @private\n */\nfunction _getSegmentMethod(line) {\n  const opts = line.options;\n  const borderDash = opts.borderDash && opts.borderDash.length;\n  const useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\n  return useFastPath ? fastPathSegment : pathSegment;\n}\n\n/**\n * @private\n */\nfunction _getInterpolationMethod(options) {\n  if (options.stepped) {\n    return _steppedInterpolation;\n  }\n\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierInterpolation;\n  }\n\n  return _pointInLine;\n}\n\nfunction strokePathWithCache(ctx, line, start, count) {\n  let path = line._path;\n  if (!path) {\n    path = line._path = new Path2D();\n    if (line.path(path, start, count)) {\n      path.closePath();\n    }\n  }\n  setStyle(ctx, line.options);\n  ctx.stroke(path);\n}\n\nfunction strokePathDirect(ctx, line, start, count) {\n  const {segments, options} = line;\n  const segmentMethod = _getSegmentMethod(line);\n\n  for (const segment of segments) {\n    setStyle(ctx, options, segment.style);\n    ctx.beginPath();\n    if (segmentMethod(ctx, line, segment, {start, end: start + count - 1})) {\n      ctx.closePath();\n    }\n    ctx.stroke();\n  }\n}\n\nconst usePath2D = typeof Path2D === 'function';\n\nfunction draw(ctx, line, start, count) {\n  if (usePath2D && !line.options.segment) {\n    strokePathWithCache(ctx, line, start, count);\n  } else {\n    strokePathDirect(ctx, line, start, count);\n  }\n}\n\nexport default class LineElement extends Element {\n\n  static id = 'line';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    borderCapStyle: 'butt',\n    borderDash: [],\n    borderDashOffset: 0,\n    borderJoinStyle: 'miter',\n    borderWidth: 3,\n    capBezierPoints: true,\n    cubicInterpolationMode: 'default',\n    fill: false,\n    spanGaps: false,\n    stepped: false,\n    tension: 0,\n  };\n\n  /**\n   * @type {any}\n   */\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor',\n    borderColor: 'borderColor'\n  };\n\n\n  static descriptors = {\n    _scriptable: true,\n    _indexable: (name) => name !== 'borderDash' && name !== 'fill',\n  };\n\n\n  constructor(cfg) {\n    super();\n\n    this.animated = true;\n    this.options = undefined;\n    this._chart = undefined;\n    this._loop = undefined;\n    this._fullLoop = undefined;\n    this._path = undefined;\n    this._points = undefined;\n    this._segments = undefined;\n    this._decimated = false;\n    this._pointsUpdated = false;\n    this._datasetIndex = undefined;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  updateControlPoints(chartArea, indexAxis) {\n    const options = this.options;\n    if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !this._pointsUpdated) {\n      const loop = options.spanGaps ? this._loop : this._fullLoop;\n      _updateBezierControlPoints(this._points, options, chartArea, loop, indexAxis);\n      this._pointsUpdated = true;\n    }\n  }\n\n  set points(points) {\n    this._points = points;\n    delete this._segments;\n    delete this._path;\n    this._pointsUpdated = false;\n  }\n\n  get points() {\n    return this._points;\n  }\n\n  get segments() {\n    return this._segments || (this._segments = _computeSegments(this, this.options.segment));\n  }\n\n  /**\n\t * First non-skipped point on this line\n\t * @returns {PointElement|undefined}\n\t */\n  first() {\n    const segments = this.segments;\n    const points = this.points;\n    return segments.length && points[segments[0].start];\n  }\n\n  /**\n\t * Last non-skipped point on this line\n\t * @returns {PointElement|undefined}\n\t */\n  last() {\n    const segments = this.segments;\n    const points = this.points;\n    const count = segments.length;\n    return count && points[segments[count - 1].end];\n  }\n\n  /**\n\t * Interpolate a point in this line at the same value on `property` as\n\t * the reference `point` provided\n\t * @param {PointElement} point - the reference point\n\t * @param {string} property - the property to match on\n\t * @returns {PointElement|undefined}\n\t */\n  interpolate(point, property) {\n    const options = this.options;\n    const value = point[property];\n    const points = this.points;\n    const segments = _boundSegments(this, {property, start: value, end: value});\n\n    if (!segments.length) {\n      return;\n    }\n\n    const result = [];\n    const _interpolate = _getInterpolationMethod(options);\n    let i, ilen;\n    for (i = 0, ilen = segments.length; i < ilen; ++i) {\n      const {start, end} = segments[i];\n      const p1 = points[start];\n      const p2 = points[end];\n      if (p1 === p2) {\n        result.push(p1);\n        continue;\n      }\n      const t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n      const interpolated = _interpolate(p1, p2, t, options.stepped);\n      interpolated[property] = point[property];\n      result.push(interpolated);\n    }\n    return result.length === 1 ? result[0] : result;\n  }\n\n  /**\n\t * Append a segment of this line to current path.\n\t * @param {CanvasRenderingContext2D} ctx\n\t * @param {object} segment\n\t * @param {number} segment.start - start index of the segment, referring the points array\n \t * @param {number} segment.end - end index of the segment, referring the points array\n \t * @param {boolean} segment.loop - indicates that the segment is a loop\n\t * @param {object} params\n\t * @param {boolean} params.move - move to starting point (vs line to it)\n\t * @param {boolean} params.reverse - path the segment from end to start\n\t * @param {number} params.start - limit segment to points starting from `start` index\n\t * @param {number} params.end - limit segment to points ending at `start` + `count` index\n\t * @returns {undefined|boolean} - true if the segment is a full loop (path should be closed)\n\t */\n  pathSegment(ctx, segment, params) {\n    const segmentMethod = _getSegmentMethod(this);\n    return segmentMethod(ctx, this, segment, params);\n  }\n\n  /**\n\t * Append all segments of this line to current path.\n\t * @param {CanvasRenderingContext2D|Path2D} ctx\n\t * @param {number} [start]\n\t * @param {number} [count]\n\t * @returns {undefined|boolean} - true if line is a full loop (path should be closed)\n\t */\n  path(ctx, start, count) {\n    const segments = this.segments;\n    const segmentMethod = _getSegmentMethod(this);\n    let loop = this._loop;\n\n    start = start || 0;\n    count = count || (this.points.length - start);\n\n    for (const segment of segments) {\n      loop &= segmentMethod(ctx, this, segment, {start, end: start + count - 1});\n    }\n    return !!loop;\n  }\n\n  /**\n\t * Draw\n\t * @param {CanvasRenderingContext2D} ctx\n\t * @param {object} chartArea\n\t * @param {number} [start]\n\t * @param {number} [count]\n\t */\n  draw(ctx, chartArea, start, count) {\n    const options = this.options || {};\n    const points = this.points || [];\n\n    if (points.length && options.borderWidth) {\n      ctx.save();\n\n      draw(ctx, this, start, count);\n\n      ctx.restore();\n    }\n\n    if (this.animated) {\n      // When line is animated, the control points and path are not cached.\n      this._pointsUpdated = false;\n      this._path = undefined;\n    }\n  }\n}\n","import Element from '../core/core.element.js';\nimport {drawPoint, _isPointInArea} from '../helpers/helpers.canvas.js';\nimport type {\n  CartesianParsedData,\n  ChartArea,\n  Point,\n  PointHoverOptions,\n  PointOptions,\n} from '../types/index.js';\n\nfunction inRange(el: PointElement, pos: number, axis: 'x' | 'y', useFinalPosition?: boolean) {\n  const options = el.options;\n  const {[axis]: value} = el.getProps([axis], useFinalPosition);\n\n  return (Math.abs(pos - value) < options.radius + options.hitRadius);\n}\n\nexport type PointProps = Point\n\nexport default class PointElement extends Element<PointProps, PointOptions & PointHoverOptions> {\n\n  static id = 'point';\n\n  parsed: CartesianParsedData;\n  skip?: boolean;\n  stop?: boolean;\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    borderWidth: 1,\n    hitRadius: 1,\n    hoverBorderWidth: 1,\n    hoverRadius: 4,\n    pointStyle: 'circle',\n    radius: 3,\n    rotation: 0\n  };\n\n  /**\n   * @type {any}\n   */\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor',\n    borderColor: 'borderColor'\n  };\n\n  constructor(cfg) {\n    super();\n\n    this.options = undefined;\n    this.parsed = undefined;\n    this.skip = undefined;\n    this.stop = undefined;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  inRange(mouseX: number, mouseY: number, useFinalPosition?: boolean) {\n    const options = this.options;\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return ((Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2)) < Math.pow(options.hitRadius + options.radius, 2));\n  }\n\n  inXRange(mouseX: number, useFinalPosition?: boolean) {\n    return inRange(this, mouseX, 'x', useFinalPosition);\n  }\n\n  inYRange(mouseY: number, useFinalPosition?: boolean) {\n    return inRange(this, mouseY, 'y', useFinalPosition);\n  }\n\n  getCenterPoint(useFinalPosition?: boolean) {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y};\n  }\n\n  size(options?: Partial<PointOptions & PointHoverOptions>) {\n    options = options || this.options || {};\n    let radius = options.radius || 0;\n    radius = Math.max(radius, radius && options.hoverRadius || 0);\n    const borderWidth = radius && options.borderWidth || 0;\n    return (radius + borderWidth) * 2;\n  }\n\n  draw(ctx: CanvasRenderingContext2D, area: ChartArea) {\n    const options = this.options;\n\n    if (this.skip || options.radius < 0.1 || !_isPointInArea(this, area, this.size(options) / 2)) {\n      return;\n    }\n\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n    ctx.fillStyle = options.backgroundColor;\n    drawPoint(ctx, options, this.x, this.y);\n  }\n\n  getRange() {\n    const options = this.options || {};\n    // @ts-expect-error Fallbacks should never be hit in practice\n    return options.radius + options.hitRadius;\n  }\n}\n","import Element from '../core/core.element.js';\nimport layouts from '../core/core.layouts.js';\nimport {PI, isArray, toPadding, toFont} from '../helpers/index.js';\nimport {_toLeftRightCenter, _alignStartEnd} from '../helpers/helpers.extras.js';\nimport {renderText} from '../helpers/helpers.canvas.js';\n\nexport class Title extends Element {\n  /**\n\t * @param {{ ctx: any; options: any; chart: any; }} config\n\t */\n  constructor(config) {\n    super();\n\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this._padding = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n\n  update(maxWidth, maxHeight) {\n    const opts = this.options;\n\n    this.left = 0;\n    this.top = 0;\n\n    if (!opts.display) {\n      this.width = this.height = this.right = this.bottom = 0;\n      return;\n    }\n\n    this.width = this.right = maxWidth;\n    this.height = this.bottom = maxHeight;\n\n    const lineCount = isArray(opts.text) ? opts.text.length : 1;\n    this._padding = toPadding(opts.padding);\n    const textSize = lineCount * toFont(opts.font).lineHeight + this._padding.height;\n\n    if (this.isHorizontal()) {\n      this.height = textSize;\n    } else {\n      this.width = textSize;\n    }\n  }\n\n  isHorizontal() {\n    const pos = this.options.position;\n    return pos === 'top' || pos === 'bottom';\n  }\n\n  _drawArgs(offset) {\n    const {top, left, bottom, right, options} = this;\n    const align = options.align;\n    let rotation = 0;\n    let maxWidth, titleX, titleY;\n\n    if (this.isHorizontal()) {\n      titleX = _alignStartEnd(align, left, right);\n      titleY = top + offset;\n      maxWidth = right - left;\n    } else {\n      if (options.position === 'left') {\n        titleX = left + offset;\n        titleY = _alignStartEnd(align, bottom, top);\n        rotation = PI * -0.5;\n      } else {\n        titleX = right - offset;\n        titleY = _alignStartEnd(align, top, bottom);\n        rotation = PI * 0.5;\n      }\n      maxWidth = bottom - top;\n    }\n    return {titleX, titleY, maxWidth, rotation};\n  }\n\n  draw() {\n    const ctx = this.ctx;\n    const opts = this.options;\n\n    if (!opts.display) {\n      return;\n    }\n\n    const fontOpts = toFont(opts.font);\n    const lineHeight = fontOpts.lineHeight;\n    const offset = lineHeight / 2 + this._padding.top;\n    const {titleX, titleY, maxWidth, rotation} = this._drawArgs(offset);\n\n    renderText(ctx, opts.text, 0, 0, fontOpts, {\n      color: opts.color,\n      maxWidth,\n      rotation,\n      textAlign: _toLeftRightCenter(opts.align),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n}\n\nfunction createTitle(chart, titleOpts) {\n  const title = new Title({\n    ctx: chart.ctx,\n    options: titleOpts,\n    chart\n  });\n\n  layouts.configure(chart, title, titleOpts);\n  layouts.addBox(chart, title);\n  chart.titleBlock = title;\n}\n\nexport default {\n  id: 'title',\n\n  /**\n\t * For tests\n\t * @private\n\t */\n  _element: Title,\n\n  start(chart, _args, options) {\n    createTitle(chart, options);\n  },\n\n  stop(chart) {\n    const titleBlock = chart.titleBlock;\n    layouts.removeBox(chart, titleBlock);\n    delete chart.titleBlock;\n  },\n\n  beforeUpdate(chart, _args, options) {\n    const title = chart.titleBlock;\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'bold',\n    },\n    fullSize: true,\n    padding: 10,\n    position: 'top',\n    text: '',\n    weight: 2000         // by default greater than legend (1000) to be above\n  },\n\n  defaultRoutes: {\n    color: 'color'\n  },\n\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n","import {Title} from './plugin.title.js';\nimport layouts from '../core/core.layouts.js';\n\nconst map = new WeakMap();\n\nexport default {\n  id: 'subtitle',\n\n  start(chart, _args, options) {\n    const title = new Title({\n      ctx: chart.ctx,\n      options,\n      chart\n    });\n\n    layouts.configure(chart, title, options);\n    layouts.addBox(chart, title);\n    map.set(chart, title);\n  },\n\n  stop(chart) {\n    layouts.removeBox(chart, map.get(chart));\n    map.delete(chart);\n  },\n\n  beforeUpdate(chart, _args, options) {\n    const title = map.get(chart);\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'normal',\n    },\n    fullSize: true,\n    padding: 0,\n    position: 'top',\n    text: '',\n    weight: 1500         // by default greater than legend (1000) and smaller than title (2000)\n  },\n\n  defaultRoutes: {\n    color: 'color'\n  },\n\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n","import Animations from '../core/core.animations.js';\nimport Element from '../core/core.element.js';\nimport {addRoundedRectPath} from '../helpers/helpers.canvas.js';\nimport {each, noop, isNullOrUndef, isArray, _elementsEqual, isObject} from '../helpers/helpers.core.js';\nimport {toFont, toPadding, toTRBLCorners} from '../helpers/helpers.options.js';\nimport {getRtlAdapter, overrideTextDirection, restoreTextDirection} from '../helpers/helpers.rtl.js';\nimport {distanceBetweenPoints, _limitValue} from '../helpers/helpers.math.js';\nimport {createContext, drawPoint} from '../helpers/index.js';\n\n/**\n * @typedef { import('../platform/platform.base.js').Chart } Chart\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n * @typedef { import('../types/index.js').ActiveElement } ActiveElement\n * @typedef { import('../core/core.interaction.js').InteractionItem } InteractionItem\n */\n\nconst positioners = {\n  /**\n\t * Average mode places the tooltip at the average position of the elements shown\n\t */\n  average(items) {\n    if (!items.length) {\n      return false;\n    }\n\n    let i, len;\n    let xSet = new Set();\n    let y = 0;\n    let count = 0;\n\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const pos = el.tooltipPosition();\n        xSet.add(pos.x);\n        y += pos.y;\n        ++count;\n      }\n    }\n\n    // No visible items where found, return false so we don't have to divide by 0 which reduces in NaN\n    if (count === 0 || xSet.size === 0) {\n      return false;\n    }\n\n    const xAverage = [...xSet].reduce((a, b) => a + b) / xSet.size;\n\n    return {\n      x: xAverage,\n      y: y / count\n    };\n  },\n\n  /**\n\t * Gets the tooltip position nearest of the item nearest to the event position\n\t */\n  nearest(items, eventPosition) {\n    if (!items.length) {\n      return false;\n    }\n\n    let x = eventPosition.x;\n    let y = eventPosition.y;\n    let minDistance = Number.POSITIVE_INFINITY;\n    let i, len, nearestElement;\n\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const center = el.getCenterPoint();\n        const d = distanceBetweenPoints(eventPosition, center);\n\n        if (d < minDistance) {\n          minDistance = d;\n          nearestElement = el;\n        }\n      }\n    }\n\n    if (nearestElement) {\n      const tp = nearestElement.tooltipPosition();\n      x = tp.x;\n      y = tp.y;\n    }\n\n    return {\n      x,\n      y\n    };\n  }\n};\n\n// Helper to push or concat based on if the 2nd parameter is an array or not\nfunction pushOrConcat(base, toPush) {\n  if (toPush) {\n    if (isArray(toPush)) {\n      // base = base.concat(toPush);\n      Array.prototype.push.apply(base, toPush);\n    } else {\n      base.push(toPush);\n    }\n  }\n\n  return base;\n}\n\n/**\n * Returns array of strings split by newline\n * @param {*} str - The value to split by newline.\n * @returns {string|string[]} value if newline present - Returned from String split() method\n * @function\n */\nfunction splitNewlines(str) {\n  if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n    return str.split('\\n');\n  }\n  return str;\n}\n\n\n/**\n * Private helper to create a tooltip item model\n * @param {Chart} chart\n * @param {ActiveElement} item - {element, index, datasetIndex} to create the tooltip item for\n * @return new tooltip item\n */\nfunction createTooltipItem(chart, item) {\n  const {element, datasetIndex, index} = item;\n  const controller = chart.getDatasetMeta(datasetIndex).controller;\n  const {label, value} = controller.getLabelAndValue(index);\n\n  return {\n    chart,\n    label,\n    parsed: controller.getParsed(index),\n    raw: chart.data.datasets[datasetIndex].data[index],\n    formattedValue: value,\n    dataset: controller.getDataset(),\n    dataIndex: index,\n    datasetIndex,\n    element\n  };\n}\n\n/**\n * Get the size of the tooltip\n */\nfunction getTooltipSize(tooltip, options) {\n  const ctx = tooltip.chart.ctx;\n  const {body, footer, title} = tooltip;\n  const {boxWidth, boxHeight} = options;\n  const bodyFont = toFont(options.bodyFont);\n  const titleFont = toFont(options.titleFont);\n  const footerFont = toFont(options.footerFont);\n  const titleLineCount = title.length;\n  const footerLineCount = footer.length;\n  const bodyLineItemCount = body.length;\n\n  const padding = toPadding(options.padding);\n  let height = padding.height;\n  let width = 0;\n\n  // Count of all lines in the body\n  let combinedBodyLength = body.reduce((count, bodyItem) => count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\n  combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n\n  if (titleLineCount) {\n    height += titleLineCount * titleFont.lineHeight\n\t\t\t+ (titleLineCount - 1) * options.titleSpacing\n\t\t\t+ options.titleMarginBottom;\n  }\n  if (combinedBodyLength) {\n    // Body lines may include some extra height depending on boxHeight\n    const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n    height += bodyLineItemCount * bodyLineHeight\n\t\t\t+ (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight\n\t\t\t+ (combinedBodyLength - 1) * options.bodySpacing;\n  }\n  if (footerLineCount) {\n    height += options.footerMarginTop\n\t\t\t+ footerLineCount * footerFont.lineHeight\n\t\t\t+ (footerLineCount - 1) * options.footerSpacing;\n  }\n\n  // Title width\n  let widthPadding = 0;\n  const maxLineWidth = function(line) {\n    width = Math.max(width, ctx.measureText(line).width + widthPadding);\n  };\n\n  ctx.save();\n\n  ctx.font = titleFont.string;\n  each(tooltip.title, maxLineWidth);\n\n  // Body width\n  ctx.font = bodyFont.string;\n  each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n\n  // Body lines may include some extra width due to the color box\n  widthPadding = options.displayColors ? (boxWidth + 2 + options.boxPadding) : 0;\n  each(body, (bodyItem) => {\n    each(bodyItem.before, maxLineWidth);\n    each(bodyItem.lines, maxLineWidth);\n    each(bodyItem.after, maxLineWidth);\n  });\n\n  // Reset back to 0\n  widthPadding = 0;\n\n  // Footer width\n  ctx.font = footerFont.string;\n  each(tooltip.footer, maxLineWidth);\n\n  ctx.restore();\n\n  // Add padding\n  width += padding.width;\n\n  return {width, height};\n}\n\nfunction determineYAlign(chart, size) {\n  const {y, height} = size;\n\n  if (y < height / 2) {\n    return 'top';\n  } else if (y > (chart.height - height / 2)) {\n    return 'bottom';\n  }\n  return 'center';\n}\n\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n  const {x, width} = size;\n  const caret = options.caretSize + options.caretPadding;\n  if (xAlign === 'left' && x + width + caret > chart.width) {\n    return true;\n  }\n\n  if (xAlign === 'right' && x - width - caret < 0) {\n    return true;\n  }\n}\n\nfunction determineXAlign(chart, options, size, yAlign) {\n  const {x, width} = size;\n  const {width: chartWidth, chartArea: {left, right}} = chart;\n  let xAlign = 'center';\n\n  if (yAlign === 'center') {\n    xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n  } else if (x <= width / 2) {\n    xAlign = 'left';\n  } else if (x >= chartWidth - width / 2) {\n    xAlign = 'right';\n  }\n\n  if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n    xAlign = 'center';\n  }\n\n  return xAlign;\n}\n\n/**\n * Helper to get the alignment of a tooltip given the size\n */\nfunction determineAlignment(chart, options, size) {\n  const yAlign = size.yAlign || options.yAlign || determineYAlign(chart, size);\n\n  return {\n    xAlign: size.xAlign || options.xAlign || determineXAlign(chart, options, size, yAlign),\n    yAlign\n  };\n}\n\nfunction alignX(size, xAlign) {\n  let {x, width} = size;\n  if (xAlign === 'right') {\n    x -= width;\n  } else if (xAlign === 'center') {\n    x -= (width / 2);\n  }\n  return x;\n}\n\nfunction alignY(size, yAlign, paddingAndSize) {\n  // eslint-disable-next-line prefer-const\n  let {y, height} = size;\n  if (yAlign === 'top') {\n    y += paddingAndSize;\n  } else if (yAlign === 'bottom') {\n    y -= height + paddingAndSize;\n  } else {\n    y -= (height / 2);\n  }\n  return y;\n}\n\n/**\n * Helper to get the location a tooltip needs to be placed at given the initial position (via the vm) and the size and alignment\n */\nfunction getBackgroundPoint(options, size, alignment, chart) {\n  const {caretSize, caretPadding, cornerRadius} = options;\n  const {xAlign, yAlign} = alignment;\n  const paddingAndSize = caretSize + caretPadding;\n  const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(cornerRadius);\n\n  let x = alignX(size, xAlign);\n  const y = alignY(size, yAlign, paddingAndSize);\n\n  if (yAlign === 'center') {\n    if (xAlign === 'left') {\n      x += paddingAndSize;\n    } else if (xAlign === 'right') {\n      x -= paddingAndSize;\n    }\n  } else if (xAlign === 'left') {\n    x -= Math.max(topLeft, bottomLeft) + caretSize;\n  } else if (xAlign === 'right') {\n    x += Math.max(topRight, bottomRight) + caretSize;\n  }\n\n  return {\n    x: _limitValue(x, 0, chart.width - size.width),\n    y: _limitValue(y, 0, chart.height - size.height)\n  };\n}\n\nfunction getAlignedX(tooltip, align, options) {\n  const padding = toPadding(options.padding);\n\n  return align === 'center'\n    ? tooltip.x + tooltip.width / 2\n    : align === 'right'\n      ? tooltip.x + tooltip.width - padding.right\n      : tooltip.x + padding.left;\n}\n\n/**\n * Helper to build before and after body lines\n */\nfunction getBeforeAfterBodyLines(callback) {\n  return pushOrConcat([], splitNewlines(callback));\n}\n\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n  return createContext(parent, {\n    tooltip,\n    tooltipItems,\n    type: 'tooltip'\n  });\n}\n\nfunction overrideCallbacks(callbacks, context) {\n  const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n  return override ? callbacks.override(override) : callbacks;\n}\n\nconst defaultCallbacks = {\n  // Args are: (tooltipItems, data)\n  beforeTitle: noop,\n  title(tooltipItems) {\n    if (tooltipItems.length > 0) {\n      const item = tooltipItems[0];\n      const labels = item.chart.data.labels;\n      const labelCount = labels ? labels.length : 0;\n\n      if (this && this.options && this.options.mode === 'dataset') {\n        return item.dataset.label || '';\n      } else if (item.label) {\n        return item.label;\n      } else if (labelCount > 0 && item.dataIndex < labelCount) {\n        return labels[item.dataIndex];\n      }\n    }\n\n    return '';\n  },\n  afterTitle: noop,\n\n  // Args are: (tooltipItems, data)\n  beforeBody: noop,\n\n  // Args are: (tooltipItem, data)\n  beforeLabel: noop,\n  label(tooltipItem) {\n    if (this && this.options && this.options.mode === 'dataset') {\n      return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n    }\n\n    let label = tooltipItem.dataset.label || '';\n\n    if (label) {\n      label += ': ';\n    }\n    const value = tooltipItem.formattedValue;\n    if (!isNullOrUndef(value)) {\n      label += value;\n    }\n    return label;\n  },\n  labelColor(tooltipItem) {\n    const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n    const options = meta.controller.getStyle(tooltipItem.dataIndex);\n    return {\n      borderColor: options.borderColor,\n      backgroundColor: options.backgroundColor,\n      borderWidth: options.borderWidth,\n      borderDash: options.borderDash,\n      borderDashOffset: options.borderDashOffset,\n      borderRadius: 0,\n    };\n  },\n  labelTextColor() {\n    return this.options.bodyColor;\n  },\n  labelPointStyle(tooltipItem) {\n    const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n    const options = meta.controller.getStyle(tooltipItem.dataIndex);\n    return {\n      pointStyle: options.pointStyle,\n      rotation: options.rotation,\n    };\n  },\n  afterLabel: noop,\n\n  // Args are: (tooltipItems, data)\n  afterBody: noop,\n\n  // Args are: (tooltipItems, data)\n  beforeFooter: noop,\n  footer: noop,\n  afterFooter: noop\n};\n\n/**\n * Invoke callback from object with context and arguments.\n * If callback returns `undefined`, then will be invoked default callback.\n * @param {Record<keyof typeof defaultCallbacks, Function>} callbacks\n * @param {keyof typeof defaultCallbacks} name\n * @param {*} ctx\n * @param {*} arg\n * @returns {any}\n */\nfunction invokeCallbackWithFallback(callbacks, name, ctx, arg) {\n  const result = callbacks[name].call(ctx, arg);\n\n  if (typeof result === 'undefined') {\n    return defaultCallbacks[name].call(ctx, arg);\n  }\n\n  return result;\n}\n\nexport class Tooltip extends Element {\n\n  /**\n   * @namespace Chart.Tooltip.positioners\n   */\n  static positioners = positioners;\n\n  constructor(config) {\n    super();\n\n    this.opacity = 0;\n    this._active = [];\n    this._eventPosition = undefined;\n    this._size = undefined;\n    this._cachedAnimations = undefined;\n    this._tooltipItems = [];\n    this.$animations = undefined;\n    this.$context = undefined;\n    this.chart = config.chart;\n    this.options = config.options;\n    this.dataPoints = undefined;\n    this.title = undefined;\n    this.beforeBody = undefined;\n    this.body = undefined;\n    this.afterBody = undefined;\n    this.footer = undefined;\n    this.xAlign = undefined;\n    this.yAlign = undefined;\n    this.x = undefined;\n    this.y = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this.caretX = undefined;\n    this.caretY = undefined;\n    // TODO: V4, make this private, rename to `_labelStyles`, and combine with `labelPointStyles`\n    // and `labelTextColors` to create a single variable\n    this.labelColors = undefined;\n    this.labelPointStyles = undefined;\n    this.labelTextColors = undefined;\n  }\n\n  initialize(options) {\n    this.options = options;\n    this._cachedAnimations = undefined;\n    this.$context = undefined;\n  }\n\n  /**\n\t * @private\n\t */\n  _resolveAnimations() {\n    const cached = this._cachedAnimations;\n\n    if (cached) {\n      return cached;\n    }\n\n    const chart = this.chart;\n    const options = this.options.setContext(this.getContext());\n    const opts = options.enabled && chart.options.animation && options.animations;\n    const animations = new Animations(this.chart, opts);\n    if (opts._cacheable) {\n      this._cachedAnimations = Object.freeze(animations);\n    }\n\n    return animations;\n  }\n\n  /**\n\t * @protected\n\t */\n  getContext() {\n    return this.$context ||\n\t\t\t(this.$context = createTooltipContext(this.chart.getContext(), this, this._tooltipItems));\n  }\n\n  getTitle(context, options) {\n    const {callbacks} = options;\n\n    const beforeTitle = invokeCallbackWithFallback(callbacks, 'beforeTitle', this, context);\n    const title = invokeCallbackWithFallback(callbacks, 'title', this, context);\n    const afterTitle = invokeCallbackWithFallback(callbacks, 'afterTitle', this, context);\n\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n    lines = pushOrConcat(lines, splitNewlines(title));\n    lines = pushOrConcat(lines, splitNewlines(afterTitle));\n\n    return lines;\n  }\n\n  getBeforeBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(\n      invokeCallbackWithFallback(options.callbacks, 'beforeBody', this, tooltipItems)\n    );\n  }\n\n  getBody(tooltipItems, options) {\n    const {callbacks} = options;\n    const bodyItems = [];\n\n    each(tooltipItems, (context) => {\n      const bodyItem = {\n        before: [],\n        lines: [],\n        after: []\n      };\n      const scoped = overrideCallbacks(callbacks, context);\n      pushOrConcat(bodyItem.before, splitNewlines(invokeCallbackWithFallback(scoped, 'beforeLabel', this, context)));\n      pushOrConcat(bodyItem.lines, invokeCallbackWithFallback(scoped, 'label', this, context));\n      pushOrConcat(bodyItem.after, splitNewlines(invokeCallbackWithFallback(scoped, 'afterLabel', this, context)));\n\n      bodyItems.push(bodyItem);\n    });\n\n    return bodyItems;\n  }\n\n  getAfterBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(\n      invokeCallbackWithFallback(options.callbacks, 'afterBody', this, tooltipItems)\n    );\n  }\n\n  // Get the footer and beforeFooter and afterFooter lines\n  getFooter(tooltipItems, options) {\n    const {callbacks} = options;\n\n    const beforeFooter = invokeCallbackWithFallback(callbacks, 'beforeFooter', this, tooltipItems);\n    const footer = invokeCallbackWithFallback(callbacks, 'footer', this, tooltipItems);\n    const afterFooter = invokeCallbackWithFallback(callbacks, 'afterFooter', this, tooltipItems);\n\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n    lines = pushOrConcat(lines, splitNewlines(footer));\n    lines = pushOrConcat(lines, splitNewlines(afterFooter));\n\n    return lines;\n  }\n\n  /**\n\t * @private\n\t */\n  _createItems(options) {\n    const active = this._active;\n    const data = this.chart.data;\n    const labelColors = [];\n    const labelPointStyles = [];\n    const labelTextColors = [];\n    let tooltipItems = [];\n    let i, len;\n\n    for (i = 0, len = active.length; i < len; ++i) {\n      tooltipItems.push(createTooltipItem(this.chart, active[i]));\n    }\n\n    // If the user provided a filter function, use it to modify the tooltip items\n    if (options.filter) {\n      tooltipItems = tooltipItems.filter((element, index, array) => options.filter(element, index, array, data));\n    }\n\n    // If the user provided a sorting function, use it to modify the tooltip items\n    if (options.itemSort) {\n      tooltipItems = tooltipItems.sort((a, b) => options.itemSort(a, b, data));\n    }\n\n    // Determine colors for boxes\n    each(tooltipItems, (context) => {\n      const scoped = overrideCallbacks(options.callbacks, context);\n      labelColors.push(invokeCallbackWithFallback(scoped, 'labelColor', this, context));\n      labelPointStyles.push(invokeCallbackWithFallback(scoped, 'labelPointStyle', this, context));\n      labelTextColors.push(invokeCallbackWithFallback(scoped, 'labelTextColor', this, context));\n    });\n\n    this.labelColors = labelColors;\n    this.labelPointStyles = labelPointStyles;\n    this.labelTextColors = labelTextColors;\n    this.dataPoints = tooltipItems;\n    return tooltipItems;\n  }\n\n  update(changed, replay) {\n    const options = this.options.setContext(this.getContext());\n    const active = this._active;\n    let properties;\n    let tooltipItems = [];\n\n    if (!active.length) {\n      if (this.opacity !== 0) {\n        properties = {\n          opacity: 0\n        };\n      }\n    } else {\n      const position = positioners[options.position].call(this, active, this._eventPosition);\n      tooltipItems = this._createItems(options);\n\n      this.title = this.getTitle(tooltipItems, options);\n      this.beforeBody = this.getBeforeBody(tooltipItems, options);\n      this.body = this.getBody(tooltipItems, options);\n      this.afterBody = this.getAfterBody(tooltipItems, options);\n      this.footer = this.getFooter(tooltipItems, options);\n\n      const size = this._size = getTooltipSize(this, options);\n      const positionAndSize = Object.assign({}, position, size);\n      const alignment = determineAlignment(this.chart, options, positionAndSize);\n      const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, this.chart);\n\n      this.xAlign = alignment.xAlign;\n      this.yAlign = alignment.yAlign;\n\n      properties = {\n        opacity: 1,\n        x: backgroundPoint.x,\n        y: backgroundPoint.y,\n        width: size.width,\n        height: size.height,\n        caretX: position.x,\n        caretY: position.y\n      };\n    }\n\n    this._tooltipItems = tooltipItems;\n    this.$context = undefined;\n\n    if (properties) {\n      this._resolveAnimations().update(this, properties);\n    }\n\n    if (changed && options.external) {\n      options.external.call(this, {chart: this.chart, tooltip: this, replay});\n    }\n  }\n\n  drawCaret(tooltipPoint, ctx, size, options) {\n    const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n\n    ctx.lineTo(caretPosition.x1, caretPosition.y1);\n    ctx.lineTo(caretPosition.x2, caretPosition.y2);\n    ctx.lineTo(caretPosition.x3, caretPosition.y3);\n  }\n\n  getCaretPosition(tooltipPoint, size, options) {\n    const {xAlign, yAlign} = this;\n    const {caretSize, cornerRadius} = options;\n    const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(cornerRadius);\n    const {x: ptX, y: ptY} = tooltipPoint;\n    const {width, height} = size;\n    let x1, x2, x3, y1, y2, y3;\n\n    if (yAlign === 'center') {\n      y2 = ptY + (height / 2);\n\n      if (xAlign === 'left') {\n        x1 = ptX;\n        x2 = x1 - caretSize;\n\n        // Left draws bottom -> top, this y1 is on the bottom\n        y1 = y2 + caretSize;\n        y3 = y2 - caretSize;\n      } else {\n        x1 = ptX + width;\n        x2 = x1 + caretSize;\n\n        // Right draws top -> bottom, thus y1 is on the top\n        y1 = y2 - caretSize;\n        y3 = y2 + caretSize;\n      }\n\n      x3 = x1;\n    } else {\n      if (xAlign === 'left') {\n        x2 = ptX + Math.max(topLeft, bottomLeft) + (caretSize);\n      } else if (xAlign === 'right') {\n        x2 = ptX + width - Math.max(topRight, bottomRight) - caretSize;\n      } else {\n        x2 = this.caretX;\n      }\n\n      if (yAlign === 'top') {\n        y1 = ptY;\n        y2 = y1 - caretSize;\n\n        // Top draws left -> right, thus x1 is on the left\n        x1 = x2 - caretSize;\n        x3 = x2 + caretSize;\n      } else {\n        y1 = ptY + height;\n        y2 = y1 + caretSize;\n\n        // Bottom draws right -> left, thus x1 is on the right\n        x1 = x2 + caretSize;\n        x3 = x2 - caretSize;\n      }\n      y3 = y1;\n    }\n    return {x1, x2, x3, y1, y2, y3};\n  }\n\n  drawTitle(pt, ctx, options) {\n    const title = this.title;\n    const length = title.length;\n    let titleFont, titleSpacing, i;\n\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n\n      pt.x = getAlignedX(this, options.titleAlign, options);\n\n      ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n      ctx.textBaseline = 'middle';\n\n      titleFont = toFont(options.titleFont);\n      titleSpacing = options.titleSpacing;\n\n      ctx.fillStyle = options.titleColor;\n      ctx.font = titleFont.string;\n\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n        pt.y += titleFont.lineHeight + titleSpacing; // Line Height and spacing\n\n        if (i + 1 === length) {\n          pt.y += options.titleMarginBottom - titleSpacing; // If Last, add margin, remove spacing\n        }\n      }\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _drawColorBox(ctx, pt, i, rtlHelper, options) {\n    const labelColor = this.labelColors[i];\n    const labelPointStyle = this.labelPointStyles[i];\n    const {boxHeight, boxWidth} = options;\n    const bodyFont = toFont(options.bodyFont);\n    const colorX = getAlignedX(this, 'left', options);\n    const rtlColorX = rtlHelper.x(colorX);\n    const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n    const colorY = pt.y + yOffSet;\n\n    if (options.usePointStyle) {\n      const drawOptions = {\n        radius: Math.min(boxWidth, boxHeight) / 2, // fit the circle in the box\n        pointStyle: labelPointStyle.pointStyle,\n        rotation: labelPointStyle.rotation,\n        borderWidth: 1\n      };\n      // Recalculate x and y for drawPoint() because its expecting\n      // x and y to be center of figure (instead of top left)\n      const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n      const centerY = colorY + boxHeight / 2;\n\n      // Fill the point with white so that colours merge nicely if the opacity is < 1\n      ctx.strokeStyle = options.multiKeyBackground;\n      ctx.fillStyle = options.multiKeyBackground;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n\n      // Draw the point\n      ctx.strokeStyle = labelColor.borderColor;\n      ctx.fillStyle = labelColor.backgroundColor;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n    } else {\n      // Border\n      ctx.lineWidth = isObject(labelColor.borderWidth) ? Math.max(...Object.values(labelColor.borderWidth)) : (labelColor.borderWidth || 1); // TODO, v4 remove fallback\n      ctx.strokeStyle = labelColor.borderColor;\n      ctx.setLineDash(labelColor.borderDash || []);\n      ctx.lineDashOffset = labelColor.borderDashOffset || 0;\n\n      // Fill a white rect so that colours merge nicely if the opacity is < 1\n      const outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth);\n      const innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - 2);\n      const borderRadius = toTRBLCorners(labelColor.borderRadius);\n\n      if (Object.values(borderRadius).some(v => v !== 0)) {\n        ctx.beginPath();\n        ctx.fillStyle = options.multiKeyBackground;\n        addRoundedRectPath(ctx, {\n          x: outerX,\n          y: colorY,\n          w: boxWidth,\n          h: boxHeight,\n          radius: borderRadius,\n        });\n        ctx.fill();\n        ctx.stroke();\n\n        // Inner square\n        ctx.fillStyle = labelColor.backgroundColor;\n        ctx.beginPath();\n        addRoundedRectPath(ctx, {\n          x: innerX,\n          y: colorY + 1,\n          w: boxWidth - 2,\n          h: boxHeight - 2,\n          radius: borderRadius,\n        });\n        ctx.fill();\n      } else {\n        // Normal rect\n        ctx.fillStyle = options.multiKeyBackground;\n        ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n        ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n        // Inner square\n        ctx.fillStyle = labelColor.backgroundColor;\n        ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n      }\n    }\n\n    // restore fillStyle\n    ctx.fillStyle = this.labelTextColors[i];\n  }\n\n  drawBody(pt, ctx, options) {\n    const {body} = this;\n    const {bodySpacing, bodyAlign, displayColors, boxHeight, boxWidth, boxPadding} = options;\n    const bodyFont = toFont(options.bodyFont);\n    let bodyLineHeight = bodyFont.lineHeight;\n    let xLinePadding = 0;\n\n    const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n\n    const fillLineOfText = function(line) {\n      ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n      pt.y += bodyLineHeight + bodySpacing;\n    };\n\n    const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n    let bodyItem, textColor, lines, i, j, ilen, jlen;\n\n    ctx.textAlign = bodyAlign;\n    ctx.textBaseline = 'middle';\n    ctx.font = bodyFont.string;\n\n    pt.x = getAlignedX(this, bodyAlignForCalculation, options);\n\n    // Before body lines\n    ctx.fillStyle = options.bodyColor;\n    each(this.beforeBody, fillLineOfText);\n\n    xLinePadding = displayColors && bodyAlignForCalculation !== 'right'\n      ? bodyAlign === 'center' ? (boxWidth / 2 + boxPadding) : (boxWidth + 2 + boxPadding)\n      : 0;\n\n    // Draw body lines now\n    for (i = 0, ilen = body.length; i < ilen; ++i) {\n      bodyItem = body[i];\n      textColor = this.labelTextColors[i];\n\n      ctx.fillStyle = textColor;\n      each(bodyItem.before, fillLineOfText);\n\n      lines = bodyItem.lines;\n      // Draw Legend-like boxes if needed\n      if (displayColors && lines.length) {\n        this._drawColorBox(ctx, pt, i, rtlHelper, options);\n        bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n      }\n\n      for (j = 0, jlen = lines.length; j < jlen; ++j) {\n        fillLineOfText(lines[j]);\n        // Reset for any lines that don't include colorbox\n        bodyLineHeight = bodyFont.lineHeight;\n      }\n\n      each(bodyItem.after, fillLineOfText);\n    }\n\n    // Reset back to 0 for after body\n    xLinePadding = 0;\n    bodyLineHeight = bodyFont.lineHeight;\n\n    // After body lines\n    each(this.afterBody, fillLineOfText);\n    pt.y -= bodySpacing; // Remove last body spacing\n  }\n\n  drawFooter(pt, ctx, options) {\n    const footer = this.footer;\n    const length = footer.length;\n    let footerFont, i;\n\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n\n      pt.x = getAlignedX(this, options.footerAlign, options);\n      pt.y += options.footerMarginTop;\n\n      ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n      ctx.textBaseline = 'middle';\n\n      footerFont = toFont(options.footerFont);\n\n      ctx.fillStyle = options.footerColor;\n      ctx.font = footerFont.string;\n\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n        pt.y += footerFont.lineHeight + options.footerSpacing;\n      }\n    }\n  }\n\n  drawBackground(pt, ctx, tooltipSize, options) {\n    const {xAlign, yAlign} = this;\n    const {x, y} = pt;\n    const {width, height} = tooltipSize;\n    const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(options.cornerRadius);\n\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n\n    ctx.beginPath();\n    ctx.moveTo(x + topLeft, y);\n    if (yAlign === 'top') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width - topRight, y);\n    ctx.quadraticCurveTo(x + width, y, x + width, y + topRight);\n    if (yAlign === 'center' && xAlign === 'right') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width, y + height - bottomRight);\n    ctx.quadraticCurveTo(x + width, y + height, x + width - bottomRight, y + height);\n    if (yAlign === 'bottom') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + bottomLeft, y + height);\n    ctx.quadraticCurveTo(x, y + height, x, y + height - bottomLeft);\n    if (yAlign === 'center' && xAlign === 'left') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x, y + topLeft);\n    ctx.quadraticCurveTo(x, y, x + topLeft, y);\n    ctx.closePath();\n\n    ctx.fill();\n\n    if (options.borderWidth > 0) {\n      ctx.stroke();\n    }\n  }\n\n  /**\n\t * Update x/y animation targets when _active elements are animating too\n\t * @private\n\t */\n  _updateAnimationTarget(options) {\n    const chart = this.chart;\n    const anims = this.$animations;\n    const animX = anims && anims.x;\n    const animY = anims && anims.y;\n    if (animX || animY) {\n      const position = positioners[options.position].call(this, this._active, this._eventPosition);\n      if (!position) {\n        return;\n      }\n      const size = this._size = getTooltipSize(this, options);\n      const positionAndSize = Object.assign({}, position, this._size);\n      const alignment = determineAlignment(chart, options, positionAndSize);\n      const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n      if (animX._to !== point.x || animY._to !== point.y) {\n        this.xAlign = alignment.xAlign;\n        this.yAlign = alignment.yAlign;\n        this.width = size.width;\n        this.height = size.height;\n        this.caretX = position.x;\n        this.caretY = position.y;\n        this._resolveAnimations().update(this, point);\n      }\n    }\n  }\n\n  /**\n   * Determine if the tooltip will draw anything\n   * @returns {boolean} True if the tooltip will render\n   */\n  _willRender() {\n    return !!this.opacity;\n  }\n\n  draw(ctx) {\n    const options = this.options.setContext(this.getContext());\n    let opacity = this.opacity;\n\n    if (!opacity) {\n      return;\n    }\n\n    this._updateAnimationTarget(options);\n\n    const tooltipSize = {\n      width: this.width,\n      height: this.height\n    };\n    const pt = {\n      x: this.x,\n      y: this.y\n    };\n\n    // IE11/Edge does not like very small opacities, so snap to 0\n    opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n\n    const padding = toPadding(options.padding);\n\n    // Truthy/falsey value for empty tooltip\n    const hasTooltipContent = this.title.length || this.beforeBody.length || this.body.length || this.afterBody.length || this.footer.length;\n\n    if (options.enabled && hasTooltipContent) {\n      ctx.save();\n      ctx.globalAlpha = opacity;\n\n      // Draw Background\n      this.drawBackground(pt, ctx, tooltipSize, options);\n\n      overrideTextDirection(ctx, options.textDirection);\n\n      pt.y += padding.top;\n\n      // Titles\n      this.drawTitle(pt, ctx, options);\n\n      // Body\n      this.drawBody(pt, ctx, options);\n\n      // Footer\n      this.drawFooter(pt, ctx, options);\n\n      restoreTextDirection(ctx, options.textDirection);\n\n      ctx.restore();\n    }\n  }\n\n  /**\n\t * Get active elements in the tooltip\n\t * @returns {Array} Array of elements that are active in the tooltip\n\t */\n  getActiveElements() {\n    return this._active || [];\n  }\n\n  /**\n\t * Set active elements in the tooltip\n\t * @param {array} activeElements Array of active datasetIndex/index pairs.\n\t * @param {object} eventPosition Synthetic event position used in positioning\n\t */\n  setActiveElements(activeElements, eventPosition) {\n    const lastActive = this._active;\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = this.chart.getDatasetMeta(datasetIndex);\n\n      if (!meta) {\n        throw new Error('Cannot find a dataset at index ' + datasetIndex);\n      }\n\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(lastActive, active);\n    const positionChanged = this._positionChanged(active, eventPosition);\n\n    if (changed || positionChanged) {\n      this._active = active;\n      this._eventPosition = eventPosition;\n      this._ignoreReplayEvents = true;\n      this.update(true);\n    }\n  }\n\n  /**\n\t * Handle an event\n\t * @param {ChartEvent} e - The event to handle\n\t * @param {boolean} [replay] - This is a replayed event (from update)\n\t * @param {boolean} [inChartArea] - The event is inside chartArea\n\t * @returns {boolean} true if the tooltip changed\n\t */\n  handleEvent(e, replay, inChartArea = true) {\n    if (replay && this._ignoreReplayEvents) {\n      return false;\n    }\n    this._ignoreReplayEvents = false;\n\n    const options = this.options;\n    const lastActive = this._active || [];\n    const active = this._getActiveElements(e, lastActive, replay, inChartArea);\n\n    // When there are multiple items shown, but the tooltip position is nearest mode\n    // an update may need to be made because our position may have changed even though\n    // the items are the same as before.\n    const positionChanged = this._positionChanged(active, e);\n\n    // Remember Last Actives\n    const changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\n\n    // Only handle target event on tooltip change\n    if (changed) {\n      this._active = active;\n\n      if (options.enabled || options.external) {\n        this._eventPosition = {\n          x: e.x,\n          y: e.y\n        };\n\n        this.update(true, replay);\n      }\n    }\n\n    return changed;\n  }\n\n  /**\n\t * Helper for determining the active elements for event\n\t * @param {ChartEvent} e - The event to handle\n\t * @param {InteractionItem[]} lastActive - Previously active elements\n\t * @param {boolean} [replay] - This is a replayed event (from update)\n\t * @param {boolean} [inChartArea] - The event is inside chartArea\n\t * @returns {InteractionItem[]} - Active elements\n\t * @private\n\t */\n  _getActiveElements(e, lastActive, replay, inChartArea) {\n    const options = this.options;\n\n    if (e.type === 'mouseout') {\n      return [];\n    }\n\n    if (!inChartArea) {\n      // Let user control the active elements outside chartArea. Eg. using Legend.\n      // But make sure that active elements are still valid.\n      return lastActive.filter(i =>\n        this.chart.data.datasets[i.datasetIndex] &&\n        this.chart.getDatasetMeta(i.datasetIndex).controller.getParsed(i.index) !== undefined\n      );\n    }\n\n    // Find Active Elements for tooltips\n    const active = this.chart.getElementsAtEventForMode(e, options.mode, options, replay);\n\n    if (options.reverse) {\n      active.reverse();\n    }\n\n    return active;\n  }\n\n  /**\n\t * Determine if the active elements + event combination changes the\n\t * tooltip position\n\t * @param {array} active - Active elements\n\t * @param {ChartEvent} e - Event that triggered the position change\n\t * @returns {boolean} True if the position has changed\n\t */\n  _positionChanged(active, e) {\n    const {caretX, caretY, options} = this;\n    const position = positioners[options.position].call(this, active, e);\n    return position !== false && (caretX !== position.x || caretY !== position.y);\n  }\n}\n\nexport default {\n  id: 'tooltip',\n  _element: Tooltip,\n  positioners,\n\n  afterInit(chart, _args, options) {\n    if (options) {\n      chart.tooltip = new Tooltip({chart, options});\n    }\n  },\n\n  beforeUpdate(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n\n  reset(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n\n  afterDraw(chart) {\n    const tooltip = chart.tooltip;\n\n    if (tooltip && tooltip._willRender()) {\n      const args = {\n        tooltip\n      };\n\n      if (chart.notifyPlugins('beforeTooltipDraw', {...args, cancelable: true}) === false) {\n        return;\n      }\n\n      tooltip.draw(chart.ctx);\n\n      chart.notifyPlugins('afterTooltipDraw', args);\n    }\n  },\n\n  afterEvent(chart, args) {\n    if (chart.tooltip) {\n      // If the event is replayed from `update`, we should evaluate with the final positions.\n      const useFinalPosition = args.replay;\n      if (chart.tooltip.handleEvent(args.event, useFinalPosition, args.inChartArea)) {\n        // notify chart about the change, so it will render\n        args.changed = true;\n      }\n    }\n  },\n\n  defaults: {\n    enabled: true,\n    external: null,\n    position: 'average',\n    backgroundColor: 'rgba(0,0,0,0.8)',\n    titleColor: '#fff',\n    titleFont: {\n      weight: 'bold',\n    },\n    titleSpacing: 2,\n    titleMarginBottom: 6,\n    titleAlign: 'left',\n    bodyColor: '#fff',\n    bodySpacing: 2,\n    bodyFont: {\n    },\n    bodyAlign: 'left',\n    footerColor: '#fff',\n    footerSpacing: 2,\n    footerMarginTop: 6,\n    footerFont: {\n      weight: 'bold',\n    },\n    footerAlign: 'left',\n    padding: 6,\n    caretPadding: 2,\n    caretSize: 5,\n    cornerRadius: 6,\n    boxHeight: (ctx, opts) => opts.bodyFont.size,\n    boxWidth: (ctx, opts) => opts.bodyFont.size,\n    multiKeyBackground: '#fff',\n    displayColors: true,\n    boxPadding: 0,\n    borderColor: 'rgba(0,0,0,0)',\n    borderWidth: 0,\n    animation: {\n      duration: 400,\n      easing: 'easeOutQuart',\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'width', 'height', 'caretX', 'caretY'],\n      },\n      opacity: {\n        easing: 'linear',\n        duration: 200\n      }\n    },\n    callbacks: defaultCallbacks\n  },\n\n  defaultRoutes: {\n    bodyFont: 'font',\n    footerFont: 'font',\n    titleFont: 'font'\n  },\n\n  descriptors: {\n    _scriptable: (name) => name !== 'filter' && name !== 'itemSort' && name !== 'external',\n    _indexable: false,\n    callbacks: {\n      _scriptable: false,\n      _indexable: false,\n    },\n    animation: {\n      _fallback: false\n    },\n    animations: {\n      _fallback: 'animation'\n    }\n  },\n\n  // Resolve additionally from `interaction` options and defaults.\n  additionalOptionScopes: ['interaction']\n};\n","import Scale from '../core/core.scale.js';\nimport {isNullOrUndef, valueOrDefault, _limitValue} from '../helpers/index.js';\n\nconst addIfString = (labels, raw, index, addedLabels) => {\n  if (typeof raw === 'string') {\n    index = labels.push(raw) - 1;\n    addedLabels.unshift({index, label: raw});\n  } else if (isNaN(raw)) {\n    index = null;\n  }\n  return index;\n};\n\nfunction findOrAddLabel(labels, raw, index, addedLabels) {\n  const first = labels.indexOf(raw);\n  if (first === -1) {\n    return addIfString(labels, raw, index, addedLabels);\n  }\n  const last = labels.lastIndexOf(raw);\n  return first !== last ? index : first;\n}\n\nconst validIndex = (index, max) => index === null ? null : _limitValue(Math.round(index), 0, max);\n\nfunction _getLabelForValue(value) {\n  const labels = this.getLabels();\n\n  if (value >= 0 && value < labels.length) {\n    return labels[value];\n  }\n  return value;\n}\n\nexport default class CategoryScale extends Scale {\n\n  static id = 'category';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    ticks: {\n      callback: _getLabelForValue\n    }\n  };\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this._startValue = undefined;\n    this._valueRange = 0;\n    this._addedLabels = [];\n  }\n\n  init(scaleOptions) {\n    const added = this._addedLabels;\n    if (added.length) {\n      const labels = this.getLabels();\n      for (const {index, label} of added) {\n        if (labels[index] === label) {\n          labels.splice(index, 1);\n        }\n      }\n      this._addedLabels = [];\n    }\n    super.init(scaleOptions);\n  }\n\n  parse(raw, index) {\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    const labels = this.getLabels();\n    index = isFinite(index) && labels[index] === raw ? index\n      : findOrAddLabel(labels, raw, valueOrDefault(index, raw), this._addedLabels);\n    return validIndex(index, labels.length - 1);\n  }\n\n  determineDataLimits() {\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let {min, max} = this.getMinMax(true);\n\n    if (this.options.bounds === 'ticks') {\n      if (!minDefined) {\n        min = 0;\n      }\n      if (!maxDefined) {\n        max = this.getLabels().length - 1;\n      }\n    }\n\n    this.min = min;\n    this.max = max;\n  }\n\n  buildTicks() {\n    const min = this.min;\n    const max = this.max;\n    const offset = this.options.offset;\n    const ticks = [];\n    let labels = this.getLabels();\n\n    // If we are viewing some subset of labels, slice the original array\n    labels = (min === 0 && max === labels.length - 1) ? labels : labels.slice(min, max + 1);\n\n    this._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n    this._startValue = this.min - (offset ? 0.5 : 0);\n\n    for (let value = min; value <= max; value++) {\n      ticks.push({value});\n    }\n    return ticks;\n  }\n\n  getLabelForValue(value) {\n    return _getLabelForValue.call(this, value);\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    super.configure();\n\n    if (!this.isHorizontal()) {\n      // For backward compatibility, vertical category scale reverse is inverted.\n      this._reversePixels = !this._reversePixels;\n    }\n  }\n\n  // Used to get data value locations. Value can either be an index or a numerical value\n  getPixelForValue(value) {\n    if (typeof value !== 'number') {\n      value = this.parse(value);\n    }\n\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n\n  // Must override base implementation because it calls getPixelForValue\n  // and category scale can have duplicate values\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n\n  getValueForPixel(pixel) {\n    return Math.round(this._startValue + this.getDecimalForPixel(pixel) * this._valueRange);\n  }\n\n  getBasePixel() {\n    return this.bottom;\n  }\n}\n","import {isNullOrUndef} from '../helpers/helpers.core.js';\nimport {almostEquals, almostWhole, niceNum, _decimalPlaces, _setMinAndMaxByKey, sign, toRadians} from '../helpers/helpers.math.js';\nimport Scale from '../core/core.scale.js';\nimport {formatNumber} from '../helpers/helpers.intl.js';\n\n/**\n * Generate a set of linear ticks for an axis\n * 1. If generationOptions.min, generationOptions.max, and generationOptions.step are defined:\n *    if (max - min) / step is an integer, ticks are generated as [min, min + step, ..., max]\n *    Note that the generationOptions.maxCount setting is respected in this scenario\n *\n * 2. If generationOptions.min, generationOptions.max, and generationOptions.count is defined\n *    spacing = (max - min) / count\n *    Ticks are generated as [min, min + spacing, ..., max]\n *\n * 3. If generationOptions.count is defined\n *    spacing = (niceMax - niceMin) / count\n *\n * 4. Compute optimal spacing of ticks using niceNum algorithm\n *\n * @param generationOptions the options used to generate the ticks\n * @param dataRange the range of the data\n * @returns {object[]} array of tick objects\n */\nfunction generateTicks(generationOptions, dataRange) {\n  const ticks = [];\n  // To get a \"nice\" value for the tick spacing, we will use the appropriately named\n  // \"nice number\" algorithm. See https://stackoverflow.com/questions/8506881/nice-label-algorithm-for-charts-with-minimum-ticks\n  // for details.\n\n  const MIN_SPACING = 1e-14;\n  const {bounds, step, min, max, precision, count, maxTicks, maxDigits, includeBounds} = generationOptions;\n  const unit = step || 1;\n  const maxSpaces = maxTicks - 1;\n  const {min: rmin, max: rmax} = dataRange;\n  const minDefined = !isNullOrUndef(min);\n  const maxDefined = !isNullOrUndef(max);\n  const countDefined = !isNullOrUndef(count);\n  const minSpacing = (rmax - rmin) / (maxDigits + 1);\n  let spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n  let factor, niceMin, niceMax, numSpaces;\n\n  // Beyond MIN_SPACING floating point numbers being to lose precision\n  // such that we can't do the math necessary to generate ticks\n  if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n    return [{value: rmin}, {value: rmax}];\n  }\n\n  numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n  if (numSpaces > maxSpaces) {\n    // If the calculated num of spaces exceeds maxNumSpaces, recalculate it\n    spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n  }\n\n  if (!isNullOrUndef(precision)) {\n    // If the user specified a precision, round to that number of decimal places\n    factor = Math.pow(10, precision);\n    spacing = Math.ceil(spacing * factor) / factor;\n  }\n\n  if (bounds === 'ticks') {\n    niceMin = Math.floor(rmin / spacing) * spacing;\n    niceMax = Math.ceil(rmax / spacing) * spacing;\n  } else {\n    niceMin = rmin;\n    niceMax = rmax;\n  }\n\n  if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\n    // Case 1: If min, max and stepSize are set and they make an evenly spaced scale use it.\n    // spacing = step;\n    // numSpaces = (max - min) / spacing;\n    // Note that we round here to handle the case where almostWhole translated an FP error\n    numSpaces = Math.round(Math.min((max - min) / spacing, maxTicks));\n    spacing = (max - min) / numSpaces;\n    niceMin = min;\n    niceMax = max;\n  } else if (countDefined) {\n    // Cases 2 & 3, we have a count specified. Handle optional user defined edges to the range.\n    // Sometimes these are no-ops, but it makes the code a lot clearer\n    // and when a user defined range is specified, we want the correct ticks\n    niceMin = minDefined ? min : niceMin;\n    niceMax = maxDefined ? max : niceMax;\n    numSpaces = count - 1;\n    spacing = (niceMax - niceMin) / numSpaces;\n  } else {\n    // Case 4\n    numSpaces = (niceMax - niceMin) / spacing;\n\n    // If very close to our rounded value, use it.\n    if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n      numSpaces = Math.round(numSpaces);\n    } else {\n      numSpaces = Math.ceil(numSpaces);\n    }\n  }\n\n  // The spacing will have changed in cases 1, 2, and 3 so the factor cannot be computed\n  // until this point\n  const decimalPlaces = Math.max(\n    _decimalPlaces(spacing),\n    _decimalPlaces(niceMin)\n  );\n  factor = Math.pow(10, isNullOrUndef(precision) ? decimalPlaces : precision);\n  niceMin = Math.round(niceMin * factor) / factor;\n  niceMax = Math.round(niceMax * factor) / factor;\n\n  let j = 0;\n  if (minDefined) {\n    if (includeBounds && niceMin !== min) {\n      ticks.push({value: min});\n\n      if (niceMin < min) {\n        j++; // Skip niceMin\n      }\n      // If the next nice tick is close to min, skip it\n      if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\n        j++;\n      }\n    } else if (niceMin < min) {\n      j++;\n    }\n  }\n\n  for (; j < numSpaces; ++j) {\n    const tickValue = Math.round((niceMin + j * spacing) * factor) / factor;\n    if (maxDefined && tickValue > max) {\n      break;\n    }\n    ticks.push({value: tickValue});\n  }\n\n  if (maxDefined && includeBounds && niceMax !== max) {\n    // If the previous tick is too close to max, replace it with max, else add max\n    if (ticks.length && almostEquals(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\n      ticks[ticks.length - 1].value = max;\n    } else {\n      ticks.push({value: max});\n    }\n  } else if (!maxDefined || niceMax === max) {\n    ticks.push({value: niceMax});\n  }\n\n  return ticks;\n}\n\nfunction relativeLabelSize(value, minSpacing, {horizontal, minRotation}) {\n  const rad = toRadians(minRotation);\n  const ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\n  const length = 0.75 * minSpacing * ('' + value).length;\n  return Math.min(minSpacing / ratio, length);\n}\n\nexport default class LinearScaleBase extends Scale {\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this.start = undefined;\n    /** @type {number} */\n    this.end = undefined;\n    /** @type {number} */\n    this._startValue = undefined;\n    /** @type {number} */\n    this._endValue = undefined;\n    this._valueRange = 0;\n  }\n\n  parse(raw, index) { // eslint-disable-line no-unused-vars\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n      return null;\n    }\n\n    return +raw;\n  }\n\n  handleTickRangeOptions() {\n    const {beginAtZero} = this.options;\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let {min, max} = this;\n\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n\n    if (beginAtZero) {\n      const minSign = sign(min);\n      const maxSign = sign(max);\n\n      if (minSign < 0 && maxSign < 0) {\n        setMax(0);\n      } else if (minSign > 0 && maxSign > 0) {\n        setMin(0);\n      }\n    }\n\n    if (min === max) {\n      let offset = max === 0 ? 1 : Math.abs(max * 0.05);\n\n      setMax(max + offset);\n\n      if (!beginAtZero) {\n        setMin(min - offset);\n      }\n    }\n    this.min = min;\n    this.max = max;\n  }\n\n  getTickLimit() {\n    const tickOpts = this.options.ticks;\n    // eslint-disable-next-line prefer-const\n    let {maxTicksLimit, stepSize} = tickOpts;\n    let maxTicks;\n\n    if (stepSize) {\n      maxTicks = Math.ceil(this.max / stepSize) - Math.floor(this.min / stepSize) + 1;\n      if (maxTicks > 1000) {\n        console.warn(`scales.${this.id}.ticks.stepSize: ${stepSize} would result generating up to ${maxTicks} ticks. Limiting to 1000.`);\n        maxTicks = 1000;\n      }\n    } else {\n      maxTicks = this.computeTickLimit();\n      maxTicksLimit = maxTicksLimit || 11;\n    }\n\n    if (maxTicksLimit) {\n      maxTicks = Math.min(maxTicksLimit, maxTicks);\n    }\n\n    return maxTicks;\n  }\n\n  /**\n\t * @protected\n\t */\n  computeTickLimit() {\n    return Number.POSITIVE_INFINITY;\n  }\n\n  buildTicks() {\n    const opts = this.options;\n    const tickOpts = opts.ticks;\n\n    // Figure out what the max number of ticks we can support it is based on the size of\n    // the axis area. For now, we say that the minimum tick spacing in pixels must be 40\n    // We also limit the maximum number of ticks to 11 which gives a nice 10 squares on\n    // the graph. Make sure we always have at least 2 ticks\n    let maxTicks = this.getTickLimit();\n    maxTicks = Math.max(2, maxTicks);\n\n    const numericGeneratorOptions = {\n      maxTicks,\n      bounds: opts.bounds,\n      min: opts.min,\n      max: opts.max,\n      precision: tickOpts.precision,\n      step: tickOpts.stepSize,\n      count: tickOpts.count,\n      maxDigits: this._maxDigits(),\n      horizontal: this.isHorizontal(),\n      minRotation: tickOpts.minRotation || 0,\n      includeBounds: tickOpts.includeBounds !== false\n    };\n    const dataRange = this._range || this;\n    const ticks = generateTicks(numericGeneratorOptions, dataRange);\n\n    // At this point, we need to update our max and min given the tick values,\n    // since we probably have expanded the range of the scale\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, this, 'value');\n    }\n\n    if (opts.reverse) {\n      ticks.reverse();\n\n      this.start = this.max;\n      this.end = this.min;\n    } else {\n      this.start = this.min;\n      this.end = this.max;\n    }\n\n    return ticks;\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    const ticks = this.ticks;\n    let start = this.min;\n    let end = this.max;\n\n    super.configure();\n\n    if (this.options.offset && ticks.length) {\n      const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n      start -= offset;\n      end += offset;\n    }\n    this._startValue = start;\n    this._endValue = end;\n    this._valueRange = end - start;\n  }\n\n  getLabelForValue(value) {\n    return formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n  }\n}\n","import {isFinite} from '../helpers/helpers.core.js';\nimport LinearScaleBase from './scale.linearbase.js';\nimport Ticks from '../core/core.ticks.js';\nimport {toRadians} from '../helpers/index.js';\n\nexport default class LinearScale extends LinearScaleBase {\n\n  static id = 'linear';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    ticks: {\n      callback: Ticks.formatters.numeric\n    }\n  };\n\n\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(true);\n\n    this.min = isFinite(min) ? min : 0;\n    this.max = isFinite(max) ? max : 1;\n\n    // Common base implementation to handle min, max, beginAtZero\n    this.handleTickRangeOptions();\n  }\n\n  /**\n\t * Returns the maximum number of ticks based on the scale dimension\n\t * @protected\n \t */\n  computeTickLimit() {\n    const horizontal = this.isHorizontal();\n    const length = horizontal ? this.width : this.height;\n    const minRotation = toRadians(this.options.ticks.minRotation);\n    const ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\n    const tickFont = this._resolveTickFontOptions(0);\n    return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\n  }\n\n  // Utils\n  getPixelForValue(value) {\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n\n  getValueForPixel(pixel) {\n    return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n  }\n}\n","import {finiteOrDefault, isFinite} from '../helpers/helpers.core.js';\nimport {formatNumber} from '../helpers/helpers.intl.js';\nimport {_setMinAndMaxByKey, log10} from '../helpers/helpers.math.js';\nimport Scale from '../core/core.scale.js';\nimport LinearScaleBase from './scale.linearbase.js';\nimport Ticks from '../core/core.ticks.js';\n\nconst log10Floor = v => Math.floor(log10(v));\nconst changeExponent = (v, m) => Math.pow(10, log10Floor(v) + m);\n\nfunction isMajor(tickVal) {\n  const remain = tickVal / (Math.pow(10, log10Floor(tickVal)));\n  return remain === 1;\n}\n\nfunction steps(min, max, rangeExp) {\n  const rangeStep = Math.pow(10, rangeExp);\n  const start = Math.floor(min / rangeStep);\n  const end = Math.ceil(max / rangeStep);\n  return end - start;\n}\n\nfunction startExp(min, max) {\n  const range = max - min;\n  let rangeExp = log10Floor(range);\n  while (steps(min, max, rangeExp) > 10) {\n    rangeExp++;\n  }\n  while (steps(min, max, rangeExp) < 10) {\n    rangeExp--;\n  }\n  return Math.min(rangeExp, log10Floor(min));\n}\n\n\n/**\n * Generate a set of logarithmic ticks\n * @param generationOptions the options used to generate the ticks\n * @param dataRange the range of the data\n * @returns {object[]} array of tick objects\n */\nfunction generateTicks(generationOptions, {min, max}) {\n  min = finiteOrDefault(generationOptions.min, min);\n  const ticks = [];\n  const minExp = log10Floor(min);\n  let exp = startExp(min, max);\n  let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n  const stepSize = Math.pow(10, exp);\n  const base = minExp > exp ? Math.pow(10, minExp) : 0;\n  const start = Math.round((min - base) * precision) / precision;\n  const offset = Math.floor((min - base) / stepSize / 10) * stepSize * 10;\n  let significand = Math.floor((start - offset) / Math.pow(10, exp));\n  let value = finiteOrDefault(generationOptions.min, Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision);\n  while (value < max) {\n    ticks.push({value, major: isMajor(value), significand});\n    if (significand >= 10) {\n      significand = significand < 15 ? 15 : 20;\n    } else {\n      significand++;\n    }\n    if (significand >= 20) {\n      exp++;\n      significand = 2;\n      precision = exp >= 0 ? 1 : precision;\n    }\n    value = Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision;\n  }\n  const lastTick = finiteOrDefault(generationOptions.max, value);\n  ticks.push({value: lastTick, major: isMajor(lastTick), significand});\n\n  return ticks;\n}\n\nexport default class LogarithmicScale extends Scale {\n\n  static id = 'logarithmic';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    ticks: {\n      callback: Ticks.formatters.logarithmic,\n      major: {\n        enabled: true\n      }\n    }\n  };\n\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this.start = undefined;\n    /** @type {number} */\n    this.end = undefined;\n    /** @type {number} */\n    this._startValue = undefined;\n    this._valueRange = 0;\n  }\n\n  parse(raw, index) {\n    const value = LinearScaleBase.prototype.parse.apply(this, [raw, index]);\n    if (value === 0) {\n      this._zero = true;\n      return undefined;\n    }\n    return isFinite(value) && value > 0 ? value : null;\n  }\n\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(true);\n\n    this.min = isFinite(min) ? Math.max(0, min) : null;\n    this.max = isFinite(max) ? Math.max(0, max) : null;\n\n    if (this.options.beginAtZero) {\n      this._zero = true;\n    }\n\n    // if data has `0` in it or `beginAtZero` is true, min (non zero) value is at bottom\n    // of scale, and it does not equal suggestedMin, lower the min bound by one exp.\n    if (this._zero && this.min !== this._suggestedMin && !isFinite(this._userMin)) {\n      this.min = min === changeExponent(this.min, 0) ? changeExponent(this.min, -1) : changeExponent(this.min, 0);\n    }\n\n    this.handleTickRangeOptions();\n  }\n\n  handleTickRangeOptions() {\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let min = this.min;\n    let max = this.max;\n\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n\n    if (min === max) {\n      if (min <= 0) { // includes null\n        setMin(1);\n        setMax(10);\n      } else {\n        setMin(changeExponent(min, -1));\n        setMax(changeExponent(max, +1));\n      }\n    }\n    if (min <= 0) {\n      setMin(changeExponent(max, -1));\n    }\n    if (max <= 0) {\n\n      setMax(changeExponent(min, +1));\n    }\n\n    this.min = min;\n    this.max = max;\n  }\n\n  buildTicks() {\n    const opts = this.options;\n\n    const generationOptions = {\n      min: this._userMin,\n      max: this._userMax\n    };\n    const ticks = generateTicks(generationOptions, this);\n\n    // At this point, we need to update our max and min given the tick values,\n    // since we probably have expanded the range of the scale\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, this, 'value');\n    }\n\n    if (opts.reverse) {\n      ticks.reverse();\n\n      this.start = this.max;\n      this.end = this.min;\n    } else {\n      this.start = this.min;\n      this.end = this.max;\n    }\n\n    return ticks;\n  }\n\n  /**\n\t * @param {number} value\n\t * @return {string}\n\t */\n  getLabelForValue(value) {\n    return value === undefined\n      ? '0'\n      : formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    const start = this.min;\n\n    super.configure();\n\n    this._startValue = log10(start);\n    this._valueRange = log10(this.max) - log10(start);\n  }\n\n  getPixelForValue(value) {\n    if (value === undefined || value === 0) {\n      value = this.min;\n    }\n    if (value === null || isNaN(value)) {\n      return NaN;\n    }\n    return this.getPixelForDecimal(value === this.min\n      ? 0\n      : (log10(value) - this._startValue) / this._valueRange);\n  }\n\n  getValueForPixel(pixel) {\n    const decimal = this.getDecimalForPixel(pixel);\n    return Math.pow(10, this._startValue + decimal * this._valueRange);\n  }\n}\n","import defaults from '../core/core.defaults.js';\nimport {_longestText, addRoundedRectPath, renderText, _isPointInArea} from '../helpers/helpers.canvas.js';\nimport {HALF_PI, TAU, toDegrees, toRadians, _normalizeAngle, PI} from '../helpers/helpers.math.js';\nimport LinearScaleBase from './scale.linearbase.js';\nimport Ticks from '../core/core.ticks.js';\nimport {valueOrDefault, isArray, isFinite, callback as callCallback, isNullOrUndef} from '../helpers/helpers.core.js';\nimport {createContext, toFont, toPadding, toTRBLCorners} from '../helpers/helpers.options.js';\n\nfunction getTickBackdropHeight(opts) {\n  const tickOpts = opts.ticks;\n\n  if (tickOpts.display && opts.display) {\n    const padding = toPadding(tickOpts.backdropPadding);\n    return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\n  }\n  return 0;\n}\n\nfunction measureLabelSize(ctx, font, label) {\n  label = isArray(label) ? label : [label];\n  return {\n    w: _longestText(ctx, font.string, label),\n    h: label.length * font.lineHeight\n  };\n}\n\nfunction determineLimits(angle, pos, size, min, max) {\n  if (angle === min || angle === max) {\n    return {\n      start: pos - (size / 2),\n      end: pos + (size / 2)\n    };\n  } else if (angle < min || angle > max) {\n    return {\n      start: pos - size,\n      end: pos\n    };\n  }\n\n  return {\n    start: pos,\n    end: pos + size\n  };\n}\n\n/**\n * Helper function to fit a radial linear scale with point labels\n */\nfunction fitWithPointLabels(scale) {\n\n  // Right, this is really confusing and there is a lot of maths going on here\n  // The gist of the problem is here: https://gist.github.com/nnnick/696cc9c55f4b0beb8fe9\n  //\n  // Reaction: https://dl.dropboxusercontent.com/u/34601363/toomuchscience.gif\n  //\n  // Solution:\n  //\n  // We assume the radius of the polygon is half the size of the canvas at first\n  // at each index we check if the text overlaps.\n  //\n  // Where it does, we store that angle and that index.\n  //\n  // After finding the largest index and angle we calculate how much we need to remove\n  // from the shape radius to move the point inwards by that x.\n  //\n  // We average the left and right distances to get the maximum shape radius that can fit in the box\n  // along with labels.\n  //\n  // Once we have that, we can find the centre point for the chart, by taking the x text protrusion\n  // on each side, removing that from the size, halving it and adding the left x protrusion width.\n  //\n  // This will mean we have a shape fitted to the canvas, as large as it can be with the labels\n  // and position it in the most space efficient manner\n  //\n  // https://dl.dropboxusercontent.com/u/34601363/yeahscience.gif\n\n  // Get maximum radius of the polygon. Either half the height (minus the text width) or half the width.\n  // Use this to calculate the offset + change. - Make sure L/R protrusion is at least 0 to stop issues with centre points\n  const orig = {\n    l: scale.left + scale._padding.left,\n    r: scale.right - scale._padding.right,\n    t: scale.top + scale._padding.top,\n    b: scale.bottom - scale._padding.bottom\n  };\n  const limits = Object.assign({}, orig);\n  const labelSizes = [];\n  const padding = [];\n  const valueCount = scale._pointLabels.length;\n  const pointLabelOpts = scale.options.pointLabels;\n  const additionalAngle = pointLabelOpts.centerPointLabels ? PI / valueCount : 0;\n\n  for (let i = 0; i < valueCount; i++) {\n    const opts = pointLabelOpts.setContext(scale.getPointLabelContext(i));\n    padding[i] = opts.padding;\n    const pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i], additionalAngle);\n    const plFont = toFont(opts.font);\n    const textSize = measureLabelSize(scale.ctx, plFont, scale._pointLabels[i]);\n    labelSizes[i] = textSize;\n\n    const angleRadians = _normalizeAngle(scale.getIndexAngle(i) + additionalAngle);\n    const angle = Math.round(toDegrees(angleRadians));\n    const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n    const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n    updateLimits(limits, orig, angleRadians, hLimits, vLimits);\n  }\n\n  scale.setCenterPoint(\n    orig.l - limits.l,\n    limits.r - orig.r,\n    orig.t - limits.t,\n    limits.b - orig.b\n  );\n\n  // Now that text size is determined, compute the full positions\n  scale._pointLabelItems = buildPointLabelItems(scale, labelSizes, padding);\n}\n\nfunction updateLimits(limits, orig, angle, hLimits, vLimits) {\n  const sin = Math.abs(Math.sin(angle));\n  const cos = Math.abs(Math.cos(angle));\n  let x = 0;\n  let y = 0;\n  if (hLimits.start < orig.l) {\n    x = (orig.l - hLimits.start) / sin;\n    limits.l = Math.min(limits.l, orig.l - x);\n  } else if (hLimits.end > orig.r) {\n    x = (hLimits.end - orig.r) / sin;\n    limits.r = Math.max(limits.r, orig.r + x);\n  }\n  if (vLimits.start < orig.t) {\n    y = (orig.t - vLimits.start) / cos;\n    limits.t = Math.min(limits.t, orig.t - y);\n  } else if (vLimits.end > orig.b) {\n    y = (vLimits.end - orig.b) / cos;\n    limits.b = Math.max(limits.b, orig.b + y);\n  }\n}\n\nfunction createPointLabelItem(scale, index, itemOpts) {\n  const outerDistance = scale.drawingArea;\n  const {extra, additionalAngle, padding, size} = itemOpts;\n  const pointLabelPosition = scale.getPointPosition(index, outerDistance + extra + padding, additionalAngle);\n  const angle = Math.round(toDegrees(_normalizeAngle(pointLabelPosition.angle + HALF_PI)));\n  const y = yForAngle(pointLabelPosition.y, size.h, angle);\n  const textAlign = getTextAlignForAngle(angle);\n  const left = leftForTextAlign(pointLabelPosition.x, size.w, textAlign);\n  return {\n    // if to draw or overlapped\n    visible: true,\n\n    // Text position\n    x: pointLabelPosition.x,\n    y,\n\n    // Text rendering data\n    textAlign,\n\n    // Bounding box\n    left,\n    top: y,\n    right: left + size.w,\n    bottom: y + size.h\n  };\n}\n\nfunction isNotOverlapped(item, area) {\n  if (!area) {\n    return true;\n  }\n  const {left, top, right, bottom} = item;\n  const apexesInArea = _isPointInArea({x: left, y: top}, area) || _isPointInArea({x: left, y: bottom}, area) ||\n    _isPointInArea({x: right, y: top}, area) || _isPointInArea({x: right, y: bottom}, area);\n  return !apexesInArea;\n}\n\nfunction buildPointLabelItems(scale, labelSizes, padding) {\n  const items = [];\n  const valueCount = scale._pointLabels.length;\n  const opts = scale.options;\n  const {centerPointLabels, display} = opts.pointLabels;\n  const itemOpts = {\n    extra: getTickBackdropHeight(opts) / 2,\n    additionalAngle: centerPointLabels ? PI / valueCount : 0\n  };\n  let area;\n\n  for (let i = 0; i < valueCount; i++) {\n    itemOpts.padding = padding[i];\n    itemOpts.size = labelSizes[i];\n\n    const item = createPointLabelItem(scale, i, itemOpts);\n    items.push(item);\n    if (display === 'auto') {\n      item.visible = isNotOverlapped(item, area);\n      if (item.visible) {\n        area = item;\n      }\n    }\n  }\n  return items;\n}\n\nfunction getTextAlignForAngle(angle) {\n  if (angle === 0 || angle === 180) {\n    return 'center';\n  } else if (angle < 180) {\n    return 'left';\n  }\n\n  return 'right';\n}\n\nfunction leftForTextAlign(x, w, align) {\n  if (align === 'right') {\n    x -= w;\n  } else if (align === 'center') {\n    x -= (w / 2);\n  }\n  return x;\n}\n\nfunction yForAngle(y, h, angle) {\n  if (angle === 90 || angle === 270) {\n    y -= (h / 2);\n  } else if (angle > 270 || angle < 90) {\n    y -= h;\n  }\n  return y;\n}\n\nfunction drawPointLabelBox(ctx, opts, item) {\n  const {left, top, right, bottom} = item;\n  const {backdropColor} = opts;\n\n  if (!isNullOrUndef(backdropColor)) {\n    const borderRadius = toTRBLCorners(opts.borderRadius);\n    const padding = toPadding(opts.backdropPadding);\n    ctx.fillStyle = backdropColor;\n\n    const backdropLeft = left - padding.left;\n    const backdropTop = top - padding.top;\n    const backdropWidth = right - left + padding.width;\n    const backdropHeight = bottom - top + padding.height;\n\n    if (Object.values(borderRadius).some(v => v !== 0)) {\n      ctx.beginPath();\n      addRoundedRectPath(ctx, {\n        x: backdropLeft,\n        y: backdropTop,\n        w: backdropWidth,\n        h: backdropHeight,\n        radius: borderRadius,\n      });\n      ctx.fill();\n    } else {\n      ctx.fillRect(backdropLeft, backdropTop, backdropWidth, backdropHeight);\n    }\n  }\n}\n\nfunction drawPointLabels(scale, labelCount) {\n  const {ctx, options: {pointLabels}} = scale;\n\n  for (let i = labelCount - 1; i >= 0; i--) {\n    const item = scale._pointLabelItems[i];\n    if (!item.visible) {\n      // overlapping\n      continue;\n    }\n    const optsAtIndex = pointLabels.setContext(scale.getPointLabelContext(i));\n    drawPointLabelBox(ctx, optsAtIndex, item);\n    const plFont = toFont(optsAtIndex.font);\n    const {x, y, textAlign} = item;\n\n    renderText(\n      ctx,\n      scale._pointLabels[i],\n      x,\n      y + (plFont.lineHeight / 2),\n      plFont,\n      {\n        color: optsAtIndex.color,\n        textAlign: textAlign,\n        textBaseline: 'middle'\n      }\n    );\n  }\n}\n\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n  const {ctx} = scale;\n  if (circular) {\n    // Draw circular arcs between the points\n    ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\n  } else {\n    // Draw straight lines connecting each index\n    let pointPosition = scale.getPointPosition(0, radius);\n    ctx.moveTo(pointPosition.x, pointPosition.y);\n\n    for (let i = 1; i < labelCount; i++) {\n      pointPosition = scale.getPointPosition(i, radius);\n      ctx.lineTo(pointPosition.x, pointPosition.y);\n    }\n  }\n}\n\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount, borderOpts) {\n  const ctx = scale.ctx;\n  const circular = gridLineOpts.circular;\n\n  const {color, lineWidth} = gridLineOpts;\n\n  if ((!circular && !labelCount) || !color || !lineWidth || radius < 0) {\n    return;\n  }\n\n  ctx.save();\n  ctx.strokeStyle = color;\n  ctx.lineWidth = lineWidth;\n  ctx.setLineDash(borderOpts.dash);\n  ctx.lineDashOffset = borderOpts.dashOffset;\n\n  ctx.beginPath();\n  pathRadiusLine(scale, radius, circular, labelCount);\n  ctx.closePath();\n  ctx.stroke();\n  ctx.restore();\n}\n\nfunction createPointLabelContext(parent, index, label) {\n  return createContext(parent, {\n    label,\n    index,\n    type: 'pointLabel'\n  });\n}\n\nexport default class RadialLinearScale extends LinearScaleBase {\n\n  static id = 'radialLinear';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    display: true,\n\n    // Boolean - Whether to animate scaling the chart from the centre\n    animate: true,\n    position: 'chartArea',\n\n    angleLines: {\n      display: true,\n      lineWidth: 1,\n      borderDash: [],\n      borderDashOffset: 0.0\n    },\n\n    grid: {\n      circular: false\n    },\n\n    startAngle: 0,\n\n    // label settings\n    ticks: {\n      // Boolean - Show a backdrop to the scale label\n      showLabelBackdrop: true,\n\n      callback: Ticks.formatters.numeric\n    },\n\n    pointLabels: {\n      backdropColor: undefined,\n\n      // Number - The backdrop padding above & below the label in pixels\n      backdropPadding: 2,\n\n      // Boolean - if true, show point labels\n      display: true,\n\n      // Number - Point label font size in pixels\n      font: {\n        size: 10\n      },\n\n      // Function - Used to convert point labels\n      callback(label) {\n        return label;\n      },\n\n      // Number - Additionl padding between scale and pointLabel\n      padding: 5,\n\n      // Boolean - if true, center point labels to slices in polar chart\n      centerPointLabels: false\n    }\n  };\n\n  static defaultRoutes = {\n    'angleLines.color': 'borderColor',\n    'pointLabels.color': 'color',\n    'ticks.color': 'color'\n  };\n\n  static descriptors = {\n    angleLines: {\n      _fallback: 'grid'\n    }\n  };\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this.xCenter = undefined;\n    /** @type {number} */\n    this.yCenter = undefined;\n    /** @type {number} */\n    this.drawingArea = undefined;\n    /** @type {string[]} */\n    this._pointLabels = [];\n    this._pointLabelItems = [];\n  }\n\n  setDimensions() {\n    // Set the unconstrained dimension before label rotation\n    const padding = this._padding = toPadding(getTickBackdropHeight(this.options) / 2);\n    const w = this.width = this.maxWidth - padding.width;\n    const h = this.height = this.maxHeight - padding.height;\n    this.xCenter = Math.floor(this.left + w / 2 + padding.left);\n    this.yCenter = Math.floor(this.top + h / 2 + padding.top);\n    this.drawingArea = Math.floor(Math.min(w, h) / 2);\n  }\n\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(false);\n\n    this.min = isFinite(min) && !isNaN(min) ? min : 0;\n    this.max = isFinite(max) && !isNaN(max) ? max : 0;\n\n    // Common base implementation to handle min, max, beginAtZero\n    this.handleTickRangeOptions();\n  }\n\n  /**\n\t * Returns the maximum number of ticks based on the scale dimension\n\t * @protected\n\t */\n  computeTickLimit() {\n    return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n  }\n\n  generateTickLabels(ticks) {\n    LinearScaleBase.prototype.generateTickLabels.call(this, ticks);\n\n    // Point labels\n    this._pointLabels = this.getLabels()\n      .map((value, index) => {\n        const label = callCallback(this.options.pointLabels.callback, [value, index], this);\n        return label || label === 0 ? label : '';\n      })\n      .filter((v, i) => this.chart.getDataVisibility(i));\n  }\n\n  fit() {\n    const opts = this.options;\n\n    if (opts.display && opts.pointLabels.display) {\n      fitWithPointLabels(this);\n    } else {\n      this.setCenterPoint(0, 0, 0, 0);\n    }\n  }\n\n  setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n    this.xCenter += Math.floor((leftMovement - rightMovement) / 2);\n    this.yCenter += Math.floor((topMovement - bottomMovement) / 2);\n    this.drawingArea -= Math.min(this.drawingArea / 2, Math.max(leftMovement, rightMovement, topMovement, bottomMovement));\n  }\n\n  getIndexAngle(index) {\n    const angleMultiplier = TAU / (this._pointLabels.length || 1);\n    const startAngle = this.options.startAngle || 0;\n\n    return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\n  }\n\n  getDistanceFromCenterForValue(value) {\n    if (isNullOrUndef(value)) {\n      return NaN;\n    }\n\n    // Take into account half font size + the yPadding of the top value\n    const scalingFactor = this.drawingArea / (this.max - this.min);\n    if (this.options.reverse) {\n      return (this.max - value) * scalingFactor;\n    }\n    return (value - this.min) * scalingFactor;\n  }\n\n  getValueForDistanceFromCenter(distance) {\n    if (isNullOrUndef(distance)) {\n      return NaN;\n    }\n\n    const scaledDistance = distance / (this.drawingArea / (this.max - this.min));\n    return this.options.reverse ? this.max - scaledDistance : this.min + scaledDistance;\n  }\n\n  getPointLabelContext(index) {\n    const pointLabels = this._pointLabels || [];\n\n    if (index >= 0 && index < pointLabels.length) {\n      const pointLabel = pointLabels[index];\n      return createPointLabelContext(this.getContext(), index, pointLabel);\n    }\n  }\n\n  getPointPosition(index, distanceFromCenter, additionalAngle = 0) {\n    const angle = this.getIndexAngle(index) - HALF_PI + additionalAngle;\n    return {\n      x: Math.cos(angle) * distanceFromCenter + this.xCenter,\n      y: Math.sin(angle) * distanceFromCenter + this.yCenter,\n      angle\n    };\n  }\n\n  getPointPositionForValue(index, value) {\n    return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n  }\n\n  getBasePosition(index) {\n    return this.getPointPositionForValue(index || 0, this.getBaseValue());\n  }\n\n  getPointLabelPosition(index) {\n    const {left, top, right, bottom} = this._pointLabelItems[index];\n    return {\n      left,\n      top,\n      right,\n      bottom,\n    };\n  }\n\n  /**\n\t * @protected\n\t */\n  drawBackground() {\n    const {backgroundColor, grid: {circular}} = this.options;\n    if (backgroundColor) {\n      const ctx = this.ctx;\n      ctx.save();\n      ctx.beginPath();\n      pathRadiusLine(this, this.getDistanceFromCenterForValue(this._endValue), circular, this._pointLabels.length);\n      ctx.closePath();\n      ctx.fillStyle = backgroundColor;\n      ctx.fill();\n      ctx.restore();\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawGrid() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    const {angleLines, grid, border} = opts;\n    const labelCount = this._pointLabels.length;\n\n    let i, offset, position;\n\n    if (opts.pointLabels.display) {\n      drawPointLabels(this, labelCount);\n    }\n\n    if (grid.display) {\n      this.ticks.forEach((tick, index) => {\n        if (index !== 0 || (index === 0 && this.min < 0)) {\n          offset = this.getDistanceFromCenterForValue(tick.value);\n          const context = this.getContext(index);\n          const optsAtIndex = grid.setContext(context);\n          const optsAtIndexBorder = border.setContext(context);\n\n          drawRadiusLine(this, optsAtIndex, offset, labelCount, optsAtIndexBorder);\n        }\n      });\n    }\n\n    if (angleLines.display) {\n      ctx.save();\n\n      for (i = labelCount - 1; i >= 0; i--) {\n        const optsAtIndex = angleLines.setContext(this.getPointLabelContext(i));\n        const {color, lineWidth} = optsAtIndex;\n\n        if (!lineWidth || !color) {\n          continue;\n        }\n\n        ctx.lineWidth = lineWidth;\n        ctx.strokeStyle = color;\n\n        ctx.setLineDash(optsAtIndex.borderDash);\n        ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n\n        offset = this.getDistanceFromCenterForValue(opts.reverse ? this.min : this.max);\n        position = this.getPointPosition(i, offset);\n        ctx.beginPath();\n        ctx.moveTo(this.xCenter, this.yCenter);\n        ctx.lineTo(position.x, position.y);\n        ctx.stroke();\n      }\n\n      ctx.restore();\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawBorder() {}\n\n  /**\n\t * @protected\n\t */\n  drawLabels() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    const tickOpts = opts.ticks;\n\n    if (!tickOpts.display) {\n      return;\n    }\n\n    const startAngle = this.getIndexAngle(0);\n    let offset, width;\n\n    ctx.save();\n    ctx.translate(this.xCenter, this.yCenter);\n    ctx.rotate(startAngle);\n    ctx.textAlign = 'center';\n    ctx.textBaseline = 'middle';\n\n    this.ticks.forEach((tick, index) => {\n      if ((index === 0 && this.min >= 0) && !opts.reverse) {\n        return;\n      }\n\n      const optsAtIndex = tickOpts.setContext(this.getContext(index));\n      const tickFont = toFont(optsAtIndex.font);\n      offset = this.getDistanceFromCenterForValue(this.ticks[index].value);\n\n      if (optsAtIndex.showLabelBackdrop) {\n        ctx.font = tickFont.string;\n        width = ctx.measureText(tick.label).width;\n        ctx.fillStyle = optsAtIndex.backdropColor;\n\n        const padding = toPadding(optsAtIndex.backdropPadding);\n        ctx.fillRect(\n          -width / 2 - padding.left,\n          -offset - tickFont.size / 2 - padding.top,\n          width + padding.width,\n          tickFont.size + padding.height\n        );\n      }\n\n      renderText(ctx, tick.label, 0, -offset, tickFont, {\n        color: optsAtIndex.color,\n        strokeColor: optsAtIndex.textStrokeColor,\n        strokeWidth: optsAtIndex.textStrokeWidth,\n      });\n    });\n\n    ctx.restore();\n  }\n\n  /**\n\t * @protected\n\t */\n  drawTitle() {}\n}\n","import adapters from '../core/core.adapters.js';\nimport {callback as call, isFinite, isNullOrUndef, mergeIf, valueOrDefault} from '../helpers/helpers.core.js';\nimport {toRadians, isNumber, _limitValue} from '../helpers/helpers.math.js';\nimport Scale from '../core/core.scale.js';\nimport {_arrayUnique, _filterBetween, _lookup} from '../helpers/helpers.collection.js';\n\n/**\n * @typedef { import('../core/core.adapters.js').TimeUnit } Unit\n * @typedef {{common: boolean, size: number, steps?: number}} Interval\n * @typedef { import('../core/core.adapters.js').DateAdapter } DateAdapter\n */\n\n/**\n * @type {Object<Unit, Interval>}\n */\nconst INTERVALS = {\n  millisecond: {common: true, size: 1, steps: 1000},\n  second: {common: true, size: 1000, steps: 60},\n  minute: {common: true, size: 60000, steps: 60},\n  hour: {common: true, size: 3600000, steps: 24},\n  day: {common: true, size: 86400000, steps: 30},\n  week: {common: false, size: 604800000, steps: 4},\n  month: {common: true, size: 2.628e9, steps: 12},\n  quarter: {common: false, size: 7.884e9, steps: 4},\n  year: {common: true, size: 3.154e10}\n};\n\n/**\n * @type {Unit[]}\n */\nconst UNITS = /** @type Unit[] */ /* #__PURE__ */ (Object.keys(INTERVALS));\n\n/**\n * @param {number} a\n * @param {number} b\n */\nfunction sorter(a, b) {\n  return a - b;\n}\n\n/**\n * @param {TimeScale} scale\n * @param {*} input\n * @return {number}\n */\nfunction parse(scale, input) {\n  if (isNullOrUndef(input)) {\n    return null;\n  }\n\n  const adapter = scale._adapter;\n  const {parser, round, isoWeekday} = scale._parseOpts;\n  let value = input;\n\n  if (typeof parser === 'function') {\n    value = parser(value);\n  }\n\n  // Only parse if it's not a timestamp already\n  if (!isFinite(value)) {\n    value = typeof parser === 'string'\n      ? adapter.parse(value, /** @type {Unit} */ (parser))\n      : adapter.parse(value);\n  }\n\n  if (value === null) {\n    return null;\n  }\n\n  if (round) {\n    value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true)\n      ? adapter.startOf(value, 'isoWeek', isoWeekday)\n      : adapter.startOf(value, round);\n  }\n\n  return +value;\n}\n\n/**\n * Figures out what unit results in an appropriate number of auto-generated ticks\n * @param {Unit} minUnit\n * @param {number} min\n * @param {number} max\n * @param {number} capacity\n * @return {object}\n */\nfunction determineUnitForAutoTicks(minUnit, min, max, capacity) {\n  const ilen = UNITS.length;\n\n  for (let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\n    const interval = INTERVALS[UNITS[i]];\n    const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n\n    if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n      return UNITS[i];\n    }\n  }\n\n  return UNITS[ilen - 1];\n}\n\n/**\n * Figures out what unit to format a set of ticks with\n * @param {TimeScale} scale\n * @param {number} numTicks\n * @param {Unit} minUnit\n * @param {number} min\n * @param {number} max\n * @return {Unit}\n */\nfunction determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n  for (let i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--) {\n    const unit = UNITS[i];\n    if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n      return unit;\n    }\n  }\n\n  return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\n\n/**\n * @param {Unit} unit\n * @return {object}\n */\nfunction determineMajorUnit(unit) {\n  for (let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\n    if (INTERVALS[UNITS[i]].common) {\n      return UNITS[i];\n    }\n  }\n}\n\n/**\n * @param {object} ticks\n * @param {number} time\n * @param {number[]} [timestamps] - if defined, snap to these timestamps\n */\nfunction addTick(ticks, time, timestamps) {\n  if (!timestamps) {\n    ticks[time] = true;\n  } else if (timestamps.length) {\n    const {lo, hi} = _lookup(timestamps, time);\n    const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n    ticks[timestamp] = true;\n  }\n}\n\n/**\n * @param {TimeScale} scale\n * @param {object[]} ticks\n * @param {object} map\n * @param {Unit} majorUnit\n * @return {object[]}\n */\nfunction setMajorTicks(scale, ticks, map, majorUnit) {\n  const adapter = scale._adapter;\n  const first = +adapter.startOf(ticks[0].value, majorUnit);\n  const last = ticks[ticks.length - 1].value;\n  let major, index;\n\n  for (major = first; major <= last; major = +adapter.add(major, 1, majorUnit)) {\n    index = map[major];\n    if (index >= 0) {\n      ticks[index].major = true;\n    }\n  }\n  return ticks;\n}\n\n/**\n * @param {TimeScale} scale\n * @param {number[]} values\n * @param {Unit|undefined} [majorUnit]\n * @return {object[]}\n */\nfunction ticksFromTimestamps(scale, values, majorUnit) {\n  const ticks = [];\n  /** @type {Object<number,object>} */\n  const map = {};\n  const ilen = values.length;\n  let i, value;\n\n  for (i = 0; i < ilen; ++i) {\n    value = values[i];\n    map[value] = i;\n\n    ticks.push({\n      value,\n      major: false\n    });\n  }\n\n  // We set the major ticks separately from the above loop because calling startOf for every tick\n  // is expensive when there is a large number of ticks\n  return (ilen === 0 || !majorUnit) ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\n\nexport default class TimeScale extends Scale {\n\n  static id = 'time';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    /**\n     * Scale boundary strategy (bypassed by min/max time options)\n     * - `data`: make sure data are fully visible, ticks outside are removed\n     * - `ticks`: make sure ticks are fully visible, data outside are truncated\n     * @see https://github.com/chartjs/Chart.js/pull/4556\n     * @since 2.7.0\n     */\n    bounds: 'data',\n\n    adapters: {},\n    time: {\n      parser: false, // false == a pattern string from or a custom callback that converts its argument to a timestamp\n      unit: false, // false == automatic or override with week, month, year, etc.\n      round: false, // none, or override with week, month, year, etc.\n      isoWeekday: false, // override week start day\n      minUnit: 'millisecond',\n      displayFormats: {}\n    },\n    ticks: {\n      /**\n       * Ticks generation input values:\n       * - 'auto': generates \"optimal\" ticks based on scale size and time options.\n       * - 'data': generates ticks from data (including labels from data {t|x|y} objects).\n       * - 'labels': generates ticks from user given `data.labels` values ONLY.\n       * @see https://github.com/chartjs/Chart.js/pull/4507\n       * @since 2.7.0\n       */\n      source: 'auto',\n\n      callback: false,\n\n      major: {\n        enabled: false\n      }\n    }\n  };\n\n  /**\n\t * @param {object} props\n\t */\n  constructor(props) {\n    super(props);\n\n    /** @type {{data: number[], labels: number[], all: number[]}} */\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n\n    /** @type {Unit} */\n    this._unit = 'day';\n    /** @type {Unit=} */\n    this._majorUnit = undefined;\n    this._offsets = {};\n    this._normalized = false;\n    this._parseOpts = undefined;\n  }\n\n  init(scaleOpts, opts = {}) {\n    const time = scaleOpts.time || (scaleOpts.time = {});\n    /** @type {DateAdapter} */\n    const adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);\n\n    adapter.init(opts);\n\n    // Backward compatibility: before introducing adapter, `displayFormats` was\n    // supposed to contain *all* unit/string pairs but this can't be resolved\n    // when loading the scale (adapters are loaded afterward), so let's populate\n    // missing formats on update\n    mergeIf(time.displayFormats, adapter.formats());\n\n    this._parseOpts = {\n      parser: time.parser,\n      round: time.round,\n      isoWeekday: time.isoWeekday\n    };\n\n    super.init(scaleOpts);\n\n    this._normalized = opts.normalized;\n  }\n\n  /**\n\t * @param {*} raw\n\t * @param {number?} [index]\n\t * @return {number}\n\t */\n  parse(raw, index) { // eslint-disable-line no-unused-vars\n    if (raw === undefined) {\n      return null;\n    }\n    return parse(this, raw);\n  }\n\n  beforeLayout() {\n    super.beforeLayout();\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n  }\n\n  determineDataLimits() {\n    const options = this.options;\n    const adapter = this._adapter;\n    const unit = options.time.unit || 'day';\n    // eslint-disable-next-line prefer-const\n    let {min, max, minDefined, maxDefined} = this.getUserBounds();\n\n    /**\n\t\t * @param {object} bounds\n\t\t */\n    function _applyBounds(bounds) {\n      if (!minDefined && !isNaN(bounds.min)) {\n        min = Math.min(min, bounds.min);\n      }\n      if (!maxDefined && !isNaN(bounds.max)) {\n        max = Math.max(max, bounds.max);\n      }\n    }\n\n    // If we have user provided `min` and `max` labels / data bounds can be ignored\n    if (!minDefined || !maxDefined) {\n      // Labels are always considered, when user did not force bounds\n      _applyBounds(this._getLabelBounds());\n\n      // If `bounds` is `'ticks'` and `ticks.source` is `'labels'`,\n      // data bounds are ignored (and don't need to be determined)\n      if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n        _applyBounds(this.getMinMax(false));\n      }\n    }\n\n    min = isFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n    max = isFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n\n    // Make sure that max is strictly higher than min (required by the timeseries lookup table)\n    this.min = Math.min(min, max - 1);\n    this.max = Math.max(min + 1, max);\n  }\n\n  /**\n\t * @private\n\t */\n  _getLabelBounds() {\n    const arr = this.getLabelTimestamps();\n    let min = Number.POSITIVE_INFINITY;\n    let max = Number.NEGATIVE_INFINITY;\n\n    if (arr.length) {\n      min = arr[0];\n      max = arr[arr.length - 1];\n    }\n    return {min, max};\n  }\n\n  /**\n\t * @return {object[]}\n\t */\n  buildTicks() {\n    const options = this.options;\n    const timeOpts = options.time;\n    const tickOpts = options.ticks;\n    const timestamps = tickOpts.source === 'labels' ? this.getLabelTimestamps() : this._generate();\n\n    if (options.bounds === 'ticks' && timestamps.length) {\n      this.min = this._userMin || timestamps[0];\n      this.max = this._userMax || timestamps[timestamps.length - 1];\n    }\n\n    const min = this.min;\n    const max = this.max;\n\n    const ticks = _filterBetween(timestamps, min, max);\n\n    // PRIVATE\n    // determineUnitForFormatting relies on the number of ticks so we don't use it when\n    // autoSkip is enabled because we don't yet know what the final number of ticks will be\n    this._unit = timeOpts.unit || (tickOpts.autoSkip\n      ? determineUnitForAutoTicks(timeOpts.minUnit, this.min, this.max, this._getLabelCapacity(min))\n      : determineUnitForFormatting(this, ticks.length, timeOpts.minUnit, this.min, this.max));\n    this._majorUnit = !tickOpts.major.enabled || this._unit === 'year' ? undefined\n      : determineMajorUnit(this._unit);\n    this.initOffsets(timestamps);\n\n    if (options.reverse) {\n      ticks.reverse();\n    }\n\n    return ticksFromTimestamps(this, ticks, this._majorUnit);\n  }\n\n  afterAutoSkip() {\n    // Offsets for bar charts need to be handled with the auto skipped\n    // ticks. Once ticks have been skipped, we re-compute the offsets.\n    if (this.options.offsetAfterAutoskip) {\n      this.initOffsets(this.ticks.map(tick => +tick.value));\n    }\n  }\n\n  /**\n\t * Returns the start and end offsets from edges in the form of {start, end}\n\t * where each value is a relative width to the scale and ranges between 0 and 1.\n\t * They add extra margins on the both sides by scaling down the original scale.\n\t * Offsets are added when the `offset` option is true.\n\t * @param {number[]} timestamps\n\t * @protected\n\t */\n  initOffsets(timestamps = []) {\n    let start = 0;\n    let end = 0;\n    let first, last;\n\n    if (this.options.offset && timestamps.length) {\n      first = this.getDecimalForValue(timestamps[0]);\n      if (timestamps.length === 1) {\n        start = 1 - first;\n      } else {\n        start = (this.getDecimalForValue(timestamps[1]) - first) / 2;\n      }\n      last = this.getDecimalForValue(timestamps[timestamps.length - 1]);\n      if (timestamps.length === 1) {\n        end = last;\n      } else {\n        end = (last - this.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n      }\n    }\n    const limit = timestamps.length < 3 ? 0.5 : 0.25;\n    start = _limitValue(start, 0, limit);\n    end = _limitValue(end, 0, limit);\n\n    this._offsets = {start, end, factor: 1 / (start + 1 + end)};\n  }\n\n  /**\n\t * Generates a maximum of `capacity` timestamps between min and max, rounded to the\n\t * `minor` unit using the given scale time `options`.\n\t * Important: this method can return ticks outside the min and max range, it's the\n\t * responsibility of the calling code to clamp values if needed.\n\t * @protected\n\t */\n  _generate() {\n    const adapter = this._adapter;\n    const min = this.min;\n    const max = this.max;\n    const options = this.options;\n    const timeOpts = options.time;\n    // @ts-ignore\n    const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, this._getLabelCapacity(min));\n    const stepSize = valueOrDefault(options.ticks.stepSize, 1);\n    const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n    const hasWeekday = isNumber(weekday) || weekday === true;\n    const ticks = {};\n    let first = min;\n    let time, count;\n\n    // For 'week' unit, handle the first day of week option\n    if (hasWeekday) {\n      first = +adapter.startOf(first, 'isoWeek', weekday);\n    }\n\n    // Align first ticks on unit\n    first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n\n    // Prevent browser from freezing in case user options request millions of milliseconds\n    if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n      throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n    }\n\n    const timestamps = options.ticks.source === 'data' && this.getDataTimestamps();\n    for (time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++) {\n      addTick(ticks, time, timestamps);\n    }\n\n    if (time === max || options.bounds === 'ticks' || count === 1) {\n      addTick(ticks, time, timestamps);\n    }\n\n    // @ts-ignore\n    return Object.keys(ticks).sort(sorter).map(x => +x);\n  }\n\n  /**\n\t * @param {number} value\n\t * @return {string}\n\t */\n  getLabelForValue(value) {\n    const adapter = this._adapter;\n    const timeOpts = this.options.time;\n\n    if (timeOpts.tooltipFormat) {\n      return adapter.format(value, timeOpts.tooltipFormat);\n    }\n    return adapter.format(value, timeOpts.displayFormats.datetime);\n  }\n\n  /**\n\t * @param {number} value\n\t * @param {string|undefined} format\n\t * @return {string}\n\t */\n  format(value, format) {\n    const options = this.options;\n    const formats = options.time.displayFormats;\n    const unit = this._unit;\n    const fmt = format || formats[unit];\n    return this._adapter.format(value, fmt);\n  }\n\n  /**\n\t * Function to format an individual tick mark\n\t * @param {number} time\n\t * @param {number} index\n\t * @param {object[]} ticks\n\t * @param {string|undefined} [format]\n\t * @return {string}\n\t * @private\n\t */\n  _tickFormatFunction(time, index, ticks, format) {\n    const options = this.options;\n    const formatter = options.ticks.callback;\n\n    if (formatter) {\n      return call(formatter, [time, index, ticks], this);\n    }\n\n    const formats = options.time.displayFormats;\n    const unit = this._unit;\n    const majorUnit = this._majorUnit;\n    const minorFormat = unit && formats[unit];\n    const majorFormat = majorUnit && formats[majorUnit];\n    const tick = ticks[index];\n    const major = majorUnit && majorFormat && tick && tick.major;\n\n    return this._adapter.format(time, format || (major ? majorFormat : minorFormat));\n  }\n\n  /**\n\t * @param {object[]} ticks\n\t */\n  generateTickLabels(ticks) {\n    let i, ilen, tick;\n\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      tick.label = this._tickFormatFunction(tick.value, i, ticks);\n    }\n  }\n\n  /**\n\t * @param {number} value - Milliseconds since epoch (1 January 1970 00:00:00 UTC)\n\t * @return {number}\n\t */\n  getDecimalForValue(value) {\n    return value === null ? NaN : (value - this.min) / (this.max - this.min);\n  }\n\n  /**\n\t * @param {number} value - Milliseconds since epoch (1 January 1970 00:00:00 UTC)\n\t * @return {number}\n\t */\n  getPixelForValue(value) {\n    const offsets = this._offsets;\n    const pos = this.getDecimalForValue(value);\n    return this.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n  }\n\n  /**\n\t * @param {number} pixel\n\t * @return {number}\n\t */\n  getValueForPixel(pixel) {\n    const offsets = this._offsets;\n    const pos = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return this.min + pos * (this.max - this.min);\n  }\n\n  /**\n\t * @param {string} label\n\t * @return {{w:number, h:number}}\n\t * @private\n\t */\n  _getLabelSize(label) {\n    const ticksOpts = this.options.ticks;\n    const tickLabelWidth = this.ctx.measureText(label).width;\n    const angle = toRadians(this.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n    const cosRotation = Math.cos(angle);\n    const sinRotation = Math.sin(angle);\n    const tickFontSize = this._resolveTickFontOptions(0).size;\n\n    return {\n      w: (tickLabelWidth * cosRotation) + (tickFontSize * sinRotation),\n      h: (tickLabelWidth * sinRotation) + (tickFontSize * cosRotation)\n    };\n  }\n\n  /**\n\t * @param {number} exampleTime\n\t * @return {number}\n\t * @private\n\t */\n  _getLabelCapacity(exampleTime) {\n    const timeOpts = this.options.time;\n    const displayFormats = timeOpts.displayFormats;\n\n    // pick the longest format (milliseconds) for guesstimation\n    const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n    const exampleLabel = this._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(this, [exampleTime], this._majorUnit), format);\n    const size = this._getLabelSize(exampleLabel);\n    // subtract 1 - if offset then there's one less label than tick\n    // if not offset then one half label padding is added to each end leaving room for one less label\n    const capacity = Math.floor(this.isHorizontal() ? this.width / size.w : this.height / size.h) - 1;\n    return capacity > 0 ? capacity : 1;\n  }\n\n  /**\n\t * @protected\n\t */\n  getDataTimestamps() {\n    let timestamps = this._cache.data || [];\n    let i, ilen;\n\n    if (timestamps.length) {\n      return timestamps;\n    }\n\n    const metas = this.getMatchingVisibleMetas();\n\n    if (this._normalized && metas.length) {\n      return (this._cache.data = metas[0].controller.getAllParsedValues(this));\n    }\n\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(this));\n    }\n\n    return (this._cache.data = this.normalize(timestamps));\n  }\n\n  /**\n\t * @protected\n\t */\n  getLabelTimestamps() {\n    const timestamps = this._cache.labels || [];\n    let i, ilen;\n\n    if (timestamps.length) {\n      return timestamps;\n    }\n\n    const labels = this.getLabels();\n    for (i = 0, ilen = labels.length; i < ilen; ++i) {\n      timestamps.push(parse(this, labels[i]));\n    }\n\n    return (this._cache.labels = this._normalized ? timestamps : this.normalize(timestamps));\n  }\n\n  /**\n\t * @param {number[]} values\n\t * @protected\n\t */\n  normalize(values) {\n    // It seems to be somewhat faster to do sorting first\n    return _arrayUnique(values.sort(sorter));\n  }\n}\n","import type { MouseEvent } from 'react';\nimport type {\n  ChartType,\n  ChartData,\n  DefaultDataPoint,\n  ChartDataset,\n  ChartOptions,\n  Chart,\n} from 'chart.js';\n\nimport type { ForwardedRef } from './types.js';\n\nconst defaultDatasetIdKey = 'label';\n\nexport function reforwardRef<T>(ref: ForwardedRef<T>, value: T) {\n  if (typeof ref === 'function') {\n    ref(value);\n  } else if (ref) {\n    ref.current = value;\n  }\n}\n\nexport function setOptions<\n  TType extends ChartType = ChartType,\n  TData = DefaultDataPoint<TType>,\n  TLabel = unknown\n>(chart: Chart<TType, TData, TLabel>, nextOptions: ChartOptions<TType>) {\n  const options = chart.options;\n\n  if (options && nextOptions) {\n    Object.assign(options, nextOptions);\n  }\n}\n\nexport function setLabels<\n  TType extends ChartType = ChartType,\n  TData = DefaultDataPoint<TType>,\n  TLabel = unknown\n>(\n  currentData: ChartData<TType, TData, TLabel>,\n  nextLabels: TLabel[] | undefined\n) {\n  currentData.labels = nextLabels;\n}\n\nexport function setDatasets<\n  TType extends ChartType = ChartType,\n  TData = DefaultDataPoint<TType>,\n  TLabel = unknown\n>(\n  currentData: ChartData<TType, TData, TLabel>,\n  nextDatasets: ChartDataset<TType, TData>[],\n  datasetIdKey = defaultDatasetIdKey\n) {\n  const addedDatasets: ChartDataset<TType, TData>[] = [];\n\n  currentData.datasets = nextDatasets.map(\n    (nextDataset: Record<string, unknown>) => {\n      // given the new set, find it's current match\n      const currentDataset = currentData.datasets.find(\n        (dataset: Record<string, unknown>) =>\n          dataset[datasetIdKey] === nextDataset[datasetIdKey]\n      );\n\n      // There is no original to update, so simply add new one\n      if (\n        !currentDataset ||\n        !nextDataset.data ||\n        addedDatasets.includes(currentDataset)\n      ) {\n        return { ...nextDataset } as ChartDataset<TType, TData>;\n      }\n\n      addedDatasets.push(currentDataset);\n\n      Object.assign(currentDataset, nextDataset);\n\n      return currentDataset;\n    }\n  );\n}\n\nexport function cloneData<\n  TType extends ChartType = ChartType,\n  TData = DefaultDataPoint<TType>,\n  TLabel = unknown\n>(data: ChartData<TType, TData, TLabel>, datasetIdKey = defaultDatasetIdKey) {\n  const nextData: ChartData<TType, TData, TLabel> = {\n    labels: [],\n    datasets: [],\n  };\n\n  setLabels(nextData, data.labels);\n  setDatasets(nextData, data.datasets, datasetIdKey);\n\n  return nextData;\n}\n\n/**\n * Get dataset from mouse click event\n * @param chart - Chart.js instance\n * @param event - Mouse click event\n * @returns Dataset\n */\nexport function getDatasetAtEvent(\n  chart: Chart,\n  event: MouseEvent<HTMLCanvasElement>\n) {\n  return chart.getElementsAtEventForMode(\n    event.nativeEvent,\n    'dataset',\n    { intersect: true },\n    false\n  );\n}\n\n/**\n * Get single dataset element from mouse click event\n * @param chart - Chart.js instance\n * @param event - Mouse click event\n * @returns Dataset\n */\nexport function getElementAtEvent(\n  chart: Chart,\n  event: MouseEvent<HTMLCanvasElement>\n) {\n  return chart.getElementsAtEventForMode(\n    event.nativeEvent,\n    'nearest',\n    { intersect: true },\n    false\n  );\n}\n\n/**\n * Get all dataset elements from mouse click event\n * @param chart - Chart.js instance\n * @param event - Mouse click event\n * @returns Dataset\n */\nexport function getElementsAtEvent(\n  chart: Chart,\n  event: MouseEvent<HTMLCanvasElement>\n) {\n  return chart.getElementsAtEventForMode(\n    event.nativeEvent,\n    'index',\n    { intersect: true },\n    false\n  );\n}\n","import React, { useEffect, useRef, forwardRef } from 'react';\nimport { Chart as ChartJS } from 'chart.js';\nimport type { ChartType, DefaultDataPoint } from 'chart.js';\n\nimport type { ForwardedRef, ChartProps, BaseChartComponent } from './types.js';\nimport {\n  reforwardRef,\n  cloneData,\n  setOptions,\n  setLabels,\n  setDatasets,\n} from './utils.js';\n\nfunction ChartComponent<\n  TType extends ChartType = ChartType,\n  TData = DefaultDataPoint<TType>,\n  TLabel = unknown\n>(\n  props: ChartProps<TType, TData, TLabel>,\n  ref: ForwardedRef<ChartJS<TType, TData, TLabel>>\n) {\n  const {\n    height = 150,\n    width = 300,\n    redraw = false,\n    datasetIdKey,\n    type,\n    data,\n    options,\n    plugins = [],\n    fallbackContent,\n    updateMode,\n    ...canvasProps\n  } = props as ChartProps;\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  const chartRef = useRef<ChartJS | null>();\n\n  const renderChart = () => {\n    if (!canvasRef.current) return;\n\n    chartRef.current = new ChartJS(canvasRef.current, {\n      type,\n      data: cloneData(data, datasetIdKey),\n      options: options && { ...options },\n      plugins,\n    });\n\n    reforwardRef(ref, chartRef.current);\n  };\n\n  const destroyChart = () => {\n    reforwardRef(ref, null);\n\n    if (chartRef.current) {\n      chartRef.current.destroy();\n      chartRef.current = null;\n    }\n  };\n\n  useEffect(() => {\n    if (!redraw && chartRef.current && options) {\n      setOptions(chartRef.current, options);\n    }\n  }, [redraw, options]);\n\n  useEffect(() => {\n    if (!redraw && chartRef.current) {\n      setLabels(chartRef.current.config.data, data.labels);\n    }\n  }, [redraw, data.labels]);\n\n  useEffect(() => {\n    if (!redraw && chartRef.current && data.datasets) {\n      setDatasets(chartRef.current.config.data, data.datasets, datasetIdKey);\n    }\n  }, [redraw, data.datasets]);\n\n  useEffect(() => {\n    if (!chartRef.current) return;\n\n    if (redraw) {\n      destroyChart();\n      setTimeout(renderChart);\n    } else {\n      chartRef.current.update(updateMode);\n    }\n  }, [redraw, options, data.labels, data.datasets, updateMode]);\n\n  useEffect(() => {\n    if (!chartRef.current) return;\n\n    destroyChart();\n    setTimeout(renderChart);\n  }, [type]);\n\n  useEffect(() => {\n    renderChart();\n\n    return () => destroyChart();\n  }, []);\n\n  return (\n    <canvas\n      ref={canvasRef}\n      role='img'\n      height={height}\n      width={width}\n      {...canvasProps}\n    >\n      {fallbackContent}\n    </canvas>\n  );\n}\n\nexport const Chart = forwardRef(ChartComponent) as BaseChartComponent;\n","import React, { forwardRef } from 'react';\nimport {\n  Chart as ChartJS,\n  LineController,\n  BarController,\n  RadarController,\n  DoughnutController,\n  PolarAreaController,\n  BubbleController,\n  PieController,\n  ScatterController,\n} from 'chart.js';\nimport type { ChartType, ChartComponentLike } from 'chart.js';\n\nimport type {\n  ChartProps,\n  ChartJSOrUndefined,\n  TypedChartComponent,\n} from './types.js';\nimport { Chart } from './chart.js';\n\nfunction createTypedChart<T extends ChartType>(\n  type: T,\n  registerables: ChartComponentLike\n) {\n  ChartJS.register(registerables);\n\n  return forwardRef<ChartJSOrUndefined<T>, Omit<ChartProps<T>, 'type'>>(\n    (props, ref) => <Chart {...props} ref={ref} type={type} />\n  ) as TypedChartComponent<T>;\n}\n\nexport const Line = /* #__PURE__ */ createTypedChart('line', LineController);\n\nexport const Bar = /* #__PURE__ */ createTypedChart('bar', BarController);\n\nexport const Radar = /* #__PURE__ */ createTypedChart('radar', RadarController);\n\nexport const Doughnut = /* #__PURE__ */ createTypedChart(\n  'doughnut',\n  DoughnutController\n);\n\nexport const PolarArea = /* #__PURE__ */ createTypedChart(\n  'polarArea',\n  PolarAreaController\n);\n\nexport const Bubble = /* #__PURE__ */ createTypedChart(\n  'bubble',\n  BubbleController\n);\n\nexport const Pie = /* #__PURE__ */ createTypedChart('pie', PieController);\n\nexport const Scatter = /* #__PURE__ */ createTypedChart(\n  'scatter',\n  ScatterController\n);\n"],"names":["round","v","lim","l","h","Math","max","min","p2b","n2b","b2n","n2p","map$1","A","B","C","D","E","F","a","b","c","d","e","f","hex","h1","h2","eq","hexString","r","g","isShort","alpha","undefined","HUE_RE","hsl2rgbn","s","n","k","arguments","length","hsv2rgbn","hwb2rgbn","w","rgb","i","rgb2hsl","hueValue","calln","Array","isArray","map","hsl2rgb","hue","hueParse","str","m","exec","p1","p2","hwb2rgb","hsv2rgb","x","Z","Y","X","W","V","U","T","S","R","Q","P","O","N","M","L","K","G","H","I","J","names$1","OiceXe","antiquewEte","aqua","aquamarRe","azuY","beige","bisque","black","blanKedOmond","Xe","XeviTet","bPwn","burlywood","caMtXe","KartYuse","KocTate","cSO","cSnflowerXe","cSnsilk","crimson","cyan","xXe","xcyan","xgTMnPd","xWay","xgYF","xgYy","xkhaki","xmagFta","xTivegYF","xSange","xScEd","xYd","xsOmon","xsHgYF","xUXe","xUWay","xUgYy","xQe","xviTet","dAppRk","dApskyXe","dimWay","dimgYy","dodgerXe","fiYbrick","flSOwEte","foYstWAn","fuKsia","gaRsbSo","ghostwEte","gTd","gTMnPd","Way","gYF","gYFLw","gYy","honeyMw","hotpRk","RdianYd","Rdigo","ivSy","khaki","lavFMr","lavFMrXsh","lawngYF","NmoncEffon","ZXe","ZcSO","Zcyan","ZgTMnPdLw","ZWay","ZgYF","ZgYy","ZpRk","ZsOmon","ZsHgYF","ZskyXe","ZUWay","ZUgYy","ZstAlXe","ZLw","lime","limegYF","lRF","magFta","maPon","VaquamarRe","VXe","VScEd","VpurpN","VsHgYF","VUXe","VsprRggYF","VQe","VviTetYd","midnightXe","mRtcYam","mistyPse","moccasR","navajowEte","navy","Tdlace","Tive","TivedBb","Sange","SangeYd","ScEd","pOegTMnPd","pOegYF","pOeQe","pOeviTetYd","papayawEp","pHKpuff","peru","pRk","plum","powMrXe","purpN","YbeccapurpN","Yd","Psybrown","PyOXe","saddNbPwn","sOmon","sandybPwn","sHgYF","sHshell","siFna","silver","skyXe","UXe","UWay","UgYy","snow","sprRggYF","stAlXe","tan","teO","tEstN","tomato","Qe","viTet","JHt","wEte","wEtesmoke","Lw","LwgYF","names","nameParse","unpacked","keys","Object","tkeys","j","ok","nk","replace","parseInt","unpack","transparent","toLowerCase","RGB_RE","to","pow","from","modHSL","ratio","tmp","clone","proto","assign","fromObject","input","functionParse","charAt","rgbParse","Color","constructor","type","ret","len","hexParse","this","_rgb","_valid","valid","obj","rgbString","hslString","mix","color","weight","c1","c2","w2","p","w1","interpolate","t","rgb1","rgb2","clearer","greyscale","val","opaquer","negate","lighten","darken","saturate","desaturate","rotate","deg","uid","id","isNullOrUndef","value","prototype","toString","call","slice","isObject","isNumberFinite","Number","isFinite","finiteOrDefault","defaultValue","valueOrDefault","toDimension","dimension","endsWith","parseFloat","callback","fn","args","thisArg","apply","each","loopable","reverse","_elementsEqual","a0","a1","ilen","v0","v1","datasetIndex","index","source","target","create","klen","isValidKey","key","indexOf","_merger","options","tval","sval","merge","sources","merger","current","mergeIf","_mergerIf","hasOwnProperty","keyResolvers","o","y","resolveObjectKey","resolver","parts","split","part","push","_splitKey","_getKeyResolver","_capitalize","toUpperCase","defined","isFunction","setsEqual","size","item","has","PI","TAU","PITAU","INFINITY","POSITIVE_INFINITY","RAD_PER_DEG","HALF_PI","QUARTER_PI","TWO_THIRDS_PI","log10","sign","almostEquals","epsilon","abs","niceNum","range","roundedRange","niceRange","floor","fraction","isNumber","isNaN","_setMinAndMaxByKey","array","property","toRadians","degrees","toDegrees","radians","_decimalPlaces","getAngleFromPoint","centrePoint","anglePoint","distanceFromXCenter","distanceFromYCenter","radialDistanceFromCenter","sqrt","angle","atan2","distance","distanceBetweenPoints","pt1","pt2","_angleDiff","_normalizeAngle","_angleBetween","start","end","sameAngleIsFullCircle","angleToStart","angleToEnd","startToAngle","endToAngle","_limitValue","_isBetween","_lookup","table","cmp","mid","hi","lo","_lookupByKey","last","ti","_rlookupByKey","arrayEvents","unlistenArrayEvents","listener","stub","_chartjs","listeners","splice","forEach","_arrayUnique","items","set","Set","requestAnimFrame","window","requestAnimationFrame","throttled","argsToUse","ticking","_len2","_key2","_toLeftRightCenter","align","_alignStartEnd","_getStartAndCountOfVisiblePoints","meta","points","animationsDisabled","pointCount","count","_sorted","iScale","_parsed","axis","minDefined","maxDefined","getUserBounds","getPixelForValue","_scaleRangesChanged","xScale","yScale","_scaleRanges","newRanges","xmin","xmax","ymin","ymax","changed","atEdge","elasticIn","sin","elasticOut","effects","linear","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","cos","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInBounce","easeOutBounce","easeInOutBounce","isPatternOrGradient","getHoverColor","numbers","colors","intlCache","Map","formatNumber","num","locale","cacheKey","JSON","stringify","formatter","get","Intl","NumberFormat","getNumberFormat","format","formatters","values","numeric","tickValue","ticks","chart","notation","delta","maxTick","calculateDelta","logDelta","numDecimal","minimumFractionDigits","maximumFractionDigits","logarithmic","remain","significand","includes","Ticks","overrides","descriptors","getScope$1","node","root","scope","Defaults","_descriptors","_appliers","animation","backgroundColor","borderColor","datasets","devicePixelRatio","context","platform","getDevicePixelRatio","elements","events","font","family","style","lineHeight","hover","hoverBackgroundColor","ctx","hoverBorderColor","hoverColor","indexAxis","interaction","mode","intersect","includeInvisible","maintainAspectRatio","onHover","onClick","parsing","plugins","responsive","scale","scales","showLine","drawActiveElementsOnTop","describe","override","route","name","targetScope","targetName","scopeObject","targetScopeObject","privateName","defineProperties","writable","enumerable","local","appliers","defaults","_scriptable","startsWith","_indexable","_fallback","delay","duration","easing","loop","properties","active","resize","show","animations","visible","hide","autoPadding","padding","top","right","bottom","left","display","offset","beginAtZero","bounds","clip","grace","grid","lineWidth","drawOnChartArea","drawTicks","tickLength","tickWidth","_ctx","tickColor","border","dash","dashOffset","width","title","text","minRotation","maxRotation","mirror","textStrokeWidth","textStrokeColor","autoSkip","autoSkipPadding","labelOffset","minor","major","crossAlign","showLabelBackdrop","backdropColor","backdropPadding","_measureText","data","gc","longest","string","textWidth","measureText","_alignPixel","pixel","currentDevicePixelRatio","halfWidth","clearCanvas","canvas","getContext","save","resetTransform","clearRect","height","restore","drawPoint","drawPointLegend","xOffset","yOffset","cornerRadius","xOffsetW","yOffsetW","pointStyle","rotation","radius","rad","translate","drawImage","beginPath","ellipse","arc","closePath","moveTo","lineTo","SQRT1_2","rect","fill","borderWidth","stroke","_isPointInArea","point","area","margin","clipArea","unclipArea","_steppedLineTo","previous","flip","midpoint","_bezierCurveTo","bezierCurveTo","cp1x","cp2x","cp1y","cp2y","decorateText","line","opts","strikethrough","underline","metrics","actualBoundingBoxLeft","actualBoundingBoxRight","actualBoundingBoxAscent","actualBoundingBoxDescent","yDecoration","strokeStyle","fillStyle","decorationWidth","drawBackdrop","oldColor","fillRect","renderText","lines","strokeWidth","strokeColor","translation","textAlign","textBaseline","setRenderOpts","backdrop","strokeText","maxWidth","fillText","LINE_HEIGHT","FONT_STYLE","toLineHeight","matches","match","_readValueToProps","props","objProps","read","prop","toTRBL","toPadding","toFont","fallback","console","warn","toFontString","resolve","inputs","info","cacheable","createContext","parentContext","_createResolver","scopes","prefixes","getTarget","finalRootScopes","_resolve","cache","Symbol","toStringTag","_cacheable","_scopes","_rootScopes","_getTarget","Proxy","deleteProperty","_keys","_cached","proxy","prefix","readKey","needsSubResolver","createSubResolver","_resolveWithPrefixes","getOwnPropertyDescriptor","Reflect","getPrototypeOf","getKeysFromAllScopes","ownKeys","storage","_storage","_attachContext","subProxy","descriptorDefaults","_proxy","_context","_subProxy","_stack","setContext","receiver","isScriptable","getValue","Error","join","add","delete","_resolveScriptable","isIndexable","arr","filter","_resolveArray","_resolveWithContext","allKeys","configurable","scriptable","indexable","_allKeys","resolveFallback","getScope","parent","addScopes","parentScopes","parentFallback","rootScopes","allScopes","addScopesFromKey","subGetTarget","resolveKeysFromAllScopes","EPSILON","getPoint","skip","getValueAxis","splineCurve","firstPoint","middlePoint","afterPoint","next","d01","d12","s01","s12","fa","fb","splineCurveMonotone","valueAxis","pointsLen","deltaK","mK","pointBefore","pointCurrent","pointAfter","slopeDelta","alphaK","betaK","tauK","squaredMagnitude","monotoneAdjust","iPixel","vPixel","monotoneCompute","capControlPoint","pt","_updateBezierControlPoints","controlPoints","spanGaps","cubicInterpolationMode","prev","tension","capBezierPoints","inArea","inAreaPrev","inAreaNext","_isDomSupported","document","_getParentNode","domNode","parentNode","host","parseMaxStyle","styleValue","parentProperty","valueInPixels","getComputedStyle","element","ownerDocument","defaultView","positions","getPositionedStyle","styles","suffix","result","pos","getRelativePosition","event","borderBox","boxSizing","paddings","borders","box","touches","offsetX","offsetY","useOffsetPos","shadowRoot","getBoundingClientRect","clientX","clientY","getCanvasPosition","round1","getMaximumSize","bbWidth","bbHeight","aspectRatio","margins","maxHeight","containerSize","container","containerStyle","containerBorder","containerPadding","clientWidth","clientHeight","getContainerSize","retinaScale","forceRatio","forceStyle","pixelRatio","deviceHeight","deviceWidth","setTransform","supportsEventListenerOptions","passiveSupported","passive","addEventListener","removeEventListener","readUsedSize","el","getPropertyValue","getStyle","_pointInLine","_steppedInterpolation","_bezierInterpolation","cp1","cp2","propertyFn","between","compare","normalize","normalizeSegment","_ref","_boundSegment","segment","startBound","endBound","getSegment","prevValue","inside","subStart","shouldStart","shouldStop","_boundSegments","segments","sub","splitByStyles","segmentOptions","chartContext","_chart","baseStyle","readStyle","_datasetIndex","prevStyle","addStyle","st","dir","p0","p0DataIndex","p1DataIndex","styleChanged","doSplitByStyles","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","replacer","Animator","_request","_charts","_running","_lastDate","_notify","anims","date","callbacks","numSteps","initial","currentStep","_refresh","_update","Date","now","remaining","running","draw","_active","_total","tick","pop","_getAnims","charts","complete","progress","listen","cb","reduce","acc","cur","_duration","stop","cancel","remove","animator","interpolators","boolean","factor","c0","number","Animation","cfg","currentValue","_fn","_easing","_start","_loop","_target","_prop","_from","_to","_promises","update","elapsed","wait","promises","Promise","res","rej","resolved","method","Animations","config","_properties","configure","animationOptions","animatedProps","getOwnPropertyNames","option","_animateOptions","newOptions","$shared","$animations","resolveTargetOptions","_createAnimations","anim","all","awaitAll","then","scaleClip","allowedOverflow","getSortedDatasetIndices","filterVisible","metasets","_getSortedDatasetMetas","applyStack","stack","dsIndex","singleMode","otherValue","isStacked","stacked","getOrCreateStack","stacks","stackKey","indexValue","subStack","getLastIndexInStack","vScale","positive","getMatchingVisibleMetas","updateStacks","controller","parsed","_cachedMeta","_stacks","iAxis","vAxis","indexScale","valueScale","getStackKey","_top","_bottom","_visualValues","getFirstScaleId","shift","clearStacks","isDirectUpdateMode","cloneIfNotShared","cached","shared","DatasetController","static","_cachedDataOpts","getMeta","_type","_parsing","_data","_objectData","_sharedOptions","_drawStart","_drawCount","enableOptionSharing","supportsDecimation","$context","_syncList","datasetElementType","dataElementType","initialize","linkScales","_stacked","addElements","isPluginEnabled","updateIndex","dataset","getDataset","chooseId","xid","xAxisID","yid","yAxisID","rid","rAxisID","iid","iAxisID","vid","vAxisID","getScaleForId","rScale","getDatasetMeta","scaleID","_getOtherScale","reset","_destroy","_dataCheck","iAxisKey","vAxisKey","adata","convertObjectDataToArray","isExtensible","defineProperty","base","_len","_key","object","buildOrUpdateElements","resetNewElements","stackChanged","oldStacked","_resyncElements","scopeKeys","datasetScopeKeys","getOptionScopes","createResolver","parse","sorted","parseArrayData","parseObjectData","parsePrimitiveData","isNotInOrderComparedToPrev","labels","getLabels","singleScale","xAxisKey","yAxisKey","getParsed","getDataElement","updateRangeFromParsed","parsedValue","NaN","getMinMax","canStack","otherScale","createStack","hidden","NEGATIVE_INFINITY","otherMin","otherMax","_skip","getAllParsedValues","getMaxOverflow","getLabelAndValue","label","getLabelForValue","_clip","disabled","toClip","defaultClip","chartArea","resolveDatasetElementOptions","resolveDataElementOptions","dataIndex","raw","createDataContext","createDatasetContext","_resolveElementOptions","elementType","sharing","datasetElementScopeKeys","resolveNamedOptions","freeze","_resolveAnimations","transition","datasetAnimationScopeKeys","getSharedOptions","includeOptions","sharedOptions","_animationsDisabled","_getSharedOptions","firstOpts","previouslySharedOptions","updateSharedOptions","updateElement","_setStyle","removeHoverStyle","setHoverStyle","_removeDatasetHoverStyle","_setDatasetHoverStyle","arg1","arg2","numMeta","numData","_insertElements","_removeElements","move","updateElements","removed","_sync","_dataChanges","_onDataPush","_onDataPop","_onDataShift","_onDataSplice","newCount","_onDataUnshift","LineController","_index_","_value_","super","_dataset","_decimated","animated","maxGapLength","directUpdate","pointsCount","prevParsed","nullData","getBasePixel","lastPoint","updateControlPoints","abstract","DateAdapterBase","members","init","formats","diff","startOf","endOf","adapters","binarySearch","metaset","lookupMethod","_reversePixels","getRange","evaluateInteractionItems","position","handler","getSortedVisibleDatasetMetas","getIntersectItems","useFinalPosition","isPointInArea","inRange","getNearestCartesianItems","distanceMetric","useX","useY","deltaX","deltaY","getDistanceMetricForAxis","minDistance","center","getCenterPoint","getNearestItems","startAngle","endAngle","getProps","getNearestRadialItems","getAxisItems","rangeMethod","intersectsItem","Interaction","modes","nearest","STATIC_POSITIONS","filterByPosition","filterDynamicPositionByAxis","sortByWeight","sort","setLayoutDims","layouts","params","wrap","stackWeight","placed","buildStacks","vBoxMaxWidth","hBoxMaxHeight","layout","fullSize","horizontal","availableWidth","availableHeight","getCombinedMax","maxPadding","updateMaxPadding","boxPadding","updateDims","getPadding","newWidth","outerWidth","newHeight","outerHeight","widthChanged","heightChanged","same","other","getMargins","marginForPositions","fitBoxes","boxes","refitBoxes","refit","setBoxDims","placeBoxes","userPadding","addBox","_layers","z","removeBox","layoutItem","minPadding","layoutBoxes","isHorizontal","wrapBoxes","centerHorizontal","centerVertical","leftAndTop","concat","rightAndBottom","vertical","buildLayoutBoxes","verticalBoxes","horizontalBoxes","beforeLayout","visibleVerticalBoxCount","total","updatePos","change","handleMaxPadding","BasePlatform","acquireContext","releaseContext","isAttached","updateConfig","BasicPlatform","EXPANDO_KEY","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","isNullOrEmpty","eventListenerOptions","removeListener","nodeListContains","nodeList","contains","createAttachObserver","observer","MutationObserver","entries","trigger","entry","addedNodes","removedNodes","observe","childList","subtree","createDetachObserver","drpListeningCharts","oldDevicePixelRatio","onWindowResize","dpr","createResizeObserver","ResizeObserver","contentRect","listenDevicePixelRatioChanges","releaseObserver","disconnect","unlistenDevicePixelRatioChanges","createProxyAndListen","native","fromNativeEvent","addListener","DomPlatform","renderHeight","getAttribute","renderWidth","displayWidth","displayHeight","initCanvas","removeAttribute","setAttribute","proxies","$proxies","attach","detach","isConnected","Element","tooltipPosition","hasValue","final","tickOpts","determinedMaxTicks","_tickSize","maxScale","_length","maxChart","_maxLength","determineMaxTicks","ticksLimit","maxTicksLimit","majorIndices","enabled","getMajorIndices","numMajorIndices","first","newTicks","spacing","ceil","skipMajors","evenMajorSpacing","getEvenSpacing","factors","_factorize","calculateSpacing","avgMajorSpacing","majorStart","majorEnd","offsetFromEdge","edge","getTicksLimit","ticksLength","sample","numItems","increment","getPixelForGridLine","offsetGridLines","validIndex","_startPixel","_endPixel","lineValue","getPixelForTick","getTickMarkLength","getTitleHeight","titleAlign","reverseAlign","Scale","_margins","paddingTop","paddingBottom","paddingLeft","paddingRight","labelRotation","_range","_gridLineItems","_labelItems","_labelSizes","_longestTextCache","_userMax","_userMin","_suggestedMax","_suggestedMin","_ticksLength","_borderValue","_cache","_dataLimitsCached","suggestedMin","suggestedMax","metas","getTicks","xLabels","yLabels","getLabelItems","_computeLabelItems","beforeUpdate","sampleSize","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","minmax","keepZero","_addGrace","beforeBuildTicks","buildTicks","afterBuildTicks","samplingEnabled","_convertTicksToLabels","beforeCalculateLabelRotation","calculateLabelRotation","afterCalculateLabelRotation","afterAutoSkip","beforeFit","fit","afterFit","afterUpdate","startPixel","endPixel","reversePixels","_alignToPixels","alignToPixels","_callHooks","notifyPlugins","beforeTickToLabelConversion","generateTickLabels","afterTickToLabelConversion","numTicks","maxLabelDiagonal","_isVisible","labelSizes","_getLabelSizes","maxLabelWidth","widest","maxLabelHeight","highest","asin","minSize","titleOpts","gridOpts","titleHeight","tickPadding","angleRadians","labelHeight","labelWidth","_calculatePadding","_handleMargins","isRotated","labelsBelowTicks","offsetLeft","offsetRight","isFullSize","_computeLabelSizes","caches","widths","heights","jlen","tickFont","fontString","nestedLabel","widestLabelSize","highestLabelSize","_resolveTickFontOptions","gcLen","garbageCollect","valueAt","idx","getValueForPixel","getPixelForDecimal","decimal","getDecimalForPixel","getBaseValue","createTickContext","optionTicks","rot","_computeGridLineItems","tl","borderOpts","axisWidth","axisHalfWidth","alignBorderValue","borderValue","alignedLineValue","tx1","ty1","tx2","ty2","x1","y1","x2","y2","positionAxisID","limit","step","optsAtIndex","optsAtIndexBorder","lineColor","tickBorderDash","tickBorderDashOffset","tickAndPadding","hTickAndPadding","lineCount","textOffset","_getXAxisLabelAlignment","_getYAxisLabelAlignment","halfCount","tickTextAlign","labelPadding","_computeLabelArea","drawBackground","getLineWidthForValue","findIndex","drawGrid","drawLine","setLineDash","lineDashOffset","drawBorder","lastLineWidth","drawLabels","renderTextOptions","drawTitle","titleX","titleY","titleArgs","tz","gz","bz","axisID","_maxDigits","fontSize","TypedRegistry","isForType","isPrototypeOf","register","parentScope","isIChartComponent","itemDefaults","defaultRoutes","routes","propertyParts","sourceName","sourceScope","routeDefaults","registerDefaults","unregister","Registry","controllers","_typedRegistries","_each","addControllers","_len3","_key3","_len4","_key4","addPlugins","_len5","_key5","addScales","_len6","_key6","getController","_get","getElement","getPlugin","getScale","removeControllers","_len7","_key7","removeElements","_len8","_key8","removePlugins","_len9","_key9","removeScales","_len10","_key10","typedRegistry","arg","reg","_getRegistryForType","_exec","itemReg","registry","component","camelMethod","PluginService","_init","notify","hook","_createDescriptors","descriptor","plugin","cancelable","invalidate","_oldCache","_notifyStateChanges","localIds","allPlugins","_ref2","getOpts","pluginOpts","createDescriptors","previousDescriptors","some","_ref3","pluginScopeKeys","getIndexAxis","datasetDefaults","idMatchesAxis","determineAxis","_len11","scaleOptions","_key11","getAxisFromDataset","mergeScaleConfig","chartDefaults","configScales","chartIndexAxis","scaleConf","error","boundDs","retrieveAxisFromDatasets","defaultId","getDefaultScaleIDFromAxis","defaultScaleOptions","defaultID","getAxisFromDefaultScaleID","initOptions","initData","keyCache","keysCached","cachedKeys","generate","addIfFound","Config","_config","initConfig","_scopeCache","_resolverCache","clearCache","clear","datasetType","additionalOptionScopes","_cachedScopes","mainScope","resetCache","keyLists","chartOptionScopes","subPrefixes","getResolver","hasFunction","needContext","resolverCache","KNOWN_POSITIONS","positionIsHorizontal","compare2Level","l1","l2","onAnimationsComplete","onComplete","onAnimationProgress","onProgress","getCanvas","getElementById","instances","getChart","moveNumericKeys","intKey","getSizeForArea","field","Chart","invalidatePlugins","userConfig","initialCanvas","existingChart","OffscreenCanvas","_detectPlatform","_options","_aspectRatio","_metasets","_lastEvent","_listeners","_responsiveListeners","_sortedMetasets","_plugins","_hiddenIndices","attached","_doResize","timeout","clearTimeout","setTimeout","debounce","resizeDelay","_initialize","bindEvents","_resizeBeforeDraw","_resize","newSize","newRatio","onResize","render","ensureScalesHaveIDs","axisOptions","buildOrUpdateScales","scaleOpts","updated","isRadial","dposition","dtype","scaleType","hasUpdated","_updateMetasets","_destroyDatasetMeta","_removeUnreferencedMetasets","buildOrUpdateControllers","newControllers","order","isDatasetVisible","ControllerClass","_resetElements","animsDisabled","_updateScales","_checkEventBindings","_updateHiddenIndices","_minPadding","_updateLayout","_updateDatasets","_eventHandler","_updateHoverStyles","existingEvents","newEvents","unbindEvents","changes","_getUniformDataChanges","datasetCount","makeSet","changeSet","noArea","_idx","_updateDataset","layers","_drawDatasets","_drawDataset","useClip","getDatasetArea","getElementsAtEventForMode","getVisibleDatasetCount","setDatasetVisibility","toggleDataVisibility","getDataVisibility","_updateVisibility","_stop","destroy","toBase64Image","toDataURL","bindUserEvents","bindResponsiveEvents","_add","_remove","detached","updateHoverStyle","getActiveElements","setActiveElements","activeElements","lastActive","_ref4","pluginId","replay","hoverOptions","deactivated","activated","inChartArea","eventFilter","_handleEvent","_getActiveElements","isClick","_isClickEvent","lastEvent","determineLastEvent","setStyle","lineCap","lineJoin","pathVars","paramsStart","paramsEnd","segmentStart","segmentEnd","outside","pathSegment","lineMethod","stepped","getLineMethod","fastPathSegment","prevX","minY","maxY","lastY","avgX","countX","pointIndex","drawX","truncX","_getSegmentMethod","usePath2D","Path2D","path","_path","strokePathWithCache","segmentMethod","strokePathDirect","LineElement","_fullLoop","_points","_segments","_pointsUpdated","findStartAndEnd","solidSegments","_computeSegments","_interpolate","_getInterpolationMethod","interpolated","inRange$1","hitRadius","PointElement","hoverBorderWidth","hoverRadius","mouseX","mouseY","inXRange","inYRange","Title","_padding","textSize","_drawArgs","fontOpts","plugin_title","_element","_args","titleBlock","createTitle","WeakMap","positioners","average","xSet","eventPosition","nearestElement","tp","findOrAddLabel","addedLabels","addIfString","unshift","lastIndexOf","_getLabelForValue","CategoryScale","_startValue","_valueRange","_addedLabels","added","generateTicks$1","generationOptions","dataRange","precision","maxTicks","maxDigits","includeBounds","unit","maxSpaces","rmin","rmax","countDefined","minSpacing","niceMin","niceMax","numSpaces","rounded","almostWhole","decimalPlaces","relativeLabelSize","_ref7","LinearScaleBase","_endValue","handleTickRangeOptions","setMin","setMax","minSign","maxSign","getTickLimit","stepSize","computeTickLimit","LinearScale","INTERVALS","millisecond","common","steps","second","minute","hour","day","week","month","quarter","year","UNITS","sorter","adapter","_adapter","parser","isoWeekday","_parseOpts","determineUnitForAutoTicks","minUnit","capacity","interval","MAX_SAFE_INTEGER","addTick","time","timestamps","ticksFromTimestamps","majorUnit","setMajorTicks","TimeScale","displayFormats","_unit","_majorUnit","_offsets","_normalized","normalized","_applyBounds","_getLabelBounds","getLabelTimestamps","timeOpts","_generate","_filterBetween","_getLabelCapacity","determineUnitForFormatting","determineMajorUnit","initOffsets","offsetAfterAutoskip","getDecimalForValue","weekday","hasWeekday","getDataTimestamps","tooltipFormat","datetime","fmt","_tickFormatFunction","minorFormat","majorFormat","offsets","_getLabelSize","ticksOpts","tickLabelWidth","cosRotation","sinRotation","tickFontSize","exampleTime","exampleLabel","defaultDatasetIdKey","reforwardRef","ref","setLabels","currentData","nextLabels","setDatasets","nextDatasets","datasetIdKey","addedDatasets","nextDataset","currentDataset","find","cloneData","nextData","ChartComponent","redraw","fallbackContent","updateMode","canvasProps","canvasRef","useRef","chartRef","renderChart","Chart$1","destroyChart","useEffect","nextOptions","setOptions","React","role","forwardRef","createTypedChart","registerables","Line"],"sourceRoot":""}