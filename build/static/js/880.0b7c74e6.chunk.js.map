{"version":3,"file":"static/js/880.0b7c74e6.chunk.js","mappings":"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","sources":["components/modal/AddContactModal.js","components/modal/EditContactModal.js","components/contact/ContactTbl.js","components/contact/GroupConTbl.js","pages/Contact/Contacts.js","utils/base64ToBlob.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Button, Input } from \"../form\";\nimport axiosInstance from \"../../utils/axiosInstance\";\nimport { useForm } from \"react-hook-form\";\nimport { toast } from \"react-toastify\";\nimport imageCompression from \"browser-image-compression\";\nimport { base64ToBlob } from \"../../utils/base64ToBlob\";\nimport { useSelector } from \"react-redux\";\n\nconst AddContactModal = ({ closeModal, handleChange }) => {\n  const profileId = useSelector((state) => state.profile.profileId);\n\n  const [profilePic, setProfilePic] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n  } = useForm();\n\n  const handleProfilePicChange = async (e) => {\n    const file = e.target.files[0];\n    const maxFileSize = 4 * 1024 * 1024;\n    if (file) {\n      if (file.size > maxFileSize) {\n        toast.error(\"picture size must be less than 6MB.\", {\n          position: \"bottom-right\",\n          autoClose: 5000,\n          hideProgressBar: true,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined,\n          theme: \"light\",\n        });\n        return;\n      }\n      try {\n        const options = {\n          maxSizeMB: 6,\n          useWebWorker: true,\n        };\n        const compressedFile = await imageCompression(file, options);\n        const reader = new FileReader();\n        reader.onloadend = () => {\n          setProfilePic(reader.result);\n        };\n        reader.readAsDataURL(compressedFile);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n  };\n\n  const addContactSubmit = async (data) => {\n    let profileBlob = null;\n    if (profilePic) {\n      profileBlob = base64ToBlob(profilePic);\n    }\n    setLoading(true);\n    const body = {\n      first_name: data.first_name,\n      last_name: data.last_name,\n      phone: data?.phone,\n      website: data?.webiste,\n      email: data?.email,\n      photo: profileBlob,\n      profile_id: profileId,\n    };\n    try {\n      const response = await axiosInstance.post(\"/addPhoneContact\", body);\n\n      if (response.status === 200) {\n        toast.success(response.data.message, {\n          position: \"bottom-right\",\n          autoClose: 5000,\n          hideProgressBar: true,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined,\n          theme: \"light\",\n        });\n        handleChange();\n        closeModal();\n      }\n    } catch (err) {\n      setLoading(false);\n      toast.error(err.response.data.message, {\n        position: \"bottom-right\",\n        autoClose: 5000,\n        hideProgressBar: true,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined,\n        theme: \"light\",\n      });\n    }\n  };\n\n  return ReactDOM.createPortal(\n    <div\n      id=\"authentication-modal\"\n      tabIndex=\"-1\"\n      aria-hidden=\"false\"\n      className=\"overflow-y-auto overflow-x-hidden fixed top-0 right-0 left-0 z-50 flex justify-center items-center w-full h-full bg-black bg-opacity-50\"\n    >\n      <div className=\"relative p-4 w-full max-w-lg max-h-full\">\n        {\" \"}\n        {/* Expanded width */}\n        <div className=\"relative bg-white rounded-lg shadow\">\n          <div className=\"flex items-center justify-between p-4 md:p-5 border-b rounded-t\">\n            <h3 className=\"text-xl font-semibold text-gray-900 \">\n              {\"Add Contact\"}\n            </h3>\n            <button\n              type=\"button\"\n              onClick={closeModal}\n              className=\"text-gray-400 bg-transparent hover:bg-gray-200 hover:text-gray-900 rounded-lg text-sm w-8 h-8 inline-flex justify-center items-center \"\n            >\n              <svg\n                className=\"w-3 h-3\"\n                aria-hidden=\"true\"\n                xmlns=\"http://www.w3.org/2000/svg\"\n                fill=\"none\"\n                viewBox=\"0 0 14 14\"\n              >\n                <path\n                  stroke=\"currentColor\"\n                  strokeLinecap=\"round\"\n                  strokeLinejoin=\"round\"\n                  strokeWidth=\"2\"\n                  d=\"m1 1 6 6m0 0 6 6M7 7l6-6M7 7l-6 6\"\n                />\n              </svg>\n              <span className=\"sr-only\">Close modal</span>\n            </button>\n          </div>\n          <div className=\"p-4 md:p-5\">\n            <form\n              className=\"space-y-4\"\n              onSubmit={handleSubmit(addContactSubmit)}\n              encType=\"multipart/form-data\"\n            >\n              <div className=\"flex space-x-4\">\n                <div className=\"w-full\">\n                  <label\n                    htmlFor=\"first-name\"\n                    className=\"block mb-2 text-sm font-medium text-gray-900 \"\n                  >\n                    First Name\n                  </label>\n                  <Input\n                    type={\"text\"}\n                    nameField={\"first_name\"}\n                    intent={\"primary\"}\n                    id={\"first-name\"}\n                    size={\"md\"}\n                    classes={\"w-full block p-2.5 \"}\n                    roundness={\"round-sm\"}\n                    placeholder={\"First Name\"}\n                    register={register}\n                  />\n                  {/* <input\n                    type=\"text\"\n                    name=\"first-name\"\n                    id=\"first-name\"\n                    className=\"bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 dark:bg-gray-600 dark:border-gray-500 dark:placeholder-gray-400 dark:text-white\"\n                    placeholder=\"John\"\n                    required\n                  /> */}\n                </div>\n                <div className=\"w-full\">\n                  <label\n                    htmlFor=\"last-name\"\n                    className=\"block mb-2 text-sm font-medium text-gray-900 \"\n                  >\n                    Last Name\n                  </label>\n                  <Input\n                    type={\"text\"}\n                    nameField={\"last_name\"}\n                    intent={\"primary\"}\n                    id={\"last-name\"}\n                    size={\"md\"}\n                    classes={\"w-full block p-2.5 \"}\n                    roundness={\"round-sm\"}\n                    placeholder={\"Last Name\"}\n                    register={register}\n                  />\n                  {/* <input\n                    type=\"text\"\n                    name=\"last-name\"\n                    id=\"last-name\"\n                    className=\"bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 dark:bg-gray-600 dark:border-gray-500 dark:placeholder-gray-400 dark:text-white\"\n                    placeholder=\"Doe\"\n                    required\n                  /> */}\n                </div>\n              </div>\n              {/* <div className=\"flex space-x-4\"> */}\n              <div className=\"w-full\">\n                <label\n                  htmlFor=\"email\"\n                  className=\"block mb-2 text-sm font-medium text-gray-900 \"\n                >\n                  Your Email\n                </label>\n                <Input\n                  type={\"email\"}\n                  nameField={\"email\"}\n                  intent={\"primary\"}\n                  id={\"email\"}\n                  size={\"md\"}\n                  classes={\"w-full block p-2.5 \"}\n                  roundness={\"round-sm\"}\n                  placeholder={\"Email\"}\n                  register={register}\n                />\n                {/* <input\n                    type=\"email\"\n                    name=\"email\"\n                    id=\"email\"\n                    className=\"bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 dark:bg-gray-600 dark:border-gray-500 dark:placeholder-gray-400 dark:text-white\"\n                    placeholder=\"name@company.com\"\n                    required\n                  /> */}\n              </div>\n              <div className=\"w-full\">\n                <label\n                  htmlFor=\"phone\"\n                  className=\"block mb-2 text-sm font-medium text-gray-900 \"\n                >\n                  Phone\n                </label>\n                <Input\n                  type={\"tel\"}\n                  nameField={\"phone\"}\n                  intent={\"primary\"}\n                  id={\"phone\"}\n                  size={\"md\"}\n                  classes={\"w-full block p-2.5 \"}\n                  roundness={\"round-sm\"}\n                  placeholder={\"Phone\"}\n                  maxLength={\"11\"}\n                  minLength={\"10\"}\n                  register={register}\n                />\n                {/* <input\n                    type=\"tel\"\n                    name=\"phone\"\n                    id=\"phone\"\n                    className=\"bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 dark:bg-gray-600 dark:border-gray-500 dark:placeholder-gray-400 dark:text-white\"\n                    placeholder=\"123-456-7890\"\n                    required\n                  /> */}\n              </div>\n              <div className=\"w-full\">\n                <label\n                  htmlFor=\"website\"\n                  className=\"block mb-2 text-sm font-medium text-gray-900 \"\n                >\n                  Website\n                </label>\n                <Input\n                  type={\"text\"}\n                  nameField={\"website\"}\n                  intent={\"primary\"}\n                  id={\"website\"}\n                  size={\"md\"}\n                  classes={\"w-full block p-2.5 \"}\n                  roundness={\"round-sm\"}\n                  placeholder={\"Website Link\"}\n                  register={register}\n                />\n                {/* <input\n                    type=\"tel\"\n                    name=\"phone\"\n                    id=\"phone\"\n                    className=\"bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 dark:bg-gray-600 dark:border-gray-500 dark:placeholder-gray-400 dark:text-white\"\n                    placeholder=\"123-456-7890\"\n                    required\n                  /> */}\n              </div>\n              {/* </div> */}\n              <div>\n                <label\n                  htmlFor=\"profile-pic\"\n                  className=\"block mb-2 text-center text-sm font-medium text-gray-900 \"\n                >\n                  Profile Picture\n                </label>\n                <div className=\"flex items-center justify-center mb-4\">\n                  <label htmlFor=\"profile-pic\" className=\"cursor-pointer\">\n                    <div className=\"relative w-16 h-16 overflow-hidden bg-gray-200 rounded-full\">\n                      {profilePic ? (\n                        <img\n                          src={profilePic}\n                          alt=\"Profile\"\n                          className=\"object-cover w-full h-full\"\n                        />\n                      ) : (\n                        <span className=\"flex items-center justify-center w-full h-full text-gray-400\">\n                          +\n                        </span>\n                      )}\n                    </div>\n                  </label>\n                  <input\n                    type=\"file\"\n                    id=\"profile-pic\"\n                    accept=\"image/*\"\n                    onChange={handleProfilePicChange}\n                    className=\"hidden\"\n                  />\n                </div>\n              </div>\n              <Button\n                intent={\"primary\"}\n                size={\"lg\"}\n                children={\"Add\"}\n                classes={\"w-full !p-2\"}\n                roundness={\"round\"}\n                loading={loading}\n              />\n            </form>\n          </div>\n        </div>\n      </div>\n    </div>,\n    document.body\n  );\n};\n\nexport default AddContactModal;\n","import React, { useEffect, useState, useRef } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Button, Input } from \"../form\";\nimport axiosInstance from \"../../utils/axiosInstance\";\nimport { useForm } from \"react-hook-form\";\nimport { toast } from \"react-toastify\";\nimport imageCompression from \"browser-image-compression\";\nimport { base64ToBlob } from \"../../utils/base64ToBlob\";\nimport { MdCancel } from \"react-icons/md\";\nimport { useSelector } from \"react-redux\";\n\nconst EditContactModal = ({ closeModal, editData, handleChange }) => {\n  const profileId = useSelector((state) => state.profile.profileId);\n  const [profilePic, setProfilePic] = useState(\"\");\n  const [profilePicEdit, setProfilePicEdit] = useState({\n    pic: \"\",\n  });\n  const [loading, setLoading] = useState(false);\n  const profilePicInputRef = useRef();\n\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n    reset,\n  } = useForm();\n\n  const handleProfilePic = () => {\n    profilePicInputRef.current.click();\n  };\n\n  useEffect(() => {\n    if (editData) {\n      reset({\n        first_name: editData.data.first_name ? editData.data.first_name : \"\",\n        last_name: editData.data.last_name ? editData.data.last_name : \"\",\n        email: editData.data.email ? editData.data.email : \"\",\n        phone: editData.data.phone ? editData.data.phone : \"\",\n        website: editData.data.website ? editData.data.website : \"\",\n      });\n      setProfilePicEdit((prev) => ({\n        ...prev,\n        pic: editData?.data?.photo,\n      }));\n    }\n  }, [editData, reset]);\n\n  const handleProfilePicChange = async (e) => {\n    const file = e.target.files[0];\n    const maxFileSize = 4 * 1024 * 1024;\n    if (file) {\n      if (file.size > maxFileSize) {\n        toast.error(\"picture size must be less than 6MB.\", {\n          position: \"bottom-right\",\n          autoClose: 5000,\n          hideProgressBar: true,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined,\n          theme: \"light\",\n        });\n        return;\n      }\n      try {\n        const options = {\n          maxSizeMB: 6,\n          useWebWorker: true,\n        };\n        const compressedFile = await imageCompression(file, options);\n        const reader = new FileReader();\n\n        reader.onloadend = () => {\n          setProfilePic(reader.result);\n        };\n        reader.readAsDataURL(compressedFile);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n  };\n\n  const addContactSubmit = async (data) => {\n    let profileBlob = base64ToBlob(profilePic);\n    setLoading(true);\n    try {\n      const body = {\n        first_name: data.first_name,\n        last_name: data.last_name,\n        phone: data?.phone,\n        website: data?.webiste,\n        email: data?.email,\n        photo: profileBlob,\n        profile_id: profileId,\n        contact_id: editData.data.id,\n      };\n      const response = await axiosInstance.post(\"/updatePhoneContact\", body);\n      if (response.status === 200) {\n        toast.success(response.data.message, {\n          position: \"bottom-right\",\n          autoClose: 5000,\n          hideProgressBar: true,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined,\n          theme: \"light\",\n        });\n        handleChange();\n        closeModal();\n      }\n    } catch (err) {\n      setLoading(false);\n      toast.error(err.response.data.message, {\n        position: \"bottom-right\",\n        autoClose: 5000,\n        hideProgressBar: true,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined,\n        theme: \"light\",\n      });\n    }\n  };\n\n  const rmEditPic = () => {\n    setProfilePicEdit((prev) => ({\n      ...prev,\n      pic: \"\",\n    }));\n    profilePicInputRef.current.value = null;\n  };\n\n  const rmEditProPic = () => {\n    setProfilePic(\"\");\n    profilePicInputRef.current.value = null;\n  };\n\n  return ReactDOM.createPortal(\n    <div\n      id=\"authentication-modal\"\n      tabIndex=\"-1\"\n      aria-hidden=\"false\"\n      className=\"overflow-y-auto overflow-x-hidden fixed top-0 right-0 left-0 z-50 flex justify-center items-center w-full h-full bg-black bg-opacity-50\"\n    >\n      <div className=\"relative p-4 w-full max-w-lg max-h-full\">\n        {\" \"}\n        {/* Expanded width */}\n        <div className=\"relative bg-white rounded-lg shadow\">\n          <div className=\"flex items-center justify-between p-4 md:p-5 border-b rounded-t\">\n            <h3 className=\"text-xl font-semibold text-gray-900 \">\n              {\"Edit Contact\"}\n            </h3>\n            <button\n              type=\"button\"\n              onClick={closeModal}\n              className=\"text-gray-400 bg-transparent hover:bg-gray-200 hover:text-gray-900 rounded-lg text-sm w-8 h-8 inline-flex justify-center items-center \"\n            >\n              <svg\n                className=\"w-3 h-3\"\n                aria-hidden=\"true\"\n                xmlns=\"http://www.w3.org/2000/svg\"\n                fill=\"none\"\n                viewBox=\"0 0 14 14\"\n              >\n                <path\n                  stroke=\"currentColor\"\n                  strokeLinecap=\"round\"\n                  strokeLinejoin=\"round\"\n                  strokeWidth=\"2\"\n                  d=\"m1 1 6 6m0 0 6 6M7 7l6-6M7 7l-6 6\"\n                />\n              </svg>\n              <span className=\"sr-only\">Close modal</span>\n            </button>\n          </div>\n          <div className=\"p-4 md:p-5\">\n            <form\n              className=\"space-y-4\"\n              onSubmit={handleSubmit(addContactSubmit)}\n              encType=\"multipart/form-data\"\n            >\n              <div className=\"flex space-x-4\">\n                <div className=\"w-full\">\n                  <label\n                    htmlFor=\"first-name\"\n                    className=\"block mb-2 text-sm font-medium text-gray-900 \"\n                  >\n                    First Name\n                  </label>\n                  <Input\n                    type={\"text\"}\n                    nameField={\"first_name\"}\n                    intent={\"primary\"}\n                    id={\"first-name\"}\n                    size={\"md\"}\n                    classes={\"w-full block p-2.5 \"}\n                    roundness={\"round-sm\"}\n                    placeholder={\"first name\"}\n                    register={register}\n                  />\n                  {/* <input\n                    type=\"text\"\n                    name=\"first-name\"\n                    id=\"first-name\"\n                    className=\"bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 dark:bg-gray-600 dark:border-gray-500 dark:placeholder-gray-400 dark:text-white\"\n                    placeholder=\"John\"\n                    required\n                  /> */}\n                </div>\n                <div className=\"w-full\">\n                  <label\n                    htmlFor=\"last-name\"\n                    className=\"block mb-2 text-sm font-medium text-gray-900 \"\n                  >\n                    Last Name\n                  </label>\n                  <Input\n                    type={\"text\"}\n                    nameField={\"last_name\"}\n                    intent={\"primary\"}\n                    id={\"last-name\"}\n                    size={\"md\"}\n                    classes={\"w-full block p-2.5 \"}\n                    roundness={\"round-sm\"}\n                    placeholder={\"Last Name\"}\n                    register={register}\n                  />\n                  {/* <input\n                    type=\"text\"\n                    name=\"last-name\"\n                    id=\"last-name\"\n                    className=\"bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 dark:bg-gray-600 dark:border-gray-500 dark:placeholder-gray-400 dark:text-white\"\n                    placeholder=\"Doe\"\n                    required\n                  /> */}\n                </div>\n              </div>\n              {/* <div className=\"flex space-x-4\"> */}\n              <div className=\"w-full\">\n                <label\n                  htmlFor=\"email\"\n                  className=\"block mb-2 text-sm font-medium text-gray-900 \"\n                >\n                  Your Email\n                </label>\n                <Input\n                  type={\"email\"}\n                  nameField={\"email\"}\n                  intent={\"primary\"}\n                  id={\"email\"}\n                  size={\"md\"}\n                  classes={\"w-full block p-2.5 \"}\n                  roundness={\"round-sm\"}\n                  placeholder={\"Email\"}\n                  register={register}\n                />\n                {/* <input\n                    type=\"email\"\n                    name=\"email\"\n                    id=\"email\"\n                    className=\"bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 dark:bg-gray-600 dark:border-gray-500 dark:placeholder-gray-400 dark:text-white\"\n                    placeholder=\"name@company.com\"\n                    required\n                  /> */}\n              </div>\n              <div className=\"w-full\">\n                <label\n                  htmlFor=\"phone\"\n                  className=\"block mb-2 text-sm font-medium text-gray-900 \"\n                >\n                  Phone\n                </label>\n                <Input\n                  type={\"tel\"}\n                  nameField={\"phone\"}\n                  intent={\"primary\"}\n                  id={\"phone\"}\n                  size={\"md\"}\n                  classes={\"w-full block p-2.5 \"}\n                  roundness={\"round-sm\"}\n                  placeholder={\"phone\"}\n                  maxLength={\"11\"}\n                  minLength={\"10\"}\n                  register={register}\n                />\n                {/* <input\n                    type=\"tel\"\n                    name=\"phone\"\n                    id=\"phone\"\n                    className=\"bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 dark:bg-gray-600 dark:border-gray-500 dark:placeholder-gray-400 dark:text-white\"\n                    placeholder=\"123-456-7890\"\n                    required\n                  /> */}\n              </div>\n              <div className=\"w-full\">\n                <label\n                  htmlFor=\"website\"\n                  className=\"block mb-2 text-sm font-medium text-gray-900 \"\n                >\n                  Website\n                </label>\n                <Input\n                  type={\"text\"}\n                  nameField={\"website\"}\n                  intent={\"primary\"}\n                  id={\"website\"}\n                  size={\"md\"}\n                  classes={\"w-full block p-2.5 \"}\n                  roundness={\"round-sm\"}\n                  placeholder={\"Add website link\"}\n                  register={register}\n                />\n                {/* <input\n                    type=\"tel\"\n                    name=\"phone\"\n                    id=\"phone\"\n                    className=\"bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 dark:bg-gray-600 dark:border-gray-500 dark:placeholder-gray-400 dark:text-white\"\n                    placeholder=\"123-456-7890\"\n                    required\n                  /> */}\n              </div>\n              {/* </div> */}\n              <div>\n                <label className=\"block mb-2 text-center text-sm font-medium text-gray-900 \">\n                  Profile Picture\n                </label>\n                <div className=\"flex items-center justify-center mb-4\">\n                  <label htmlFor=\"\" className=\"\">\n                    <div className=\"relative w-16 h-16 overflow-hidden bg-gray-200 rounded-full\">\n                      {profilePicEdit.pic && (\n                        <>\n                          <img\n                            src={`${process.env.REACT_APP_SERVER}${profilePicEdit.pic}`}\n                            alt=\"Profile\"\n                            className=\"object-cover w-full h-full\"\n                          />\n                          <MdCancel\n                            onClick={rmEditPic}\n                            className=\"absolute top-3 right-2 cursor-pointer text-black\"\n                          />\n                        </>\n                      )}\n                      {profilePic && (\n                        <>\n                          <img\n                            src={profilePic}\n                            alt=\"Profile\"\n                            className=\"object-cover w-full h-full\"\n                          />\n                          <MdCancel\n                            onClick={rmEditProPic}\n                            className=\"absolute top-3 right-2 cursor-pointer text-black\"\n                          />\n                        </>\n                      )}\n                      {!profilePic && !profilePicEdit.pic && (\n                        <span\n                          onClick={handleProfilePic}\n                          className=\"flex items-center justify-center w-full h-full text-gray-400\"\n                        >\n                          +\n                        </span>\n                      )}\n                    </div>\n                  </label>\n                  <input\n                    type=\"file\"\n                    ref={profilePicInputRef}\n                    id=\"profile-pic\"\n                    accept=\".jpg, .jpeg, .png\"\n                    onChange={handleProfilePicChange}\n                    className=\"hidden\"\n                  />\n                </div>\n              </div>\n              <Button\n                intent={\"primary\"}\n                size={\"lg\"}\n                children={\"Add\"}\n                classes={\"w-full !p-2\"}\n                roundness={\"round\"}\n                loading={loading}\n              />\n            </form>\n          </div>\n        </div>\n      </div>\n    </div>,\n    document.body\n  );\n};\n\nexport default EditContactModal;\n","import React, { useEffect, useState } from \"react\";\nimport { Button } from \"../form\";\nimport AddContactModal from \"../modal/AddContactModal\";\nimport axiosInstance from \"../../utils/axiosInstance\";\nimport { toast } from \"react-toastify\";\nimport EditContactModal from \"../modal/EditContactModal\";\nimport { useSelector } from \"react-redux\";\nimport {BiEdit} from \"react-icons/bi\";\nimport {FiDelete} from \"react-icons/fi\";\n\nconst ContactTbl = () => {\n  const profileId = useSelector((state) => state.profile.profileId);\n\n  const [isOpenModal, setIsOpenModal] = useState(false);\n  const [isEditOpenModal, setIsEditOpenModal] = useState(false);\n  const [contacts, setContacts] = useState([]);\n  const [change, setChange] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [editData, setEditData] = useState({\n    action: \"edit\",\n    data: null,\n  });\n\n  const openAddContactModal = () => {\n    setIsOpenModal(!isOpenModal);\n  };\n\n  const closeAddContactModal = () => {\n    setIsOpenModal(!isOpenModal);\n  };\n\n  const closeEditContactModal = () => {\n    setIsEditOpenModal(!isEditOpenModal);\n  };\n\n  async function getContacts() {\n    try {\n      setLoading(true);\n      const response = await axiosInstance.post(\"/phoneContacts\", {\n        profile_id: profileId,\n      });\n      if (response.status === 200) {\n        setContacts(response.data.contacts);\n        setLoading(false);\n      }\n    } catch (error) {\n      setLoading(false);\n      toast.error(error.response.data.message, {\n        position: \"bottom-right\",\n        autoClose: 5000,\n        hideProgressBar: true,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined,\n        theme: \"light\",\n      });\n    }\n  }\n\n  useEffect(() => {\n    getContacts();\n  }, [change]);\n\n  const deleteContact = async (id) => {\n    try {\n      const response = await axiosInstance.post(\"/removeContact\", {\n        contact_id: id,\n        profile_id: profileId,\n      });\n      if (response.status === 200) {\n        toast.success(response.data.message, {\n          position: \"bottom-right\",\n          autoClose: 5000,\n          hideProgressBar: true,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined,\n          theme: \"light\",\n        });\n      }\n      setChange(!change);\n    } catch (error) {\n      toast.error(error.response.data.message, {\n        position: \"bottom-right\",\n        autoClose: 5000,\n        hideProgressBar: true,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined,\n        theme: \"light\",\n      });\n    }\n  };\n\n  const handleEditContact = (data) => {\n    setIsEditOpenModal(true);\n    setEditData((prev) => ({\n      ...prev,\n      data: data,\n    }));\n  };\n\n  const handleChange = () => {\n    setChange(!change);\n  };\n\n  return (\n    <div className=\"w-full min-h-[150px] bg-primary rounded-2xl p-6 mb-8\">\n      <div className=\"flex flex-col gap-4 w-full\">\n        <div className=\"w-full h-16  rounded-xl flex justify-between items-center\">\n          <h1 className=\"font-inter font-bold text-2xl\">Contacts</h1>\n          <Button\n            intent={\"primary\"}\n            size={\"lg\"}\n            children={\"Add Contact\"}\n            roundness={\"round\"}\n            classes={\"\"}\n            type={\"button\"}\n            eventAction={openAddContactModal}\n          />\n          {isOpenModal && (\n            <AddContactModal\n              handleChange={handleChange}\n              closeModal={closeAddContactModal}\n            />\n          )}\n          {isEditOpenModal && (\n            <EditContactModal\n              editData={editData}\n              handleChange={handleChange}\n              closeModal={closeEditContactModal}\n            />\n          )}\n        </div>\n        <div className=\"w-full min-h-[150px]  bg-white rounded-xl\">\n          <div className=\"w-full h-full  overflow-auto p-3\">\n            <table className=\"w-full text-sm text-left rtl:text-right text-gray-500\">\n              <thead className=\"text-xs text-gray-700 uppercase bg-gray-50\">\n                <tr>\n                  <th scope=\"col\" className=\"px-6 py-3\">\n                    User\n                  </th>\n\n                  <th scope=\"col\" className=\"px-6 py-3\">\n                    Email\n                  </th>\n                  <th scope=\"col\" className=\"px-6 py-3\">\n                    Phone\n                  </th>\n                  <th scope=\"col\" className=\"px-6 py-3\">\n                    Action\n                  </th>\n                </tr>\n              </thead>\n              <tbody>\n                {loading ? (\n                  <tr className=\"bg-white border-b\">\n                    <td\n                      colSpan={4}\n                      className=\"py-3 text-center text-gray-500\"\n                    >\n                      Loading....\n                    </td>\n                  </tr>\n                ) : (\n                  <>\n                    {contacts.length === 0 ? (\n                      <tr className=\"bg-white border-b\">\n                        <td\n                          colSpan={4}\n                          className=\"py-3 text-center text-gray-500\"\n                        >\n                          No Contacts\n                        </td>\n                      </tr>\n                    ) : (\n                      <>\n                        {contacts?.map((result) => {\n                          return (\n                            <tr\n                              key={result.id}\n                              className=\"bg-white border-b hover:bg-gray-50\"\n                            >\n                              <td className=\"flex items-center px-6 py-4 text-gray-900\">\n                                {result.photo && <img\n                                  className=\"w-10 h-10 rounded-full\"\n                                  src={`${process.env.REACT_APP_SERVER}${result.photo}`}\n                                  alt=\"phot\"\n                                />}\n                                <div className=\"ps-3 text-base font-semibold\">\n                                  {result?.first_name} {result?.last_name}\n                                </div>\n                              </td>\n                              <td className=\"px-6 py-4\">{result.email}</td>\n                              <td className=\"px-6 py-4\">{result?.phone}</td>\n                              <td className=\"px-6 py-4 flex items-center justify-start gap-2\">\n                                <div\n                                    onClick={() => handleEditContact(result)}\n                                    className={\"bg-gradient-to-r from-tertiary-green-60 to-tertiary-green-70 rounded-full px-2 py-2 cursor-pointer\"}>\n                                  <BiEdit className={\"text-white size-4\"} />\n                                </div>\n                                <div\n                                    onClick={() => deleteContact(result.id)}\n                                    className={\"bg-red-500 rounded-full px-2 py-2 cursor-pointer\"}>\n                                  <FiDelete className={\"text-white size-4\"} />\n                                </div>\n                              </td>\n                            </tr>\n                          );\n                        })}\n                      </>\n                    )}\n                  </>\n                )}\n              </tbody>\n            </table>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ContactTbl;\n","import React, { useEffect, useState } from \"react\";\nimport { Button } from \"../form\";\nimport AddGroupContModal from \"../modal/AddGroupContModal\";\nimport axiosInstance from \"../../utils/axiosInstance\";\nimport { toast } from \"react-toastify\";\nimport EditGrpContact from \"../modal/EditGrpContact\";\nimport { useSelector } from \"react-redux\";\nimport edit from \"../../assets/svgs/edit.svg\";\nimport {BiEdit} from \"react-icons/bi\";\nimport {FiDelete} from \"react-icons/fi\";\nimport {AiOutlineUserAdd} from \"react-icons/ai\";\n\nconst GroupConTbl = () => {\n  const profileId = useSelector((state) => state.profile.profileId);\n\n  const [isOpenModal, setIsOpenModal] = useState(false);\n  const [isOpenEditConModal, setIsOpenEditConModal] = useState(false);\n  const [groups, setGroups] = useState([]);\n  const [groupData, setGroupData] = useState({\n    isEdit: false,\n    isAdd: false,\n    data: \"\",\n  });\n  const [editGrpConData, setEditGrpConData] = useState({\n    data: \"\",\n  });\n  const [loading, setLoading] = useState(false);\n  const [change, setChange] = useState(false);\n\n  const openAddContactModal = () => {\n    setIsOpenModal(!isOpenModal);\n    setGroupData(() => ({\n      data: \"\",\n      isAdd: true,\n      isEdit: false,\n    }));\n  };\n\n  const closeAddContactModal = () => {\n    setIsOpenModal(!isOpenModal);\n  };\n\n  async function getGroups() {\n    setLoading(true);\n    try {\n      const response = await axiosInstance.post(\"/groups\", {\n        profile_id: profileId,\n      });\n      if (response.status === 200) {\n        setGroups(response.data.groups);\n        setLoading(false);\n      }\n    } catch (error) {\n      setLoading(true);\n      console.error(error?.response);\n      toast.error(error.response.data.message, {\n        position: \"bottom-right\",\n        autoClose: 5000,\n        hideProgressBar: true,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined,\n        theme: \"light\",\n      });\n      // toast.error(error.response.data.message);\n    }\n  }\n\n  useEffect(() => {\n    getGroups();\n  }, [change]);\n\n  const editGroup = (data, isEdit) => {\n    setIsOpenModal(true);\n    setGroupData((prev) => ({\n      ...prev,\n      data: data,\n      isEdit: isEdit,\n      isAdd: false,\n    }));\n  };\n\n  const handleChange = () => {\n    setChange(!change);\n  };\n\n  async function deleteGroup(id) {\n    try {\n      const response = await axiosInstance.post(\"/removeGroup\", {\n        group_id: id,\n        profile_id: profileId,\n      });\n      if (response.status === 200) {\n        toast.success(response.data.message, {\n          position: \"bottom-right\",\n          autoClose: 5000,\n          hideProgressBar: true,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined,\n          theme: \"light\",\n        });\n        handleChange();\n      }\n    } catch (error) {\n      toast.error(error.response.data.message, {\n        position: \"bottom-right\",\n        autoClose: 5000,\n        hideProgressBar: true,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined,\n        theme: \"light\",\n      });\n    }\n  }\n\n  const handleEditGrpContact = (data) => {\n    setIsOpenEditConModal(true);\n    setEditGrpConData(data);\n  };\n\n  const closeEditGrpContactModal = () => {\n    setIsOpenEditConModal(!isOpenEditConModal);\n  };\n\n  return (\n    <div className=\"w-full min-h-[150px] bg-primary rounded-2xl p-6 mb-20\">\n      <div className=\"flex flex-col gap-4 w-full\">\n        <div className=\"w-full h-16  rounded-xl flex justify-between items-center\">\n          <h1 className=\"font-inter font-bold text-2xl\">Groups</h1>\n          <Button\n            intent={\"primary\"}\n            size={\"lg\"}\n            children={\"Add Group\"}\n            roundness={\"round\"}\n            classes={\"\"}\n            type={\"button\"}\n            eventAction={openAddContactModal}\n          />\n          {isOpenModal && (\n            <AddGroupContModal\n              handleChange={handleChange}\n              grpData={groupData}\n              closeModal={closeAddContactModal}\n            />\n          )}\n          {isOpenEditConModal && (\n            <EditGrpContact\n              handleChange={handleChange}\n              grpData={editGrpConData}\n              closeModal={closeEditGrpContactModal}\n            />\n          )}\n        </div>\n        <div className=\"w-full min-h-[130px]  bg-white rounded-xl\">\n          <div className=\"w-full h-full  overflow-auto p-3\">\n            <table className=\"w-full text-sm text-left rtl:text-right text-gray-500\">\n              <thead className=\"text-xs text-gray-700 uppercase bg-gray-50\">\n                <tr>\n                  <th scope=\"col\" className=\"px-6 py-3\">\n                    Title\n                  </th>\n                  <th scope=\"col\" className=\"px-6 py-3\">\n                    Total Contacts\n                  </th>\n                  <th scope=\"col\" className=\"px-6 py-3\">\n                    Total Numbers\n                  </th>\n                  <th scope=\"col\" className=\"px-6 py-3\">\n                    Action\n                  </th>\n                </tr>\n              </thead>\n              <tbody>\n                {loading ? (\n                  <tr className=\"bg-white border-b\">\n                    <td\n                      colSpan={4}\n                      className=\"py-3 text-center text-gray-500\"\n                    >\n                      Loading....\n                    </td>\n                  </tr>\n                ) : (\n                  <>\n                    {groups.length === 0 ? (\n                      <tr className=\"bg-white border-b\">\n                        <td\n                          colSpan={4}\n                          className=\"py-3 text-center text-gray-500\"\n                        >\n                          No Group Record\n                        </td>\n                      </tr>\n                    ) : (\n                      <>\n                        {groups?.map((result) => {\n                          return (\n                            <tr\n                              key={result.id}\n                              className=\"bg-white border-b hover:bg-gray-50\"\n                            >\n                              <td className=\"px-6 py-4\">{result.title}</td>\n                              <td className=\"px-6 py-4\">\n                                <div className=\"bg-secondary px-4 py-1 rounded-full w-max text-white\">\n                                  {result.total_contacts}\n                                </div>\n                              </td>\n                              <td className=\"px-6 py-4\">\n                                <div className=\"bg-secondary px-4 py-1 rounded-full w-max text-white\">\n                                  {result.total_members}\n                                </div>\n                              </td>\n                              <td className=\"px-6 py-4 flex items-center justify-start gap-2\">\n                                {/*<div*/}\n                                {/*    onClick={() => handleEditGrpContact(result)}*/}\n                                {/*    className={\"bg-gradient-to-r from-tertiary-green-30 from-0% to-tertiary-green-50 to-100% rounded-full px-2 py-2 cursor-pointer\"}>*/}\n                                {/*  <AiOutlineUserAdd className={\"text-white size-4\"} />*/}\n                                {/*</div>*/}\n                                <div\n                                    onClick={() => editGroup(result, true)}\n                                    className={\"bg-gradient-to-r from-tertiary-green-60 to-tertiary-green-70 rounded-full px-2 py-2 cursor-pointer\"}>\n                                  <BiEdit className={\"text-white size-4\"} />\n                                </div>\n                                <div\n                                    onClick={() => deleteGroup(result.id)}\n                                    className={\"bg-red-500 rounded-full px-2 py-2 cursor-pointer\"}>\n                                  <FiDelete className={\"text-white size-4\"} />\n                                </div>\n                              </td>\n                            </tr>\n                          );\n                        })}\n                      </>\n                    )}\n                  </>\n                )}\n              </tbody>\n            </table>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default GroupConTbl;\n","import React from \"react\";\nimport { ContactTbl, GroupConTbl } from \"../../components/contact\";\n\nconst Contacts = () => {\n  return (\n    <section className=\"\">\n      <ContactTbl />\n      {/*<GroupConTbl />*/}\n    </section>\n  );\n};\n\nexport default Contacts;\n","export const base64ToBlob = (base64, mimeType = \"image/jpeg\") => {\n  // Split the base64 string to handle the data URL format\n  const byteString = atob(base64.split(\",\")[1]); // Decode base64 string\n  const arrayBuffer = new ArrayBuffer(byteString.length); // Create an ArrayBuffer\n  const uint8Array = new Uint8Array(arrayBuffer); // Create a typed array\n\n  // Fill the typed array with the binary data\n  for (let i = 0; i < byteString.length; i++) {\n    uint8Array[i] = byteString.charCodeAt(i);\n  }\n\n  // Create and return a Blob with the specified MIME type\n  return new Blob([uint8Array], { type: mimeType });\n};\n"],"names":["_ref","closeModal","handleChange","profileId","useSelector","state","profile","profilePic","setProfilePic","useState","loading","setLoading","register","handleSubmit","formState","errors","useForm","ReactDOM","_jsx","id","tabIndex","className","children","_jsxs","type","onClick","xmlns","fill","viewBox","stroke","strokeLinecap","strokeLinejoin","strokeWidth","d","onSubmit","async","profileBlob","base64ToBlob","body","first_name","data","last_name","phone","website","webiste","email","photo","profile_id","response","axiosInstance","post","status","toast","success","message","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","theme","err","error","encType","htmlFor","Input","nameField","intent","size","classes","roundness","placeholder","maxLength","minLength","src","alt","accept","onChange","file","e","target","files","options","maxSizeMB","useWebWorker","compressedFile","imageCompression","reader","FileReader","onloadend","result","readAsDataURL","console","log","Button","document","editData","profilePicEdit","setProfilePicEdit","pic","profilePicInputRef","useRef","reset","useEffect","prev","_editData$data","contact_id","_Fragment","MdCancel","rmEditPic","current","value","rmEditProPic","handleProfilePic","click","ref","ContactTbl","isOpenModal","setIsOpenModal","isEditOpenModal","setIsEditOpenModal","contacts","setContacts","change","setChange","setEditData","action","getContacts","eventAction","openAddContactModal","AddContactModal","closeAddContactModal","EditContactModal","closeEditContactModal","scope","colSpan","length","map","handleEditContact","BiEdit","deleteContact","FiDelete","Contacts","base64","mimeType","arguments","byteString","atob","split","arrayBuffer","ArrayBuffer","uint8Array","Uint8Array","i","charCodeAt","Blob"],"sourceRoot":""}