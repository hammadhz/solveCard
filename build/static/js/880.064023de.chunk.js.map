{"version":3,"file":"static/js/880.064023de.chunk.js","mappings":"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","sources":["components/modal/AddContactModal.js","components/modal/EditContactModal.js","components/contact/ContactTbl.js","components/modal/AddGroupContModal.js","components/modal/EditGrpContact.js","components/contact/GroupConTbl.js","pages/Contact/Contacts.js","utils/base64ToBlob.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Button, Input } from \"../form\";\r\nimport axiosInstance from \"../../utils/axiosInstance\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { toast } from \"react-toastify\";\r\nimport imageCompression from \"browser-image-compression\";\r\nimport { base64ToBlob } from \"../../utils/base64ToBlob\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst AddContactModal = ({ closeModal, handleChange }) => {\r\n  const profileId = useSelector((state) => state.profile.profileId);\r\n\r\n  const [profilePic, setProfilePic] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors },\r\n  } = useForm();\r\n\r\n  const handleProfilePicChange = async (e) => {\r\n    const file = e.target.files[0];\r\n    const maxFileSize = 4 * 1024 * 1024;\r\n    if (file) {\r\n      if (file.size > maxFileSize) {\r\n        toast.error(\"picture size must be less than 6MB.\", {\r\n          position: \"bottom-right\",\r\n          autoClose: 5000,\r\n          hideProgressBar: true,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n          theme: \"light\",\r\n        });\r\n        return;\r\n      }\r\n      try {\r\n        const options = {\r\n          maxSizeMB: 6,\r\n          useWebWorker: true,\r\n        };\r\n        const compressedFile = await imageCompression(file, options);\r\n        const reader = new FileReader();\r\n        reader.onloadend = () => {\r\n          setProfilePic(reader.result);\r\n        };\r\n        reader.readAsDataURL(compressedFile);\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    }\r\n  };\r\n\r\n  const addContactSubmit = async (data) => {\r\n    let profileBlob = base64ToBlob(profilePic);\r\n    setLoading(true);\r\n    const body = {\r\n      first_name: data.first_name,\r\n      last_name: data.last_name,\r\n      phone: data?.phone,\r\n      website: data?.webiste,\r\n      email: data?.email,\r\n      photo: profileBlob,\r\n      profile_id: profileId,\r\n    };\r\n    try {\r\n      const response = await axiosInstance.post(\"/addPhoneContact\", body);\r\n\r\n      if (response.status === 200) {\r\n        toast.success(response.data.message, {\r\n          position: \"bottom-right\",\r\n          autoClose: 5000,\r\n          hideProgressBar: true,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n          theme: \"light\",\r\n        });\r\n        handleChange();\r\n        closeModal();\r\n      }\r\n    } catch (err) {\r\n      setLoading(false);\r\n      toast.error(err.response.data.message, {\r\n        position: \"bottom-right\",\r\n        autoClose: 5000,\r\n        hideProgressBar: true,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n        theme: \"light\",\r\n      });\r\n    }\r\n  };\r\n\r\n  return ReactDOM.createPortal(\r\n    <div\r\n      id=\"authentication-modal\"\r\n      tabIndex=\"-1\"\r\n      aria-hidden=\"false\"\r\n      className=\"overflow-y-auto overflow-x-hidden fixed top-0 right-0 left-0 z-50 flex justify-center items-center w-full h-full bg-black bg-opacity-50\"\r\n    >\r\n      <div className=\"relative p-4 w-full max-w-lg max-h-full\">\r\n        {\" \"}\r\n        {/* Expanded width */}\r\n        <div className=\"relative bg-white rounded-lg shadow\">\r\n          <div className=\"flex items-center justify-between p-4 md:p-5 border-b rounded-t\">\r\n            <h3 className=\"text-xl font-semibold text-gray-900 \">\r\n              {\"Add Contact\"}\r\n            </h3>\r\n            <button\r\n              type=\"button\"\r\n              onClick={closeModal}\r\n              className=\"text-gray-400 bg-transparent hover:bg-gray-200 hover:text-gray-900 rounded-lg text-sm w-8 h-8 inline-flex justify-center items-center \"\r\n            >\r\n              <svg\r\n                className=\"w-3 h-3\"\r\n                aria-hidden=\"true\"\r\n                xmlns=\"http://www.w3.org/2000/svg\"\r\n                fill=\"none\"\r\n                viewBox=\"0 0 14 14\"\r\n              >\r\n                <path\r\n                  stroke=\"currentColor\"\r\n                  strokeLinecap=\"round\"\r\n                  strokeLinejoin=\"round\"\r\n                  strokeWidth=\"2\"\r\n                  d=\"m1 1 6 6m0 0 6 6M7 7l6-6M7 7l-6 6\"\r\n                />\r\n              </svg>\r\n              <span className=\"sr-only\">Close modal</span>\r\n            </button>\r\n          </div>\r\n          <div className=\"p-4 md:p-5\">\r\n            <form\r\n              className=\"space-y-4\"\r\n              onSubmit={handleSubmit(addContactSubmit)}\r\n              encType=\"multipart/form-data\"\r\n            >\r\n              <div className=\"flex space-x-4\">\r\n                <div className=\"w-full\">\r\n                  <label\r\n                    htmlFor=\"first-name\"\r\n                    className=\"block mb-2 text-sm font-medium text-gray-900 \"\r\n                  >\r\n                    First Name\r\n                  </label>\r\n                  <Input\r\n                    type={\"text\"}\r\n                    nameField={\"first_name\"}\r\n                    intent={\"primary\"}\r\n                    id={\"first-name\"}\r\n                    size={\"md\"}\r\n                    classes={\"w-full block p-2.5 \"}\r\n                    roundness={\"round-sm\"}\r\n                    placeholder={\"first name\"}\r\n                    register={register}\r\n                  />\r\n                  {/* <input\r\n                    type=\"text\"\r\n                    name=\"first-name\"\r\n                    id=\"first-name\"\r\n                    className=\"bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 dark:bg-gray-600 dark:border-gray-500 dark:placeholder-gray-400 dark:text-white\"\r\n                    placeholder=\"John\"\r\n                    required\r\n                  /> */}\r\n                </div>\r\n                <div className=\"w-full\">\r\n                  <label\r\n                    htmlFor=\"last-name\"\r\n                    className=\"block mb-2 text-sm font-medium text-gray-900 \"\r\n                  >\r\n                    Last Name\r\n                  </label>\r\n                  <Input\r\n                    type={\"text\"}\r\n                    nameField={\"last_name\"}\r\n                    intent={\"primary\"}\r\n                    id={\"last-name\"}\r\n                    size={\"md\"}\r\n                    classes={\"w-full block p-2.5 \"}\r\n                    roundness={\"round-sm\"}\r\n                    placeholder={\"Last Name\"}\r\n                    register={register}\r\n                  />\r\n                  {/* <input\r\n                    type=\"text\"\r\n                    name=\"last-name\"\r\n                    id=\"last-name\"\r\n                    className=\"bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 dark:bg-gray-600 dark:border-gray-500 dark:placeholder-gray-400 dark:text-white\"\r\n                    placeholder=\"Doe\"\r\n                    required\r\n                  /> */}\r\n                </div>\r\n              </div>\r\n              {/* <div className=\"flex space-x-4\"> */}\r\n              <div className=\"w-full\">\r\n                <label\r\n                  htmlFor=\"email\"\r\n                  className=\"block mb-2 text-sm font-medium text-gray-900 \"\r\n                >\r\n                  Your Email\r\n                </label>\r\n                <Input\r\n                  type={\"email\"}\r\n                  nameField={\"email\"}\r\n                  intent={\"primary\"}\r\n                  id={\"email\"}\r\n                  size={\"md\"}\r\n                  classes={\"w-full block p-2.5 \"}\r\n                  roundness={\"round-sm\"}\r\n                  placeholder={\"Email\"}\r\n                  register={register}\r\n                />\r\n                {/* <input\r\n                    type=\"email\"\r\n                    name=\"email\"\r\n                    id=\"email\"\r\n                    className=\"bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 dark:bg-gray-600 dark:border-gray-500 dark:placeholder-gray-400 dark:text-white\"\r\n                    placeholder=\"name@company.com\"\r\n                    required\r\n                  /> */}\r\n              </div>\r\n              <div className=\"w-full\">\r\n                <label\r\n                  htmlFor=\"phone\"\r\n                  className=\"block mb-2 text-sm font-medium text-gray-900 \"\r\n                >\r\n                  Phone\r\n                </label>\r\n                <Input\r\n                  type={\"tel\"}\r\n                  nameField={\"phone\"}\r\n                  intent={\"primary\"}\r\n                  id={\"phone\"}\r\n                  size={\"md\"}\r\n                  classes={\"w-full block p-2.5 \"}\r\n                  roundness={\"round-sm\"}\r\n                  placeholder={\"phone\"}\r\n                  maxLength={\"11\"}\r\n                  minLength={\"10\"}\r\n                  register={register}\r\n                />\r\n                {/* <input\r\n                    type=\"tel\"\r\n                    name=\"phone\"\r\n                    id=\"phone\"\r\n                    className=\"bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 dark:bg-gray-600 dark:border-gray-500 dark:placeholder-gray-400 dark:text-white\"\r\n                    placeholder=\"123-456-7890\"\r\n                    required\r\n                  /> */}\r\n              </div>\r\n              <div className=\"w-full\">\r\n                <label\r\n                  htmlFor=\"website\"\r\n                  className=\"block mb-2 text-sm font-medium text-gray-900 \"\r\n                >\r\n                  Website\r\n                </label>\r\n                <Input\r\n                  type={\"text\"}\r\n                  nameField={\"website\"}\r\n                  intent={\"primary\"}\r\n                  id={\"website\"}\r\n                  size={\"md\"}\r\n                  classes={\"w-full block p-2.5 \"}\r\n                  roundness={\"round-sm\"}\r\n                  placeholder={\"Add website link\"}\r\n                  register={register}\r\n                />\r\n                {/* <input\r\n                    type=\"tel\"\r\n                    name=\"phone\"\r\n                    id=\"phone\"\r\n                    className=\"bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 dark:bg-gray-600 dark:border-gray-500 dark:placeholder-gray-400 dark:text-white\"\r\n                    placeholder=\"123-456-7890\"\r\n                    required\r\n                  /> */}\r\n              </div>\r\n              {/* </div> */}\r\n              <div>\r\n                <label\r\n                  htmlFor=\"profile-pic\"\r\n                  className=\"block mb-2 text-center text-sm font-medium text-gray-900 \"\r\n                >\r\n                  Profile Picture\r\n                </label>\r\n                <div className=\"flex items-center justify-center mb-4\">\r\n                  <label htmlFor=\"profile-pic\" className=\"cursor-pointer\">\r\n                    <div className=\"relative w-16 h-16 overflow-hidden bg-gray-200 rounded-full\">\r\n                      {profilePic ? (\r\n                        <img\r\n                          src={profilePic}\r\n                          alt=\"Profile\"\r\n                          className=\"object-cover w-full h-full\"\r\n                        />\r\n                      ) : (\r\n                        <span className=\"flex items-center justify-center w-full h-full text-gray-400\">\r\n                          +\r\n                        </span>\r\n                      )}\r\n                    </div>\r\n                  </label>\r\n                  <input\r\n                    type=\"file\"\r\n                    id=\"profile-pic\"\r\n                    accept=\"image/*\"\r\n                    onChange={handleProfilePicChange}\r\n                    className=\"hidden\"\r\n                  />\r\n                </div>\r\n              </div>\r\n              <Button\r\n                intent={\"primary\"}\r\n                size={\"lg\"}\r\n                children={\"Add\"}\r\n                classes={\"w-full !p-2\"}\r\n                roundness={\"round\"}\r\n                loading={loading}\r\n              />\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>,\r\n    document.body\r\n  );\r\n};\r\n\r\nexport default AddContactModal;\r\n","import React, { useEffect, useState, useRef } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Button, Input } from \"../form\";\r\nimport axiosInstance from \"../../utils/axiosInstance\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { toast } from \"react-toastify\";\r\nimport imageCompression from \"browser-image-compression\";\r\nimport { base64ToBlob } from \"../../utils/base64ToBlob\";\r\nimport { MdCancel } from \"react-icons/md\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst EditContactModal = ({ closeModal, editData, handleChange }) => {\r\n  const profileId = useSelector((state) => state.profile.profileId);\r\n  const [profilePic, setProfilePic] = useState(\"\");\r\n  const [profilePicEdit, setProfilePicEdit] = useState({\r\n    pic: \"\",\r\n  });\r\n  const [loading, setLoading] = useState(false);\r\n  const profilePicInputRef = useRef();\r\n\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors },\r\n    reset,\r\n  } = useForm();\r\n\r\n  const handleProfilePic = () => {\r\n    profilePicInputRef.current.click();\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (editData) {\r\n      reset({\r\n        first_name: editData.data.first_name ? editData.data.first_name : \"\",\r\n        last_name: editData.data.last_name ? editData.data.last_name : \"\",\r\n        email: editData.data.email ? editData.data.email : \"\",\r\n        phone: editData.data.phone ? editData.data.phone : \"\",\r\n        website: editData.data.website ? editData.data.website : \"\",\r\n      });\r\n      setProfilePicEdit((prev) => ({\r\n        ...prev,\r\n        pic: editData?.data?.photo,\r\n      }));\r\n    }\r\n  }, [editData, reset]);\r\n\r\n  const handleProfilePicChange = async (e) => {\r\n    const file = e.target.files[0];\r\n    const maxFileSize = 4 * 1024 * 1024;\r\n    if (file) {\r\n      if (file.size > maxFileSize) {\r\n        toast.error(\"picture size must be less than 6MB.\", {\r\n          position: \"bottom-right\",\r\n          autoClose: 5000,\r\n          hideProgressBar: true,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n          theme: \"light\",\r\n        });\r\n        return;\r\n      }\r\n      try {\r\n        const options = {\r\n          maxSizeMB: 6,\r\n          useWebWorker: true,\r\n        };\r\n        const compressedFile = await imageCompression(file, options);\r\n        const reader = new FileReader();\r\n\r\n        reader.onloadend = () => {\r\n          setProfilePic(reader.result);\r\n        };\r\n        reader.readAsDataURL(compressedFile);\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    }\r\n  };\r\n\r\n  const addContactSubmit = async (data) => {\r\n    let profileBlob = base64ToBlob(profilePic);\r\n    setLoading(true);\r\n    try {\r\n      const body = {\r\n        first_name: data.first_name,\r\n        last_name: data.last_name,\r\n        phone: data?.phone,\r\n        website: data?.webiste,\r\n        email: data?.email,\r\n        photo: profileBlob,\r\n        profile_id: profileId,\r\n        contact_id: editData.data.id,\r\n      };\r\n      const response = await axiosInstance.post(\"/updatePhoneContact\", body);\r\n      if (response.status === 200) {\r\n        toast.success(response.data.message, {\r\n          position: \"bottom-right\",\r\n          autoClose: 5000,\r\n          hideProgressBar: true,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n          theme: \"light\",\r\n        });\r\n        handleChange();\r\n        closeModal();\r\n      }\r\n    } catch (err) {\r\n      setLoading(false);\r\n      toast.error(err.response.data.message, {\r\n        position: \"bottom-right\",\r\n        autoClose: 5000,\r\n        hideProgressBar: true,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n        theme: \"light\",\r\n      });\r\n    }\r\n  };\r\n\r\n  const rmEditPic = () => {\r\n    setProfilePicEdit((prev) => ({\r\n      ...prev,\r\n      pic: \"\",\r\n    }));\r\n    profilePicInputRef.current.value = null;\r\n  };\r\n\r\n  const rmEditProPic = () => {\r\n    setProfilePic(\"\");\r\n    profilePicInputRef.current.value = null;\r\n  };\r\n\r\n  return ReactDOM.createPortal(\r\n    <div\r\n      id=\"authentication-modal\"\r\n      tabIndex=\"-1\"\r\n      aria-hidden=\"false\"\r\n      className=\"overflow-y-auto overflow-x-hidden fixed top-0 right-0 left-0 z-50 flex justify-center items-center w-full h-full bg-black bg-opacity-50\"\r\n    >\r\n      <div className=\"relative p-4 w-full max-w-lg max-h-full\">\r\n        {\" \"}\r\n        {/* Expanded width */}\r\n        <div className=\"relative bg-white rounded-lg shadow\">\r\n          <div className=\"flex items-center justify-between p-4 md:p-5 border-b rounded-t\">\r\n            <h3 className=\"text-xl font-semibold text-gray-900 \">\r\n              {\"Edit Contact\"}\r\n            </h3>\r\n            <button\r\n              type=\"button\"\r\n              onClick={closeModal}\r\n              className=\"text-gray-400 bg-transparent hover:bg-gray-200 hover:text-gray-900 rounded-lg text-sm w-8 h-8 inline-flex justify-center items-center \"\r\n            >\r\n              <svg\r\n                className=\"w-3 h-3\"\r\n                aria-hidden=\"true\"\r\n                xmlns=\"http://www.w3.org/2000/svg\"\r\n                fill=\"none\"\r\n                viewBox=\"0 0 14 14\"\r\n              >\r\n                <path\r\n                  stroke=\"currentColor\"\r\n                  strokeLinecap=\"round\"\r\n                  strokeLinejoin=\"round\"\r\n                  strokeWidth=\"2\"\r\n                  d=\"m1 1 6 6m0 0 6 6M7 7l6-6M7 7l-6 6\"\r\n                />\r\n              </svg>\r\n              <span className=\"sr-only\">Close modal</span>\r\n            </button>\r\n          </div>\r\n          <div className=\"p-4 md:p-5\">\r\n            <form\r\n              className=\"space-y-4\"\r\n              onSubmit={handleSubmit(addContactSubmit)}\r\n              encType=\"multipart/form-data\"\r\n            >\r\n              <div className=\"flex space-x-4\">\r\n                <div className=\"w-full\">\r\n                  <label\r\n                    htmlFor=\"first-name\"\r\n                    className=\"block mb-2 text-sm font-medium text-gray-900 \"\r\n                  >\r\n                    First Name\r\n                  </label>\r\n                  <Input\r\n                    type={\"text\"}\r\n                    nameField={\"first_name\"}\r\n                    intent={\"primary\"}\r\n                    id={\"first-name\"}\r\n                    size={\"md\"}\r\n                    classes={\"w-full block p-2.5 \"}\r\n                    roundness={\"round-sm\"}\r\n                    placeholder={\"first name\"}\r\n                    register={register}\r\n                  />\r\n                  {/* <input\r\n                    type=\"text\"\r\n                    name=\"first-name\"\r\n                    id=\"first-name\"\r\n                    className=\"bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 dark:bg-gray-600 dark:border-gray-500 dark:placeholder-gray-400 dark:text-white\"\r\n                    placeholder=\"John\"\r\n                    required\r\n                  /> */}\r\n                </div>\r\n                <div className=\"w-full\">\r\n                  <label\r\n                    htmlFor=\"last-name\"\r\n                    className=\"block mb-2 text-sm font-medium text-gray-900 \"\r\n                  >\r\n                    Last Name\r\n                  </label>\r\n                  <Input\r\n                    type={\"text\"}\r\n                    nameField={\"last_name\"}\r\n                    intent={\"primary\"}\r\n                    id={\"last-name\"}\r\n                    size={\"md\"}\r\n                    classes={\"w-full block p-2.5 \"}\r\n                    roundness={\"round-sm\"}\r\n                    placeholder={\"Last Name\"}\r\n                    register={register}\r\n                  />\r\n                  {/* <input\r\n                    type=\"text\"\r\n                    name=\"last-name\"\r\n                    id=\"last-name\"\r\n                    className=\"bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 dark:bg-gray-600 dark:border-gray-500 dark:placeholder-gray-400 dark:text-white\"\r\n                    placeholder=\"Doe\"\r\n                    required\r\n                  /> */}\r\n                </div>\r\n              </div>\r\n              {/* <div className=\"flex space-x-4\"> */}\r\n              <div className=\"w-full\">\r\n                <label\r\n                  htmlFor=\"email\"\r\n                  className=\"block mb-2 text-sm font-medium text-gray-900 \"\r\n                >\r\n                  Your Email\r\n                </label>\r\n                <Input\r\n                  type={\"email\"}\r\n                  nameField={\"email\"}\r\n                  intent={\"primary\"}\r\n                  id={\"email\"}\r\n                  size={\"md\"}\r\n                  classes={\"w-full block p-2.5 \"}\r\n                  roundness={\"round-sm\"}\r\n                  placeholder={\"Email\"}\r\n                  register={register}\r\n                />\r\n                {/* <input\r\n                    type=\"email\"\r\n                    name=\"email\"\r\n                    id=\"email\"\r\n                    className=\"bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 dark:bg-gray-600 dark:border-gray-500 dark:placeholder-gray-400 dark:text-white\"\r\n                    placeholder=\"name@company.com\"\r\n                    required\r\n                  /> */}\r\n              </div>\r\n              <div className=\"w-full\">\r\n                <label\r\n                  htmlFor=\"phone\"\r\n                  className=\"block mb-2 text-sm font-medium text-gray-900 \"\r\n                >\r\n                  Phone\r\n                </label>\r\n                <Input\r\n                  type={\"tel\"}\r\n                  nameField={\"phone\"}\r\n                  intent={\"primary\"}\r\n                  id={\"phone\"}\r\n                  size={\"md\"}\r\n                  classes={\"w-full block p-2.5 \"}\r\n                  roundness={\"round-sm\"}\r\n                  placeholder={\"phone\"}\r\n                  maxLength={\"11\"}\r\n                  minLength={\"10\"}\r\n                  register={register}\r\n                />\r\n                {/* <input\r\n                    type=\"tel\"\r\n                    name=\"phone\"\r\n                    id=\"phone\"\r\n                    className=\"bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 dark:bg-gray-600 dark:border-gray-500 dark:placeholder-gray-400 dark:text-white\"\r\n                    placeholder=\"123-456-7890\"\r\n                    required\r\n                  /> */}\r\n              </div>\r\n              <div className=\"w-full\">\r\n                <label\r\n                  htmlFor=\"website\"\r\n                  className=\"block mb-2 text-sm font-medium text-gray-900 \"\r\n                >\r\n                  Website\r\n                </label>\r\n                <Input\r\n                  type={\"text\"}\r\n                  nameField={\"website\"}\r\n                  intent={\"primary\"}\r\n                  id={\"website\"}\r\n                  size={\"md\"}\r\n                  classes={\"w-full block p-2.5 \"}\r\n                  roundness={\"round-sm\"}\r\n                  placeholder={\"Add website link\"}\r\n                  register={register}\r\n                />\r\n                {/* <input\r\n                    type=\"tel\"\r\n                    name=\"phone\"\r\n                    id=\"phone\"\r\n                    className=\"bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 dark:bg-gray-600 dark:border-gray-500 dark:placeholder-gray-400 dark:text-white\"\r\n                    placeholder=\"123-456-7890\"\r\n                    required\r\n                  /> */}\r\n              </div>\r\n              {/* </div> */}\r\n              <div>\r\n                <label className=\"block mb-2 text-center text-sm font-medium text-gray-900 \">\r\n                  Profile Picture\r\n                </label>\r\n                <div className=\"flex items-center justify-center mb-4\">\r\n                  <label htmlFor=\"\" className=\"\">\r\n                    <div className=\"relative w-16 h-16 overflow-hidden bg-gray-200 rounded-full\">\r\n                      {profilePicEdit.pic && (\r\n                        <>\r\n                          <img\r\n                            src={`${process.env.REACT_APP_SERVER}${profilePicEdit.pic}`}\r\n                            alt=\"Profile\"\r\n                            className=\"object-cover w-full h-full\"\r\n                          />\r\n                          <MdCancel\r\n                            onClick={rmEditPic}\r\n                            className=\"absolute top-3 right-2 cursor-pointer text-black\"\r\n                          />\r\n                        </>\r\n                      )}\r\n                      {profilePic && (\r\n                        <>\r\n                          <img\r\n                            src={profilePic}\r\n                            alt=\"Profile\"\r\n                            className=\"object-cover w-full h-full\"\r\n                          />\r\n                          <MdCancel\r\n                            onClick={rmEditProPic}\r\n                            className=\"absolute top-3 right-2 cursor-pointer text-black\"\r\n                          />\r\n                        </>\r\n                      )}\r\n                      {!profilePic && !profilePicEdit.pic && (\r\n                        <span\r\n                          onClick={handleProfilePic}\r\n                          className=\"flex items-center justify-center w-full h-full text-gray-400\"\r\n                        >\r\n                          +\r\n                        </span>\r\n                      )}\r\n                    </div>\r\n                  </label>\r\n                  <input\r\n                    type=\"file\"\r\n                    ref={profilePicInputRef}\r\n                    id=\"profile-pic\"\r\n                    accept=\".jpg, .jpeg, .png\"\r\n                    onChange={handleProfilePicChange}\r\n                    className=\"hidden\"\r\n                  />\r\n                </div>\r\n              </div>\r\n              <Button\r\n                intent={\"primary\"}\r\n                size={\"lg\"}\r\n                children={\"Add\"}\r\n                classes={\"w-full !p-2\"}\r\n                roundness={\"round\"}\r\n                loading={loading}\r\n              />\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>,\r\n    document.body\r\n  );\r\n};\r\n\r\nexport default EditContactModal;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Button } from \"../form\";\r\nimport AddContactModal from \"../modal/AddContactModal\";\r\nimport axiosInstance from \"../../utils/axiosInstance\";\r\nimport { toast } from \"react-toastify\";\r\nimport EditContactModal from \"../modal/EditContactModal\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst ContactTbl = () => {\r\n  const profileId = useSelector((state) => state.profile.profileId);\r\n\r\n  const [isOpenModal, setIsOpenModal] = useState(false);\r\n  const [isEditOpenModal, setIsEditOpenModal] = useState(false);\r\n  const [contacts, setContacts] = useState([]);\r\n  const [change, setChange] = useState(false);\r\n  const [loading, setLoading] = useState(false);\r\n  const [editData, setEditData] = useState({\r\n    action: \"edit\",\r\n    data: null,\r\n  });\r\n\r\n  const openAddContactModal = () => {\r\n    setIsOpenModal(!isOpenModal);\r\n  };\r\n\r\n  const closeAddContactModal = () => {\r\n    setIsOpenModal(!isOpenModal);\r\n  };\r\n\r\n  const closeEditContactModal = () => {\r\n    setIsEditOpenModal(!isEditOpenModal);\r\n  };\r\n\r\n  async function getContacts() {\r\n    try {\r\n      setLoading(true);\r\n      const response = await axiosInstance.post(\"/phoneContacts\", {\r\n        profile_id: profileId,\r\n      });\r\n      if (response.status === 200) {\r\n        setContacts(response.data.contacts);\r\n        setLoading(false);\r\n      }\r\n    } catch (error) {\r\n      setLoading(false);\r\n      toast.error(error.response.data.message, {\r\n        position: \"bottom-right\",\r\n        autoClose: 5000,\r\n        hideProgressBar: true,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n        theme: \"light\",\r\n      });\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    getContacts();\r\n  }, [change]);\r\n\r\n  const deleteContact = async (id) => {\r\n    try {\r\n      const response = await axiosInstance.post(\"/removeContact\", {\r\n        contact_id: id,\r\n        profile_id: profileId,\r\n      });\r\n      if (response.status === 200) {\r\n        toast.success(response.data.message, {\r\n          position: \"bottom-right\",\r\n          autoClose: 5000,\r\n          hideProgressBar: true,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n          theme: \"light\",\r\n        });\r\n      }\r\n      setChange(!change);\r\n    } catch (error) {\r\n      toast.error(error.response.data.message, {\r\n        position: \"bottom-right\",\r\n        autoClose: 5000,\r\n        hideProgressBar: true,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n        theme: \"light\",\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleEditContact = (data) => {\r\n    setIsEditOpenModal(true);\r\n    setEditData((prev) => ({\r\n      ...prev,\r\n      data: data,\r\n    }));\r\n  };\r\n\r\n  const handleChange = () => {\r\n    setChange(!change);\r\n  };\r\n\r\n  return (\r\n    <div className=\"w-full min-h-[150px] bg-primary rounded-2xl p-6 mb-20\">\r\n      <div className=\"flex flex-col gap-4 w-full\">\r\n        <div className=\"w-full h-16  rounded-xl flex justify-between items-center\">\r\n          <h1 className=\"font-inter font-bold text-2xl\">Contacts</h1>\r\n          <Button\r\n            intent={\"primary\"}\r\n            size={\"lg\"}\r\n            children={\"Add Contact\"}\r\n            roundness={\"round\"}\r\n            classes={\"\"}\r\n            type={\"button\"}\r\n            eventAction={openAddContactModal}\r\n          />\r\n          {isOpenModal && (\r\n            <AddContactModal\r\n              handleChange={handleChange}\r\n              closeModal={closeAddContactModal}\r\n            />\r\n          )}\r\n          {isEditOpenModal && (\r\n            <EditContactModal\r\n              editData={editData}\r\n              handleChange={handleChange}\r\n              closeModal={closeEditContactModal}\r\n            />\r\n          )}\r\n        </div>\r\n        <div className=\"w-full min-h-[150px]  bg-white rounded-xl\">\r\n          <div className=\"w-full h-full  overflow-auto p-3\">\r\n            <table className=\"w-full text-sm text-left rtl:text-right text-gray-500 dark:text-gray-400\">\r\n              <thead className=\"text-xs text-gray-700 uppercase bg-gray-50 dark:bg-gray-700 dark:text-gray-400\">\r\n                <tr>\r\n                  <th scope=\"col\" className=\"px-6 py-3\">\r\n                    User\r\n                  </th>\r\n\r\n                  <th scope=\"col\" className=\"px-6 py-3\">\r\n                    Email\r\n                  </th>\r\n                  <th scope=\"col\" className=\"px-6 py-3\">\r\n                    Phone\r\n                  </th>\r\n                  <th scope=\"col\" className=\"px-6 py-3\">\r\n                    Action\r\n                  </th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {loading ? (\r\n                  <tr className=\"bg-white border-b dark:bg-gray-800 dark:border-gray-700\">\r\n                    <td\r\n                      colSpan={4}\r\n                      className=\"py-3 text-center text-gray-500 dark:text-gray-400\"\r\n                    >\r\n                      Loading....\r\n                    </td>\r\n                  </tr>\r\n                ) : (\r\n                  <>\r\n                    {contacts.length === 0 ? (\r\n                      <tr className=\"bg-white border-b dark:bg-gray-800 dark:border-gray-700\">\r\n                        <td\r\n                          colSpan={4}\r\n                          className=\"py-3 text-center text-gray-500 dark:text-gray-400\"\r\n                        >\r\n                          No Contacts\r\n                        </td>\r\n                      </tr>\r\n                    ) : (\r\n                      <>\r\n                        {contacts?.map((result) => {\r\n                          return (\r\n                            <tr\r\n                              key={result.id}\r\n                              className=\"bg-white border-b dark:bg-gray-800 dark:border-gray-700 hover:bg-gray-50 dark:hover:bg-gray-600\"\r\n                            >\r\n                              <td className=\"flex items-center px-6 py-4 text-gray-900 whitespace-nowrap dark:text-white\">\r\n                                <img\r\n                                  className=\"w-10 h-10 rounded-full\"\r\n                                  src={`${process.env.REACT_APP_SERVER}${result.photo}`}\r\n                                  alt=\"phot\"\r\n                                />\r\n                                <div className=\"ps-3\">\r\n                                  <div className=\"text-base font-semibold\">\r\n                                    {result?.first_name} {result?.last_name}\r\n                                  </div>\r\n                                </div>\r\n                              </td>\r\n                              <td className=\"px-6 py-4\">{result.email}</td>\r\n                              <td className=\"px-6 py-4\">{result?.phone}</td>\r\n                              <td className=\"px-6 py-4\">\r\n                                <p\r\n                                  onClick={() => handleEditContact(result)}\r\n                                  className=\"font-medium cursor-pointer text-blue-600 dark:text-blue-500 hover:underline\"\r\n                                >\r\n                                  Edit\r\n                                </p>\r\n                                <p\r\n                                  onClick={() => deleteContact(result.id)}\r\n                                  className=\"font-medium cursor-pointer text-blue-600 dark:text-blue-500 hover:underline\"\r\n                                >\r\n                                  Delete\r\n                                </p>\r\n                              </td>\r\n                            </tr>\r\n                          );\r\n                        })}\r\n                      </>\r\n                    )}\r\n                  </>\r\n                )}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ContactTbl;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Button, Input } from \"../form\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport axiosInstance from \"../../utils/axiosInstance\";\r\nimport { toast } from \"react-toastify\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst AddGroupContModal = ({ grpData, closeModal, handleChange }) => {\r\n  // const [description, setDescription] = useState(\"\");\r\n  const profileId = useSelector((state) => state.profile.profileId);\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors },\r\n    reset,\r\n  } = useForm();\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (grpData) {\r\n      reset({\r\n        title: grpData?.data?.title,\r\n      });\r\n    }\r\n  }, [grpData, reset]);\r\n\r\n  const submitAddGroup = async (data) => {\r\n    try {\r\n      setLoading(true);\r\n      let response;\r\n      if (grpData?.isEdit) {\r\n        response = await axiosInstance.post(\"/updateGroup\", {\r\n          title: data.title,\r\n          group_id: grpData?.data?.id,\r\n          profile_id: profileId,\r\n          active: \"1\",\r\n        });\r\n      } else {\r\n        response = await axiosInstance.post(\"/addGroup\", {\r\n          title: data.title,\r\n          profile_id: profileId,\r\n        });\r\n      }\r\n      if (response.status === 200) {\r\n        toast.success(response.data.message, {\r\n          position: \"bottom-right\",\r\n          autoClose: 5000,\r\n          hideProgressBar: true,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n          theme: \"light\",\r\n        });\r\n        handleChange();\r\n        closeModal();\r\n      }\r\n    } catch (error) {\r\n      setLoading(false);\r\n      console.error(error);\r\n      toast.error(error.response.data.message, {\r\n        position: \"bottom-right\",\r\n        autoClose: 5000,\r\n        hideProgressBar: true,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n        theme: \"light\",\r\n      });\r\n    }\r\n  };\r\n\r\n  return ReactDOM.createPortal(\r\n    <div\r\n      id=\"authentication-modal\"\r\n      tabIndex=\"-1\"\r\n      aria-hidden=\"false\"\r\n      className=\"overflow-y-auto overflow-x-hidden fixed top-0 right-0 left-0 z-50 flex justify-center items-center w-full h-full bg-black bg-opacity-50\"\r\n    >\r\n      <div className=\"relative p-4 w-full max-w-lg max-h-full\">\r\n        <div className=\"relative bg-white rounded-lg shadow \">\r\n          <div className=\"flex items-center justify-between p-4 md:p-5 border-b rounded-t \">\r\n            <h3 className=\"text-xl font-semibold text-gray-900 \">Add Group</h3>\r\n            <button\r\n              type=\"button\"\r\n              onClick={closeModal}\r\n              className=\"text-gray-400 bg-transparent hover:bg-gray-200 hover:text-gray-900 rounded-lg text-sm w-8 h-8 inline-flex justify-center items-center\"\r\n            >\r\n              <svg\r\n                className=\"w-3 h-3\"\r\n                aria-hidden=\"true\"\r\n                xmlns=\"http://www.w3.org/2000/svg\"\r\n                fill=\"none\"\r\n                viewBox=\"0 0 14 14\"\r\n              >\r\n                <path\r\n                  stroke=\"currentColor\"\r\n                  strokeLinecap=\"round\"\r\n                  strokeLinejoin=\"round\"\r\n                  strokeWidth=\"2\"\r\n                  d=\"m1 1 6 6m0 0 6 6M7 7l6-6M7 7l-6 6\"\r\n                />\r\n              </svg>\r\n              <span className=\"sr-only\">Close modal</span>\r\n            </button>\r\n          </div>\r\n          <div className=\"p-4 md:p-5\">\r\n            <form className=\"space-y-4\" onSubmit={handleSubmit(submitAddGroup)}>\r\n              <div>\r\n                <label\r\n                  htmlFor=\"group-name\"\r\n                  className=\"block mb-2 text-sm font-medium text-gray-900 \"\r\n                >\r\n                  Group Title\r\n                </label>\r\n\r\n                <Input\r\n                  type={\"text\"}\r\n                  nameField=\"title\"\r\n                  intent={\"primary\"}\r\n                  size={\"md\"}\r\n                  placeholder={\"Enter Group Name\"}\r\n                  roundness={\"round-sm\"}\r\n                  classes={\"w-full p-2.5\"}\r\n                  register={register}\r\n                />\r\n              </div>\r\n\r\n              {/* <div>\r\n                <label\r\n                  htmlFor=\"description\"\r\n                  className=\"block mb-2 text-sm font-medium text-gray-900 \"\r\n                >\r\n                  Description\r\n                </label>\r\n                <textarea\r\n                  id=\"description\"\r\n                  className=\"w-full outline-none block p-2.5 bg-primary  text-gray-900 text-sm rounded-lg   \"\r\n                  placeholder=\"Enter group description\"\r\n                  {...register(\"description\")}\r\n                ></textarea>\r\n              </div> */}\r\n\r\n              <Button\r\n                type={\"submit\"}\r\n                intent={\"primary\"}\r\n                size={\"lg\"}\r\n                children={\"Add\"}\r\n                classes={\"w-full !p-2\"}\r\n                roundness={\"round\"}\r\n                loading={loading}\r\n              />\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>,\r\n    document.body\r\n  );\r\n};\r\n\r\nexport default AddGroupContModal;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Button, Input } from \"../form\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport axiosInstance from \"../../utils/axiosInstance\";\r\nimport { toast } from \"react-toastify\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst EditGrpContact = ({ grpData, closeModal, handleChange }) => {\r\n  // const [description, setDescription] = useState(\"\");\r\n  const profileId = useSelector((state) => state.profile.profileId);\r\n  //   const [selectedContacts, setSelectedContacts] = useState([]);\r\n  const [contacts, setContacts] = useState([]);\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors },\r\n    reset,\r\n  } = useForm();\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const [selectedContact, setSelectedContact] = useState(null);\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n  const handleSelect = (contact) => {\r\n    setSelectedContact(contact);\r\n    setIsOpen(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (grpData) {\r\n      reset({\r\n        title: grpData?.title,\r\n      });\r\n    }\r\n  }, [grpData, reset]);\r\n\r\n  //   const handleSelectContact = (contact) => {\r\n  //     if (!selectedContacts.includes(contact)) {\r\n  //       setSelectedContacts([...selectedContacts, contact]);\r\n  //     }\r\n  //   };\r\n\r\n  const submitAddGroup = async (data) => {\r\n    try {\r\n      setLoading(true);\r\n      const response = await axiosInstance.post(\"/addContactIntoGroup\", {\r\n        contact_id: selectedContact?.id,\r\n        group_id: grpData?.id,\r\n        profile_id: profileId,\r\n      });\r\n      if (response.status === 200) {\r\n        toast.success(response.data.message, {\r\n          position: \"bottom-right\",\r\n          autoClose: 5000,\r\n          hideProgressBar: true,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n          theme: \"light\",\r\n        });\r\n        handleChange();\r\n        closeModal();\r\n      }\r\n    } catch (error) {\r\n      setLoading(false);\r\n      console.error(error);\r\n      toast.error(error.response.data.message, {\r\n        position: \"bottom-right\",\r\n        autoClose: 5000,\r\n        hideProgressBar: true,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n        theme: \"light\",\r\n      });\r\n    }\r\n  };\r\n\r\n  async function getContacts() {\r\n    try {\r\n      const response = await axiosInstance.post(\"/phoneContacts\", {\r\n        profile_id: profileId,\r\n      });\r\n\r\n      setContacts(response.data.contacts);\r\n    } catch (error) {\r\n      toast.error(error.response.data.message, {\r\n        position: \"bottom-right\",\r\n        autoClose: 5000,\r\n        hideProgressBar: true,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n        theme: \"light\",\r\n      });\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    getContacts();\r\n  }, []);\r\n\r\n  return ReactDOM.createPortal(\r\n    <div\r\n      id=\"authentication-modal\"\r\n      tabIndex=\"-1\"\r\n      aria-hidden=\"false\"\r\n      className=\"overflow-y-auto overflow-x-hidden fixed top-0 right-0 left-0 z-50 flex justify-center items-center w-full h-full bg-black bg-opacity-50\"\r\n    >\r\n      <div className=\"relative p-4 w-full max-w-lg max-h-full\">\r\n        <div className=\"relative bg-white rounded-lg shadow \">\r\n          <div className=\"flex items-center justify-between p-4 md:p-5 border-b rounded-t \">\r\n            <h3 className=\"text-xl font-semibold text-gray-900 \">Add Group</h3>\r\n            <button\r\n              type=\"button\"\r\n              onClick={closeModal}\r\n              className=\"text-gray-400 bg-transparent hover:bg-gray-200 hover:text-gray-900 rounded-lg text-sm w-8 h-8 inline-flex justify-center items-center\"\r\n            >\r\n              <svg\r\n                className=\"w-3 h-3\"\r\n                aria-hidden=\"true\"\r\n                xmlns=\"http://www.w3.org/2000/svg\"\r\n                fill=\"none\"\r\n                viewBox=\"0 0 14 14\"\r\n              >\r\n                <path\r\n                  stroke=\"currentColor\"\r\n                  strokeLinecap=\"round\"\r\n                  strokeLinejoin=\"round\"\r\n                  strokeWidth=\"2\"\r\n                  d=\"m1 1 6 6m0 0 6 6M7 7l6-6M7 7l-6 6\"\r\n                />\r\n              </svg>\r\n              <span className=\"sr-only\">Close modal</span>\r\n            </button>\r\n          </div>\r\n          <div className=\"p-4 md:p-5\">\r\n            <form className=\"space-y-4\" onSubmit={handleSubmit(submitAddGroup)}>\r\n              <div>\r\n                <label\r\n                  htmlFor=\"group-name\"\r\n                  className=\"block mb-2 text-sm font-medium text-gray-900 \"\r\n                >\r\n                  Group Title\r\n                </label>\r\n\r\n                <Input\r\n                  type={\"text\"}\r\n                  nameField=\"title\"\r\n                  intent={\"primary\"}\r\n                  size={\"md\"}\r\n                  placeholder={\"Enter Group Name\"}\r\n                  roundness={\"round-sm\"}\r\n                  classes={\"w-full p-2.5\"}\r\n                  register={register}\r\n                  readOnly={true}\r\n                />\r\n              </div>\r\n\r\n              {/* <div>\r\n                <label\r\n                  htmlFor=\"description\"\r\n                  className=\"block mb-2 text-sm font-medium text-gray-900 \"\r\n                >\r\n                  Description\r\n                </label>\r\n                <textarea\r\n                  id=\"description\"\r\n                  className=\"w-full outline-none block p-2.5 bg-primary  text-gray-900 text-sm rounded-lg   \"\r\n                  placeholder=\"Enter group description\"\r\n                  {...register(\"description\")}\r\n                ></textarea>\r\n              </div> */}\r\n\r\n              <div>\r\n                <label\r\n                  htmlFor=\"select-contact\"\r\n                  className=\"block mb-2 text-sm font-medium text-gray-900 \"\r\n                >\r\n                  Select Contact\r\n                </label>\r\n                <div className=\"custom-dropdown relative\">\r\n                  <div\r\n                    className=\"selected-option rounded-xl bg-primary border p-2 text-black cursor-pointer\"\r\n                    onClick={() => setIsOpen(!isOpen)}\r\n                  >\r\n                    {selectedContact ? (\r\n                      <div className=\"flex flex-row gap-3 items-center\">\r\n                        <img\r\n                          src={`${process.env.REACT_APP_SERVER}${selectedContact.photo}`}\r\n                          className=\"rounded-full w-8 h-8 object-cover\"\r\n                          alt=\"\"\r\n                        />\r\n                        <p> {selectedContact.first_name}</p>\r\n                      </div>\r\n                    ) : (\r\n                      \"Select a contact\"\r\n                    )}\r\n                  </div>\r\n                  {isOpen && (\r\n                    <div className=\"dropdown-options absolute w-full bg-white rounded-xl border shadow-lg mt-1\">\r\n                      {contacts?.map((data) => (\r\n                        <div\r\n                          className=\"dropdown-option flex items-center p-2 cursor-pointer hover:bg-gray-200 hover:rounded-xl\"\r\n                          key={data.id}\r\n                          onClick={() => handleSelect(data)}\r\n                        >\r\n                          <img\r\n                            src={`${process.env.REACT_APP_SERVER}${data.photo}`}\r\n                            className=\"rounded-full w-8 h-8 mr-2 object-cover\"\r\n                            alt={data.first_name}\r\n                          />\r\n                          <span>{data.first_name}</span>\r\n                        </div>\r\n                      ))}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              </div>\r\n\r\n              {/* <div>\r\n                    <label className=\"block mb-2 text-sm font-medium text-gray-900 \">\r\n                      Selected Contacts\r\n                    </label>\r\n                    <ul className=\"max-h-40 overflow-y-auto border border-gray-300 rounded-lg bg-white\">\r\n                      {selectedContacts.map((contact) => (\r\n                        <li\r\n                          key={contact}\r\n                          className=\"p-2 border-b border-gray-300\"\r\n                        >\r\n                          {contact}\r\n                        </li>\r\n                      ))}\r\n                    </ul>\r\n                  </div> */}\r\n\r\n              <Button\r\n                type={\"submit\"}\r\n                intent={\"primary\"}\r\n                size={\"lg\"}\r\n                children={\"Add\"}\r\n                classes={\"w-full !p-2\"}\r\n                roundness={\"round\"}\r\n                loading={loading}\r\n              />\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>,\r\n    document.body\r\n  );\r\n};\r\n\r\nexport default EditGrpContact;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Button } from \"../form\";\r\nimport AddGroupContModal from \"../modal/AddGroupContModal\";\r\nimport axiosInstance from \"../../utils/axiosInstance\";\r\nimport { toast } from \"react-toastify\";\r\nimport EditGrpContact from \"../modal/EditGrpContact\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst GroupConTbl = () => {\r\n  const profileId = useSelector((state) => state.profile.profileId);\r\n\r\n  const [isOpenModal, setIsOpenModal] = useState(false);\r\n  const [isOpenEditConModal, setIsOpenEditConModal] = useState(false);\r\n  const [groups, setGroups] = useState([]);\r\n  const [groupData, setGroupData] = useState({\r\n    isEdit: false,\r\n    isAdd: false,\r\n    data: \"\",\r\n  });\r\n  const [editGrpConData, setEditGrpConData] = useState({\r\n    data: \"\",\r\n  });\r\n  const [loading, setLoading] = useState(false);\r\n  const [change, setChange] = useState(false);\r\n\r\n  const openAddContactModal = () => {\r\n    setIsOpenModal(!isOpenModal);\r\n    setGroupData((prev) => ({\r\n      ...prev,\r\n      isAdd: true,\r\n    }));\r\n  };\r\n\r\n  const closeAddContactModal = () => {\r\n    setIsOpenModal(!isOpenModal);\r\n  };\r\n\r\n  async function getGroups() {\r\n    setLoading(true);\r\n    try {\r\n      const response = await axiosInstance.post(\"/groups\", {\r\n        profile_id: profileId,\r\n      });\r\n      if (response.status === 200) {\r\n        setGroups(response.data.groups);\r\n        setLoading(false);\r\n      }\r\n    } catch (error) {\r\n      setLoading(true);\r\n      console.error(error?.response);\r\n      toast.error(error.response.data.message, {\r\n        position: \"bottom-right\",\r\n        autoClose: 5000,\r\n        hideProgressBar: true,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n        theme: \"light\",\r\n      });\r\n      // toast.error(error.response.data.message);\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    getGroups();\r\n  }, [change]);\r\n\r\n  const editGroup = (data, isEdit) => {\r\n    setIsOpenModal(true);\r\n    setGroupData((prev) => ({\r\n      ...prev,\r\n      data: data,\r\n      isEdit: isEdit,\r\n      isAdd: false,\r\n    }));\r\n  };\r\n\r\n  const handleChange = () => {\r\n    setChange(!change);\r\n  };\r\n\r\n  async function deleteGroup(id) {\r\n    try {\r\n      const response = await axiosInstance.post(\"/removeGroup\", {\r\n        group_id: id,\r\n        profile_id: profileId,\r\n      });\r\n      if (response.status === 200) {\r\n        toast.success(response.data.message, {\r\n          position: \"bottom-right\",\r\n          autoClose: 5000,\r\n          hideProgressBar: true,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n          theme: \"light\",\r\n        });\r\n        handleChange();\r\n      }\r\n    } catch (error) {\r\n      toast.error(error.response.data.message, {\r\n        position: \"bottom-right\",\r\n        autoClose: 5000,\r\n        hideProgressBar: true,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n        theme: \"light\",\r\n      });\r\n    }\r\n  }\r\n\r\n  const handleEditGrpContact = (data) => {\r\n    setIsOpenEditConModal(true);\r\n    setEditGrpConData(data);\r\n  };\r\n\r\n  const closeEditGrpContactModal = () => {\r\n    setIsOpenEditConModal(!isOpenEditConModal);\r\n  };\r\n\r\n  return (\r\n    <div className=\"w-full min-h-[150px] bg-primary rounded-2xl p-6 mb-20\">\r\n      <div className=\"flex flex-col gap-4 w-full\">\r\n        <div className=\"w-full h-16  rounded-xl flex justify-between items-center\">\r\n          <h1 className=\"font-inter font-bold text-2xl\">Groups</h1>\r\n          <Button\r\n            intent={\"primary\"}\r\n            size={\"lg\"}\r\n            children={\"Add Group\"}\r\n            roundness={\"round\"}\r\n            classes={\"\"}\r\n            type={\"button\"}\r\n            eventAction={openAddContactModal}\r\n          />\r\n          {isOpenModal && (\r\n            <AddGroupContModal\r\n              handleChange={handleChange}\r\n              grpData={groupData}\r\n              closeModal={closeAddContactModal}\r\n            />\r\n          )}\r\n          {isOpenEditConModal && (\r\n            <EditGrpContact\r\n              handleChange={handleChange}\r\n              grpData={editGrpConData}\r\n              closeModal={closeEditGrpContactModal}\r\n            />\r\n          )}\r\n        </div>\r\n        <div className=\"w-full min-h-[130px]  bg-white rounded-xl\">\r\n          <div className=\"w-full h-full  overflow-auto p-3\">\r\n            <table className=\"w-full text-sm text-left rtl:text-right text-gray-500 dark:text-gray-400\">\r\n              <thead className=\"text-xs text-gray-700 uppercase bg-gray-50 dark:bg-gray-700 dark:text-gray-400\">\r\n                <tr>\r\n                  <th scope=\"col\" className=\"px-6 py-3\">\r\n                    Title\r\n                  </th>\r\n                  <th scope=\"col\" className=\"px-6 py-3\">\r\n                    Total Contacts\r\n                  </th>\r\n                  <th scope=\"col\" className=\"px-6 py-3\">\r\n                    Total Numbers\r\n                  </th>\r\n                  <th scope=\"col\" className=\"px-6 py-3\">\r\n                    Action\r\n                  </th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {loading ? (\r\n                  <tr className=\"bg-white border-b dark:bg-gray-800 dark:border-gray-700\">\r\n                    <td\r\n                      colSpan={4}\r\n                      className=\"py-3 text-center text-gray-500 dark:text-gray-400\"\r\n                    >\r\n                      Loading....\r\n                    </td>\r\n                  </tr>\r\n                ) : (\r\n                  <>\r\n                    {groups.length === 0 ? (\r\n                      <tr className=\"bg-white border-b dark:bg-gray-800 dark:border-gray-700\">\r\n                        <td\r\n                          colSpan={4}\r\n                          className=\"py-3 text-center text-gray-500 dark:text-gray-400\"\r\n                        >\r\n                          No Group Record\r\n                        </td>\r\n                      </tr>\r\n                    ) : (\r\n                      <>\r\n                        {groups?.map((result) => {\r\n                          return (\r\n                            <tr\r\n                              key={result.id}\r\n                              className=\"bg-white border-b dark:bg-gray-800 dark:border-gray-700 hover:bg-gray-50 dark:hover:bg-gray-600\"\r\n                            >\r\n                              <td className=\"px-6 py-4\">{result.title}</td>\r\n                              <td className=\"px-6 py-4\">\r\n                                <div className=\"bg-secondary px-4 py-1 rounded-full w-max text-white\">\r\n                                  {result.total_contacts}\r\n                                </div>\r\n                              </td>\r\n                              <td className=\"px-6 py-4\">\r\n                                <div className=\"bg-secondary px-4 py-1 rounded-full w-max text-white\">\r\n                                  {result.total_members}\r\n                                </div>\r\n                              </td>\r\n                              <td className=\"px-6 py-4\">\r\n                                <div\r\n                                    onClick={() => editGroup(result, true)}\r\n                                  className=\"font-medium text-blue-600 cursor-pointer hover:underline\"\r\n                                >\r\n                                  Edit Group\r\n                                </div>\r\n                                <div\r\n                                  onClick={() => deleteGroup(result.id)}\r\n                                  className=\"font-medium text-blue-600 cursor-pointer hover:underline\"\r\n                                >\r\n                                  Delete Group\r\n                                </div>\r\n                                <div\r\n                                  onClick={() => handleEditGrpContact(result)}\r\n                                  className=\"font-medium text-blue-600 cursor-pointer hover:underline\"\r\n                                >\r\n                                  Add Contact\r\n                                </div>\r\n                              </td>\r\n                            </tr>\r\n                          );\r\n                        })}\r\n                      </>\r\n                    )}\r\n                  </>\r\n                )}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GroupConTbl;\r\n","import React from \"react\";\r\nimport { ContactTbl, GroupConTbl } from \"../../components/contact\";\r\n\r\nconst Contacts = () => {\r\n  return (\r\n    <section className=\"\">\r\n      <ContactTbl />\r\n\r\n      <GroupConTbl />\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Contacts;\r\n","export const base64ToBlob = (base64, mimeType = \"image/jpeg\") => {\r\n  // Split the base64 string to handle the data URL format\r\n  const byteString = atob(base64.split(\",\")[1]); // Decode base64 string\r\n  const arrayBuffer = new ArrayBuffer(byteString.length); // Create an ArrayBuffer\r\n  const uint8Array = new Uint8Array(arrayBuffer); // Create a typed array\r\n\r\n  // Fill the typed array with the binary data\r\n  for (let i = 0; i < byteString.length; i++) {\r\n    uint8Array[i] = byteString.charCodeAt(i);\r\n  }\r\n\r\n  // Create and return a Blob with the specified MIME type\r\n  return new Blob([uint8Array], { type: mimeType });\r\n};\r\n"],"names":["_ref","closeModal","handleChange","profileId","useSelector","state","profile","profilePic","setProfilePic","useState","loading","setLoading","register","handleSubmit","formState","errors","useForm","ReactDOM","_jsx","id","tabIndex","className","children","_jsxs","type","onClick","xmlns","fill","viewBox","stroke","strokeLinecap","strokeLinejoin","strokeWidth","d","onSubmit","async","profileBlob","base64ToBlob","body","first_name","data","last_name","phone","website","webiste","email","photo","profile_id","response","axiosInstance","post","status","toast","success","message","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","theme","err","error","encType","htmlFor","Input","nameField","intent","size","classes","roundness","placeholder","maxLength","minLength","src","alt","accept","onChange","file","e","target","files","options","maxSizeMB","useWebWorker","compressedFile","imageCompression","reader","FileReader","onloadend","result","readAsDataURL","console","log","Button","document","editData","profilePicEdit","setProfilePicEdit","pic","profilePicInputRef","useRef","reset","useEffect","prev","_editData$data","contact_id","_Fragment","process","REACT_APP_SERVER","MdCancel","rmEditPic","current","value","rmEditProPic","handleProfilePic","click","ref","ContactTbl","isOpenModal","setIsOpenModal","isEditOpenModal","setIsEditOpenModal","contacts","setContacts","change","setChange","setEditData","action","getContacts","eventAction","openAddContactModal","AddContactModal","closeAddContactModal","EditContactModal","closeEditContactModal","scope","colSpan","length","map","handleEditContact","deleteContact","grpData","_grpData$data","title","_grpData$data2","isEdit","group_id","active","selectedContact","setSelectedContact","isOpen","setIsOpen","readOnly","GroupConTbl","isOpenEditConModal","setIsOpenEditConModal","groups","setGroups","groupData","setGroupData","isAdd","editGrpConData","setEditGrpConData","getGroups","AddGroupContModal","EditGrpContact","closeEditGrpContactModal","total_contacts","total_members","editGroup","deleteGroup","handleEditGrpContact","Contacts","base64","mimeType","arguments","byteString","atob","split","arrayBuffer","ArrayBuffer","uint8Array","Uint8Array","i","charCodeAt","Blob"],"sourceRoot":""}