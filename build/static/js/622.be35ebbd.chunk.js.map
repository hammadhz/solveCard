{"version":3,"file":"static/js/622.be35ebbd.chunk.js","mappings":"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","sources":["components/profile/ProfileNav.js","components/profile/About.js","components/modal/AddLinkInfoModal.js","components/modal/AddLinkBaseModal.js","components/modal/AddLinksModal.js","components/profile/Link.js","components/profile/QrCodeEdit.js","components/profile/ProfileEd.js","components/profile/ProfileViewCard.js","components/profile/ProfileView.js","components/profile/QrCodePreview.js","components/profile/ProfileEdit.js","components/profile/ProfileCard.js","components/modal/QRCodeModal.js","components/modal/AddProfileModal.js","components/profile/AddProfileCard.js","utils/base64ToBlob.js"],"sourcesContent":["import React from \"react\";\nimport { CiUser } from \"react-icons/ci\";\nimport { AiOutlineLink } from \"react-icons/ai\";\nimport { RiFilterLine } from \"react-icons/ri\";\nimport { MdOutlineEmail, MdOutlineQrCode2 } from \"react-icons/md\";\nimport { useDispatch } from \"react-redux\";\nimport { sectionLink } from \"../../context/slice/profileSlice\";\n\nconst ProfileNav = () => {\n  const dispatch = useDispatch();\n\n  const handleLinks = (link) => {\n    dispatch(sectionLink(link));\n  };\n\n  return (\n    <nav\n      className=\"h-full w-full lg:w-1/5 flex justify-center px-2 overflow-y-auto rounded-xl bg-white\"\n      id=\"profileNav\"\n    >\n      <div className=\"flex flex-col gap-8 items-start py-6 w-full\">\n        {/* Section: Content */}\n        <div className=\"flex flex-col w-full gap-2\">\n          <h3 className=\"pl-3 font-inter font-semibold text-xl text-gray-600 uppercase\">\n            Content\n          </h3>\n\n          {/* About Link */}\n          <div\n            className=\"flex gap-2 items-center p-2 rounded hover:bg-gray-200 cursor-pointer transition duration-300 group\"\n            onClick={() => handleLinks(\"about\")}\n          >\n            <CiUser className=\"text-lg text-black group-hover:text-black transition duration-300\" />\n            <p className=\"font-inter font-medium text-sm text-gray-700 group-hover:text-black transition duration-300\">\n              About\n            </p>\n          </div>\n\n          {/* Links Link */}\n          <div\n            className=\"flex gap-2 items-center p-2 rounded hover:bg-gray-200 cursor-pointer transition duration-300 group\"\n            onClick={() => handleLinks(\"links\")}\n          >\n            <AiOutlineLink className=\"text-lg text-black group-hover:text-black transition duration-300\" />\n            <p className=\"font-inter font-medium text-sm text-gray-700 group-hover:text-black transition duration-300\">\n              Links\n            </p>\n          </div>\n\n          {/* Links View */}\n          {/*<div*/}\n          {/*  className=\"flex gap-2 items-center p-2 rounded hover:bg-gray-200 cursor-pointer transition duration-300 group\"*/}\n          {/*  onClick={() => handleLinks(\"linkView\")}*/}\n          {/*>*/}\n          {/*  <AiOutlineLink className=\"text-lg text-black group-hover:text-black transition duration-300\" />*/}\n          {/*  <p className=\"font-inter font-medium text-sm text-gray-700 group-hover:text-black transition duration-300\">*/}\n          {/*    Links View*/}\n          {/*  </p>*/}\n          {/*</div>*/}\n        </div>\n\n        {/* Section: QR Code */}\n        <div className=\"flex flex-col w-full gap-2\">\n          <h3 className=\"pl-3 font-inter font-semibold text-xl text-gray-600 uppercase\">\n            Sharing\n          </h3>\n\n          {/* QR Code */}\n          <div\n              onClick={() => handleLinks(\"qrCode\")}\n              className=\"flex gap-2 items-center p-2 rounded hover:bg-gray-200 cursor-pointer transition duration-300 group\">\n            <MdOutlineQrCode2 className=\"text-lg text-black group-hover:text-black transition duration-300\" />\n            <p className=\"font-inter font-medium text-sm text-gray-700 group-hover:text-black transition duration-300\">\n              QR Code\n            </p>\n          </div>\n        </div>\n\n        {/* Section: Lead Capture */}\n        {/*<div className=\"flex flex-col w-full gap-2\">*/}\n        {/*  <h3 className=\"pl-3 font-inter font-semibold text-xl text-gray-600 uppercase\">*/}\n        {/*    Lead Capture*/}\n        {/*  </h3>*/}\n\n        {/*  /!* Lead Capture Form *!/*/}\n        {/*  <div className=\"flex gap-2 items-center p-2 rounded hover:bg-gray-200 cursor-pointer transition duration-300 group\">*/}\n        {/*    <RiFilterLine className=\"text-lg text-black group-hover:text-black transition duration-300\" />*/}\n        {/*    <p className=\"font-inter font-medium text-sm text-gray-700 group-hover:text-black transition duration-300\">*/}\n        {/*      Lead Capture Form*/}\n        {/*    </p>*/}\n        {/*  </div>*/}\n\n        {/*  /!* Follow Up Email *!/*/}\n        {/*  <div className=\"flex gap-2 items-center p-2 rounded hover:bg-gray-200 cursor-pointer transition duration-300 group\">*/}\n        {/*    <MdOutlineEmail className=\"text-lg text-black group-hover:text-black transition duration-300\" />*/}\n        {/*    <p className=\"font-inter font-medium text-sm text-gray-700 group-hover:text-black transition duration-300\">*/}\n        {/*      Follow Up Email*/}\n        {/*    </p>*/}\n        {/*  </div>*/}\n        {/*</div>*/}\n\n      </div>\n    </nav>\n  );\n};\n\nexport default ProfileNav;\n","import React, {useState, useRef, useEffect} from \"react\";\nimport {Button, Input, TextArea} from \"../form\";\nimport {useForm} from \"react-hook-form\";\nimport {RxAvatar} from \"react-icons/rx\";\nimport {IoInformationCircleOutline} from \"react-icons/io5\";\nimport {MdColorize, MdOutlinePhotoLibrary, MdCancel} from \"react-icons/md\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {\n    profileCoverUpdate,\n    photoUpdate,\n    setThemeColor as updateThemeColor,\n    setTextColor as updateTextColor,\n    setProfileViewData, setProfileData, setPlatform,\n} from \"../../context/slice/profileSlice\";\nimport axiosInstance from \"../../utils/axiosInstance\";\nimport {useParams} from \"react-router-dom\";\nimport imageCompression from \"browser-image-compression\";\nimport {toast} from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport {base64ToBlob} from \"../../utils/base64ToBlob\";\nimport {TiCancel} from \"react-icons/ti\";\nimport NavLink from \"../NavLink\";\nimport edit from \"../../assets/svgs/edit.svg\";\n\nconst MAX_FILE_SIZE = 6 * 1024 * 1024;\nconst About = () => {\n    const { id } = useParams();\n    const dispatch = useDispatch();\n    const { register } = useForm();\n    const userData = useSelector((state) => state.profile.profileData);\n\n    const photoInputRef = useRef(null);\n    const coverPhotoInputRef = useRef(null);\n\n    const [themeColor, setThemeColor] = useState(\"\");\n    const [textColor, setTextColor] = useState(\"\");\n    const [backgroundColors, setBackgroundColors] = useState([]);\n    const [buttonColors, setButtonColors] = useState([]);\n\n    const [loading, setLoading] = useState(false);\n    const [colorLoading, setColorLoading] = useState(false);\n    const [picData, setPicData] = useState({ photo: \"\", cover_photo: \"\" });\n    const [blobCon, setBlobCon] = useState({ photo: \"\", cover_photo: \"\" });\n    const [userProfile, setUserProfile] = useState({\n        card_title: \"\", name: \"\", company: \"\", job_title: \"\", address: \"\", bio: \"\",\n        photo: \"\", cover_photo: \"\", work_position: \"\", user_direct: 0, private: 0\n    });\n\n    useEffect(() => {\n        if (userData) {\n            setUserProfile(prev => ({ ...prev, ...userData }));\n            console.log(\"userData\", userData.photo, userData.cover_photo);\n            setPicData({ photo: userData.photo || \"\", cover_photo: userData.cover_photo || \"\" });\n            setThemeColor(userData.background_color_code);\n            dispatch(updateThemeColor(userData.background_color_code));\n            dispatch(updateTextColor(userData.button_color_code ?? \"#000000\"));\n            setTextColor(userData.button_color_code);\n            // dispatch(setProfileViewData(userData));\n        }\n    }, [userData, dispatch]);\n\n    useEffect(() => {\n        dispatch(setProfileViewData(userProfile));\n    }, [userProfile, dispatch]);\n\n    useEffect(() => {\n        setColorLoading(true);\n        const fetchBackgroundColors = async () => {\n            try {\n                const response = await axiosInstance.get(\"/backgroundColors\");\n                setBackgroundColors(response.data.Backgrounds);\n            } catch (error) {\n                console.error(\"Error fetching background colors:\", error);\n            }\n        };\n        const fetchButtonColors = async () => {\n            try {\n                const response = await axiosInstance.get(\"/buttonColors\");\n                setButtonColors(response.data.buttonColors);\n            } catch (error) {\n                console.error(\"Error fetching button colors:\", error);\n            }\n            setColorLoading(false);\n        }\n        fetchBackgroundColors();\n        fetchButtonColors();\n    }, []);\n\n    const handleFileUpload = async (e, type) => {\n        const file = e.target.files[0];\n        if (!file || file.size > MAX_FILE_SIZE) {\n            toast.error(`${type} picture size must be less than 6MB.`);\n            return;\n        }\n\n        try {\n            const compressedFile = await imageCompression(file, { maxSizeMB: 4, useWebWorker: true });\n            const reader = new FileReader();\n            reader.onloadend = () => {\n                setBlobCon(prev => ({ ...prev, [type]: base64ToBlob(reader.result) }));\n                setUserProfile(prev => ({ ...prev, [type]: reader.result }));\n            };\n            reader.readAsDataURL(compressedFile);\n        } catch (error) {\n            console.error(`Error compressing ${type} image:`, error);\n        }\n    };\n\n    const handleInputChange = (e) => {\n        setUserProfile(prev => ({ ...prev, [e.target.name]: e.target.value }));\n    };\n\n    const handleCheckChange = (e) => {\n        setUserProfile(prev => ({ ...prev, [e.target.name]: Number(e.target.checked) }));\n    };\n\n    const removeImage = (type) => {\n        setUserProfile(prev => ({ ...prev, [type]: \"\" }));\n        setPicData(prev => ({ ...prev, [type]: \"\" }));\n    };\n\n    const handleThemeColor = (id, color) => {\n        setThemeColor(id);\n        dispatch(updateThemeColor(color));\n    };\n\n    const handleTextColor = (id, color) => {\n        setTextColor(id);\n        dispatch(updateTextColor(color));\n    };\n\n    const submitUpdateProfile = async (e) => {\n        e.preventDefault();\n        setLoading(true);\n\n        const requiredFields = [\"card_title\", \"name\", \"company\", \"job_title\", \"address\", \"bio\", \"work_position\"];\n        for (const field of requiredFields) {\n            if (!userProfile[field]) {\n                toast.error(`Please enter your ${field.replace(\"_\", \" \")}`);\n                setLoading(false);\n                return;\n            }\n        }\n\n        let body = { ...userProfile, profile_id: id, branding_color: \"#d5d5d5\",\n            cover_photo: blobCon.cover_photo || undefined,\n            photo: blobCon.photo || undefined\n        };\n\n        const selectedTheme = backgroundColors.find(\n            (theme) => theme.id === themeColor || theme.color_code === themeColor\n        );\n        let selectedTextColor = buttonColors.find(\n            (theme) => theme.id === textColor || theme.color_code === textColor\n        );\n\n        if (!selectedTextColor) {\n            setTextColor(buttonColors[0].id);\n            selectedTextColor = buttonColors[0];\n        }\n        setThemeColor(selectedTheme.id);\n        setTextColor(selectedTextColor.id);\n\n        console.log('direct', userData.user_direct, userProfile.user_direct, body)\n        try {\n            const response = await axiosInstance.post(\"/updateProfile\", body);\n            if (response.status === 200) {\n                // if (userData.user_direct !== userProfile.user_direct) {\n                //     const directResponse = await axiosInstance.post(\"/profileDirect\", { profile_id: id });\n                //     console.log('directResponse', directResponse.data)\n                // }\n                // if (userData.private !== userProfile.private) {\n                //     await axiosInstance.post(\"/privateProfile\", { profile_id: id });\n                // }\n                await axiosInstance.post(\"/updateBackgroundColor\", { profile_id: id, bg_color_id: selectedTheme.id });\n                await axiosInstance.post(\"/updateButtonColor\", { profile_id: id, btn_color_id: selectedTextColor.id });\n                setTimeout(() => {\n                    console.log('after delay',  response.data.message)\n                    toast.success(response.data.message);\n                }, 100);\n                console.log('final', response.data, \"body\", body)\n                dispatch(setProfileData({ ...userProfile, cover_photo: body.cover_photo ?? picData.cover_photo, photo: body.photo ?? picData.photo, background_color_code: selectedTheme.color_code, button_color_code: selectedTextColor.color_code }));\n            }\n        } catch (error) {\n            toast.error(error.response?.data?.message || \"Error updating profile\");\n        } finally {\n            setLoading(false);\n        }\n    };\n\n\n    return (\n        <div className=\"w-full h-full lg:p-4 py-8 px-6 rounded-lg bg-white overflow-hidden\">\n            <form\n                onSubmit={submitUpdateProfile}\n                className=\"relative w-full h-full bg-white\"\n                id=\"profileEdit\"\n                encType=\"multipart/form-data\"\n            >\n                <div className=\"sticky top-0 bg-white pb-4 z-10\">\n                    <h1 className=\"font-inter font-bold text-xl\">About</h1>\n                </div>\n\n                <div className=\"lg:h-[calc(100%-7rem)] w-full lg:absolute overflow-y-auto\">\n                    <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-4 w-full pr-2\">\n                    <div className=\"w-full\">\n                        <label\n                            htmlFor=\"card-title\"\n                            className=\"block mb-2 text-sm font-medium text-gray-900\"\n                        >\n                            Card Title\n                        </label>\n                        <Input\n                            type={\"text\"}\n                            name={\"card_title\"}\n                            intent={\"primary\"}\n                            id={\"card-title\"}\n                            size={\"md\"}\n                            value={userProfile?.card_title}\n                            classes={\"w-full block p-2.5\"}\n                            roundness={\"round-sm\"}\n                            placeholder={\"Card Title\"}\n                            custom={\"custom\"}\n                            eventAction={handleInputChange}\n                        />\n                    </div>\n                    <div className=\"w-full\">\n                        <label\n                            htmlFor=\"work_position\"\n                            className=\"block mb-2 text-sm font-inter font-medium text-gray-900\"\n                        >\n                            Card Layout\n                        </label>\n                        <select\n                            onChange={handleInputChange}\n                            name=\"work_position\"\n                            value={userProfile?.work_position}\n                            className=\"w-full block px-2.5 py-3.5 font-inter outline-none bg-primary placeholder:text-sm placeholder:font-normal rounded-md\"\n                        >\n                            <option value=\"left\">Left</option>\n                            <option value=\"center\">Center</option>\n                            <option value=\"right\">Right</option>\n                        </select>\n                    </div>\n\n                    {/* Profile Picture Section */}\n                    <div className=\"flex flex-col gap-4 items-center\">\n                        {/* Title with Information Icon */}\n                        <div className=\"flex items-center gap-2\">\n                            <p className=\"font-inter text-sm font-medium text-gray-900\">\n                                Profile Picture\n                            </p>\n                            <IoInformationCircleOutline\n                                className=\"text-xl text-gray-500\"\n                                title=\"Maximum size: 2MB\"\n                            />\n                        </div>\n                        {userData?.photo && picData?.photo && (\n                            <div className=\"h-full w-full  relative\">\n                                <img\n                                    src={`${process.env.REACT_APP_SERVER}${picData.photo}`}\n                                    className=\"rounded-full h-full aspect-square w-2/5 mx-auto object-cover\"\n                                    alt=\"profile_pic\"\n                                />\n                                <MdCancel\n                                    className=\"absolute size-5 -top-2 right-1/2 -translate-x-1/2 text-red-500 bg-white rounded-full cursor-pointer\"\n                                    onClick={() => removeImage(\"photo\")}\n                                />\n                            </div>\n                        )}\n                        {/* Profile Picture Upload Area */}\n                        {userProfile.photo && !picData?.photo && (\n                            <div className=\"w-full h-full relative\">\n                                <img\n                                    src={userProfile.photo}\n                                    className=\"rounded-full h-full aspect-square w-2/5 mx-auto object-cover\"\n                                    alt=\"\"\n                                />\n                                <MdCancel\n                                    className=\"absolute size-5 -top-2 right-1/2 -translate-x-1/2 text-red-500 bg-white rounded-full cursor-pointer\"\n                                    onClick={() => removeImage(\"photo\")}\n                                />\n                            </div>\n                        )}\n                        {!picData.photo && !userProfile.photo && (\n                            <div\n                                onClick={() => photoInputRef.current.click()}\n                                className=\"flex justify-center items-center rounded-full w-28 h-28 border border-dashed border-gray-400 bg-white hover:bg-gray-100 transition-all cursor-pointer\"\n                            >\n                                <div className=\"flex flex-col items-center justify-center gap-1\">\n                                    <RxAvatar className=\"text-4xl text-gray-500\"/>\n                                    <p className=\"font-inter text-xs text-gray-500 text-center\">\n                                        Select or drag file\n                                    </p>\n                                </div>\n                            </div>\n                        )}\n                        <input\n                            type=\"file\"\n                            ref={photoInputRef}\n                            accept=\".jpg, .png, .jpeg\"\n                            className=\"hidden\"\n                            onChange={(e) => handleFileUpload(e, \"photo\")}\n                        />\n                    </div>\n\n                    {/* Cover Photo Section */}\n                    <div className=\"flex flex-col gap-4 items-center\">\n                        {/* Title with Information Icon */}\n                        <div className=\"flex items-center gap-2\">\n                            <p className=\"font-inter text-sm font-medium text-gray-900\">\n                                Cover Photo\n                            </p>\n                            <IoInformationCircleOutline\n                                className=\"text-xl text-gray-500\"\n                                title=\"Maximum size: 5MB\"\n                            />\n                        </div>\n                        {userData?.cover_photo && picData?.cover_photo && (\n                            <div className=\"h-full w-full relative\">\n                                <img\n                                    src={`${process.env.REACT_APP_SERVER}${picData?.cover_photo}`}\n                                    className=\"max-h-24 w-full rounded-lg object-cover\"\n                                    alt=\"cover_pic\"\n                                />\n                                <MdCancel\n                                    className=\"absolute top-0 right-0 text-red-500 bg-white rounded-full cursor-pointer\"\n                                    onClick={() => removeImage(\"cover_photo\")}\n                                />\n                            </div>\n                        )}\n                        {/* Cover Photo Upload Area */}\n                        {userProfile?.cover_photo && !picData?.cover_photo && (\n                            <div className=\"h-full w-full relative\">\n                                <img\n                                    src={userProfile?.cover_photo}\n                                    className=\"max-h-24 w-full rounded-lg object-cover\"\n                                    alt=\"cover_pic\"\n                                />\n                                <MdCancel\n                                    className=\"absolute top-0 right-0 text-red-500 bg-white rounded-full cursor-pointer\"\n                                    onClick={() => removeImage(\"cover_photo\")}\n                                />\n                            </div>\n                        )}\n                        {!picData.cover_photo && !userProfile.cover_photo && (\n                            <div\n                                onClick={() => coverPhotoInputRef.current.click()}\n                                className=\"flex items-center justify-center rounded-lg h-28 w-full border border-dashed border-gray-400 bg-white hover:bg-gray-100 transition-all cursor-pointer\"\n                            >\n                                <div className=\"flex flex-col items-center gap-2\">\n                                    <MdOutlinePhotoLibrary className=\"text-3xl text-gray-500\"/>\n                                    <p className=\"font-inter text-xs text-gray-500 text-center\">\n                                        Select image, gif, video, or drag & drop\n                                    </p>\n                                </div>\n                            </div>\n                        )}\n                        <input\n                            type=\"file\"\n                            accept=\".jpg, .png, .jpeg\"\n                            ref={coverPhotoInputRef}\n                            className=\"hidden\"\n                            onChange={(e) => handleFileUpload(e, \"cover_photo\")}\n                        />\n                    </div>\n\n                    {/* <div className=\"flex justify-center items-center  gap-4\">\n            <div className=\"flex flex-col items-start w-full gap-2\">\n              <p className=\"font-inter text-sm font-normal\">Card Name:</p>\n              <Input\n                type={\"text\"}\n                intent={\"secondary\"}\n                size={\"lg\"}\n                classes={\"w-full !p-2\"}\n                roundness={\"round-md\"}\n                nameField={\"card\"}\n                register={register}\n              />\n            </div>\n            <div className=\"flex flex-col items-start w-full gap-2\">\n              <p className=\"font-inter text-sm font-normal\">Card Name:</p>\n              <Input\n                type={\"text\"}\n                intent={\"secondary\"}\n                size={\"lg\"}\n                classes={\"w-full !p-2\"}\n                roundness={\"round-md\"}\n                nameField={\"card\"}\n                register={register}\n              />\n            </div>\n          </div>\n\n          <div className=\"flex justify-center items-center  gap-4\">\n            <div className=\"flex flex-col items-start w-full gap-2\">\n              <p className=\"font-inter text-sm font-normal\">Card Name:</p>\n              <Input\n                type={\"text\"}\n                intent={\"secondary\"}\n                size={\"lg\"}\n                classes={\"w-full !p-2\"}\n                roundness={\"round-md\"}\n                nameField={\"card\"}\n                register={register}\n              />\n            </div>\n            <div className=\"flex flex-col items-start w-full gap-2\">\n              <p className=\"font-inter text-sm font-normal\">Card Name:</p>\n              <Input\n                type={\"text\"}\n                intent={\"secondary\"}\n                size={\"lg\"}\n                classes={\"w-full !p-2\"}\n                roundness={\"round-md\"}\n                nameField={\"card\"}\n                register={register}\n              />\n            </div>\n          </div> */}\n\n                    <div className=\"w-full\">\n                        <label\n                            htmlFor=\"first-name\"\n                            className=\"block mb-2 text-sm font-medium text-gray-900\"\n                        >\n                            Name\n                        </label>\n                        <Input\n                            type={\"text\"}\n                            name={\"name\"}\n                            intent={\"primary\"}\n                            id={\"first-name\"}\n                            size={\"md\"}\n                            value={userProfile?.name}\n                            classes={\"w-full block p-2.5 \"}\n                            roundness={\"round-sm\"}\n                            placeholder={\"first name\"}\n                            custom={\"custom\"}\n                            eventAction={handleInputChange}\n                        />\n                        {/* <input\n                    type=\"text\"\n                    name=\"first-name\"\n                    id=\"first-name\"\n                    className=\"bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 dark:bg-gray-600 dark:border-gray-500 dark:placeholder-gray-400\"\n                    placeholder=\"John\"\n                    required\n                  /> */}\n                    </div>\n                  {/*  <div className=\"w-full\">*/}\n                  {/*      <label*/}\n                  {/*          htmlFor=\"last-name\"*/}\n                  {/*          className=\"block mb-2 text-sm font-medium text-gray-900\"*/}\n                  {/*      >*/}\n                  {/*          Email*/}\n                  {/*      </label>*/}\n                  {/*      <Input*/}\n                  {/*          type={\"email\"}*/}\n                  {/*          name={\"email\"}*/}\n                  {/*          intent={\"primary\"}*/}\n                  {/*          id={\"email\"}*/}\n                  {/*          size={\"md\"}*/}\n                  {/*          value={userProfile?.email}*/}\n                  {/*          classes={\"w-full block p-2.5 \"}*/}\n                  {/*          roundness={\"round-sm\"}*/}\n                  {/*          placeholder={\"Email\"}*/}\n                  {/*          custom={\"custom\"}*/}\n                  {/*          eventAction={handleInputChange}*/}\n                  {/*      />*/}\n                  {/*      /!* <input*/}\n                  {/*  type=\"text\"*/}\n                  {/*  name=\"last-name\"*/}\n                  {/*  id=\"last-name\"*/}\n                  {/*  className=\"bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 dark:bg-gray-600 dark:border-gray-500 dark:placeholder-gray-400\"*/}\n                  {/*  placeholder=\"Doe\"*/}\n                  {/*  required*/}\n                  {/*/> *!/*/}\n                  {/*  </div>*/}\n\n                    <div className=\"w-full\">\n                        <label\n                            htmlFor=\"company\"\n                            className=\"block mb-2 text-sm font-inter font-medium text-gray-900\"\n                        >\n                            Company\n                        </label>\n                        <Input\n                            type={\"text\"}\n                            name={\"company\"}\n                            intent={\"primary\"}\n                            id={\"company\"}\n                            size={\"md\"}\n                            value={userProfile.company}\n                            classes={\"w-full block p-2.5 \"}\n                            roundness={\"round-sm\"}\n                            placeholder={\"company\"}\n                            custom={\"custom\"}\n                            eventAction={handleInputChange}\n                        />\n                        {/* <input\n                    type=\"text\"\n                    name=\"last-name\"\n                    id=\"last-name\"\n                    className=\"bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 dark:bg-gray-600 dark:border-gray-500 dark:placeholder-gray-400\"\n                    placeholder=\"Doe\"\n                    required\n                  /> */}\n                    </div>\n                    <div className=\"w-full\">\n                        <label\n                            htmlFor=\"job_title\"\n                            className=\"block mb-2 text-sm font-medium text-gray-900\"\n                        >\n                            Job Title\n                        </label>\n                        <Input\n                            type={\"text\"}\n                            name={\"job_title\"}\n                            intent={\"primary\"}\n                            id={\"job_title\"}\n                            size={\"md\"}\n                            classes={\"w-full block p-2.5 \"}\n                            roundness={\"round-sm\"}\n                            placeholder={\"Job Title\"}\n                            custom={\"custom\"}\n                            value={userProfile.job_title}\n                            eventAction={handleInputChange}\n                        />\n                    </div>\n\n\n                    {/*<div className=\"w-full\">*/}\n                    {/*    <label*/}\n                    {/*        htmlFor=\"dob\"*/}\n                    {/*        className=\"block mb-2 text-sm font-medium text-gray-900\"*/}\n                    {/*    >*/}\n                    {/*        DOB*/}\n                    {/*    </label>*/}\n                    {/*    <Input*/}\n                    {/*        type={\"date\"}*/}\n                    {/*        name={\"dob\"}*/}\n                    {/*        intent={\"primary\"}*/}\n                    {/*        id={\"dob\"}*/}\n                    {/*        size={\"md\"}*/}\n                    {/*        value={userProfile.dob}*/}\n                    {/*        classes={\"w-full block p-2.5 \"}*/}\n                    {/*        roundness={\"round-sm\"}*/}\n                    {/*        placeholder={\"dob\"}*/}\n                    {/*        custom={\"custom\"}*/}\n                    {/*        eventAction={handleInputChange}*/}\n                    {/*    />*/}\n                    {/*</div>*/}\n                    {/*<div className=\"w-full\">*/}\n                    {/*    <label*/}\n                    {/*        htmlFor=\"gender\"*/}\n                    {/*        className=\"block mb-2 text-sm font-inter font-medium text-gray-900\"*/}\n                    {/*    >*/}\n                    {/*        Gender*/}\n                    {/*    </label>*/}\n                    {/*    <select*/}\n                    {/*        onChange={handleInputChange}*/}\n                    {/*        name=\"gender\"*/}\n                    {/*        className=\"w-full block px-2.5 py-3.5  font-inter outline-none bg-primary placeholder:text-sm placeholder:font-normal rounded-md\"*/}\n                    {/*    >*/}\n                    {/*        <option value={\"1\"}>Male</option>*/}\n                    {/*        <option value={\"2\"}>Female</option>*/}\n                    {/*        <option value={\"3\"}>Not Share</option>*/}\n                    {/*    </select>*/}\n                    {/*</div>*/}\n\n                    <div className=\"w-full\">\n                        <label\n                            htmlFor=\"address\"\n                            className=\"block mb-2 text-sm font-inter font-medium text-gray-900\"\n                        >\n                            Address\n                        </label>\n                        <TextArea\n                            rows={\"2\"}\n                            intent={\"primary\"}\n                            classes={\"w-full !rounded-md p-2\"}\n                            name={\"address\"}\n                            placeholder={\"Address\"}\n                            value={userProfile?.address}\n                            eventAction={handleInputChange}\n                        ></TextArea>\n                    </div>\n                    <div className=\"flex flex-col gap-2 w-full\">\n                        <label\n                            htmlFor=\"bio\"\n                            className=\"block text-sm font-inter font-medium text-gray-900\"\n                        >\n                            Bio\n                        </label>\n                        <TextArea\n                            rows={\"2\"}\n                            intent={\"primary\"}\n                            placeholder={\"Bio\"}\n                            classes={\"w-full !rounded-md p-2\"}\n                            name={\"bio\"}\n                            value={userProfile?.bio}\n                            eventAction={handleInputChange}\n                        ></TextArea>\n                    </div>\n\n                    {/* theme */}\n                    <div className=\"lg:col-span-2 flex flex-col gap-2 w-full\">\n                        <label\n                            htmlFor=\"last-name\"\n                            className=\"block mb-2 text-sm font-inter font-medium text-gray-900 \"\n                        >\n                            Choose Theme:\n                        </label>\n                        <div className=\"w-full bg-primary min-h-16 rounded-lg py-2 px-3\">\n                            <div className=\"flex flex-col gap-4\">\n                                {/* card theme */}\n                                <div\n                                    className=\"w-full rounded-lg flex flex-row lg:gap-0 md:gap-0 gap-3 items-center justify-between bg-white border border-primary p-4\">\n                                    <label\n                                        htmlFor=\"\"\n                                        className=\"block text-sm font-inter font-medium text-gray-900 \"\n                                    >\n                                        Profile/Card Theme\n                                    </label>\n                                    <div className=\"flex items-center justify-end flex-grow flex-wrap gap-2\">\n                                        {backgroundColors?.map((color) => (\n                                            <div\n                                                key={color.id}\n                                                className=\"rounded-full w-6 h-6 cursor-pointer border\"\n                                                style={{ backgroundColor: color.color_code }}\n                                                onClick={() => handleThemeColor(color.id, color.color_code)}\n                                            ></div>\n                                        ))}\n                                    </div>\n                                </div>\n\n                                {/* link color */}\n                                <div\n                                    className=\"w-full rounded-lg flex flex-col gap-2 bg-white border border-primary p-4\">\n                                    <div className=\"pb-4 flex items-center justify-between\">\n                                        <label\n                                            htmlFor=\"\"\n                                            className=\"block text-sm font-inter font-medium text-gray-900 \"\n                                        >\n                                            Link Color\n                                        </label>\n                                        <div className=\"flex items-center justify-end flex-grow flex-wrap gap-2\">\n                                            {buttonColors?.map((color) => (\n                                                <div\n                                                    key={color.id}\n                                                    className=\"rounded-full w-6 h-6 cursor-pointer border\"\n                                                    style={{ backgroundColor: color.color_code }}\n                                                    onClick={() => handleTextColor(color.id, color.color_code)}\n                                                ></div>\n                                            ))}\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className=\"w-full bg-primary rounded-lg p-2\">\n                        <div className=\"bg-white p-1.5 rounded-lg flex items-center justify-between\">\n                            <label\n                                htmlFor=\"last-name\"\n                                className=\"block  text-sm font-inter font-medium text-gray-900\"\n                            >\n                                Card Private\n                            </label>\n                            <div>\n                                <label className=\"inline-flex items-center cursor-pointer\">\n                                    <input\n                                        type=\"checkbox\"\n                                        name=\"private\"\n                                        value={userProfile.private}\n                                        checked={userProfile.private}\n                                        className=\"sr-only peer\"\n                                        onChange={handleCheckChange}\n                                    />\n                                    <div\n                                        className=\"relative w-11 h-6 bg-gray-200 peer-focus:outline-none peer-focus:ring-4 peer-focus:ring-white  rounded-full peer peer-checked:after:translate-x-full rtl:peer-checked:after:-translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-[2px] after:start-[2px] after:bg-white after:border-gray-300 after:border after:rounded-full after:h-5 after:w-5 after:transition-all peer-checked:bg-black\"></div>\n                                </label>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"w-full bg-primary rounded-lg p-2\">\n                        <div className=\"bg-white p-1.5 rounded-lg flex items-center justify-between\">\n                            <label\n                                htmlFor=\"last-name\"\n                                className=\"block  text-sm font-inter font-medium text-gray-900\"\n                            >\n                                User Direct\n                            </label>\n                            <div>\n                                <label className=\"inline-flex items-center cursor-pointer\">\n                                    <input\n                                        type=\"checkbox\"\n                                        name=\"user_direct\"\n                                        value={userProfile.user_direct}\n                                        checked={userProfile.user_direct}\n                                        className=\"sr-only peer\"\n                                        onChange={handleCheckChange}\n                                    />\n                                    <div\n                                        className=\"relative w-11 h-6 bg-gray-200 peer-focus:outline-none peer-focus:ring-4 peer-focus:ring-white  rounded-full peer peer-checked:after:translate-x-full rtl:peer-checked:after:-translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-[2px] after:start-[2px] after:bg-white after:border-gray-300 after:border after:rounded-full after:h-5 after:w-5 after:transition-all peer-checked:bg-black\"></div>\n                                </label>\n                            </div>\n                        </div>\n                    </div>\n\n            {/*        <div className=\"lg:col-span-2 w-full flex justify-center items-center\">*/}\n            {/*            <Button*/}\n            {/*                type={\"submit\"}*/}\n            {/*                intent={\"secondary\"}*/}\n            {/*                children={\"Update\"}*/}\n            {/*                size={\"lg\"}*/}\n            {/*                roundness={\"round\"}*/}\n            {/*                classes={\"!bg-black !text-white\"}*/}\n            {/*                loading={loading}*/}\n            {/*            />*/}\n            {/*            /!* <Button*/}\n            {/*  intent={\"secondary\"}*/}\n            {/*  children={\"Cancel\"}*/}\n            {/*  size={\"lg\"}*/}\n            {/*  roundness={\"round\"}*/}\n            {/*  classes={\"!bg-black !text-white\"}*/}\n            {/*/> *!/*/}\n            {/*        </div>*/}\n\n                </div>\n                </div>\n                <div className=\"absolute bottom-0 left-0 right-0 pt-4 w-full bg-white flex justify-end items-center gap-4\">\n                    <Button\n                        type=\"submit\"\n                        intent={\"primary\"}\n                        children={\"Update\"}\n                        size={\"lg\"}\n                        loading={loading}\n                        roundness={\"round\"}\n                        classes={\"!bg-black !text-white\"}\n                        disabled={colorLoading}\n                    />\n                    <NavLink\n                        intent={\"secondary\"}\n                        size={\"lg\"}\n                        content={\"Cancel\"}\n                        classes={\"gap-2 !py-3 !px-6\"}\n                        href={`/dashboard`}\n                    />\n                </div>\n            </form>\n        </div>\n    );\n};\n\nexport default About;\n","import React, { useState } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Button, Input } from \"../form\";\n\nconst AddLinkInfoModal = ({ closeModal, selectedLink }) => {\n  const [form, setForm] = useState({\n    linkTitle: selectedLink?.name || \"\",\n    linkURL: \"\",\n  });\n\n  const handleInputChange = (e) => {\n    const { name, value } = e.target;\n    setForm({ ...form, [name]: value });\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    // Handle form submission logic here, such as saving the link\n  };\n\n  return ReactDOM.createPortal(\n    <div\n      id=\"authentication-modal\"\n      tabIndex=\"-1\"\n      aria-hidden=\"false\"\n      className=\"overflow-y-auto overflow-x-hidden fixed top-0 right-0 left-0 z-50 flex justify-center items-center w-full h-full bg-black bg-opacity-50\"\n    >\n      <div className=\"relative p-4 w-full max-w-lg max-h-full\">\n        <div className=\"relative bg-white rounded-lg shadow dark:bg-gray-700\">\n          <div className=\"flex items-center justify-between p-4 md:p-5 border-b rounded-t dark:border-gray-600\">\n            <h3 className=\"text-xl font-semibold text-gray-900 dark:text-white\">\n              Add Link Information\n            </h3>\n            <button\n              type=\"button\"\n              onClick={closeModal}\n              className=\"text-gray-400 bg-transparent hover:bg-gray-200 hover:text-gray-900 rounded-lg text-sm w-8 h-8 inline-flex justify-center items-center dark:hover:bg-gray-600 dark:hover:text-white\"\n            >\n              <svg\n                className=\"w-3 h-3\"\n                aria-hidden=\"true\"\n                xmlns=\"http://www.w3.org/2000/svg\"\n                fill=\"none\"\n                viewBox=\"0 0 14 14\"\n              >\n                <path\n                  stroke=\"currentColor\"\n                  strokeLinecap=\"round\"\n                  strokeLinejoin=\"round\"\n                  strokeWidth=\"2\"\n                  d=\"m1 1 6 6m0 0 6 6M7 7l6-6M7 7l-6 6\"\n                />\n              </svg>\n              <span className=\"sr-only\">Close modal</span>\n            </button>\n          </div>\n          <div className=\"p-4 md:p-5\">\n            <form onSubmit={handleSubmit} className=\"space-y-4\">\n              <div className=\"flex items-center gap-4\">\n                {selectedLink?.icon}\n                <h4 className=\"text-lg font-inter font-medium text-gray-900\">\n                  {selectedLink?.name}\n                </h4>\n              </div>\n              <div className=\"w-full\">\n                <label\n                  htmlFor=\"link-title\"\n                  className=\"block mb-2 text-sm font-medium text-gray-900 dark:text-white\"\n                >\n                  Link Title\n                </label>\n                <Input\n                  type={\"text\"}\n                  nameField={\"linkTitle\"}\n                  intent={\"primary\"}\n                  id={\"link-title\"}\n                  size={\"md\"}\n                  classes={\"w-full block p-2.5 \"}\n                  roundness={\"round-sm\"}\n                  custom={\"custom\"}\n                />\n              </div>\n              <div className=\"w-full\">\n                <label\n                  htmlFor=\"link-url\"\n                  className=\"block mb-2 text-sm font-medium text-gray-900 dark:text-white\"\n                >\n                  Link URL\n                </label>\n                <Input\n                  type={\"url\"}\n                  nameField={\"linkURL\"}\n                  intent={\"primary\"}\n                  id={\"link-url\"}\n                  size={\"md\"}\n                  classes={\"w-full block p-2.5 \"}\n                  roundness={\"round-sm\"}\n                  custom={\"custom\"}\n                  placeholder={\"https://example.com\"}\n                />\n              </div>\n              <div className=\"flex justify-end gap-4\">\n                <Button\n                  intent={\"secondary\"}\n                  children={\"Cancel\"}\n                  size={\"md\"}\n                  roundness={\"round\"}\n                  classes={\"\"}\n                  onClick={closeModal}\n                />\n                <Button\n                  intent={\"primary\"}\n                  children={\"Add\"}\n                  size={\"lg\"}\n                  roundness={\"round\"}\n                  classes={\"!bg-blue-500 !text-white\"}\n                  type={\"submit\"}\n                />\n              </div>\n            </form>\n          </div>\n        </div>\n      </div>\n    </div>,\n    document.body\n  );\n};\n\nexport default AddLinkInfoModal;\n","import React, { useEffect, useState } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Button, Input } from \"../form\";\nimport axiosInstance from \"../../utils/axiosInstance\";\nimport { toast } from \"react-toastify\";\nimport {useDispatch} from \"react-redux\";\nimport {pushPlatform} from \"../../context/slice/profileSlice\";\n\nconst AddLinkBaseModal = ({ closeModal, data, id }) => {\n  const [title, setTitle] = useState(\"\");\n  const [baseUrl, setBaseUrl] = useState(\"\");\n  const [path, setPath] = useState(\"\");\n\n  const [loading, setLoading] = useState(false);\n\n  const dispatch = useDispatch();\n\n  const extractUsername = (url) => {\n    const lastSlashIndex = url.lastIndexOf(\"/\");\n    return url.substring(lastSlashIndex + 1);\n  };\n\n  const handleUpdatePath = (e) => {\n    const path = e.target.value;\n    setPath(path);\n  };\n\n  const handleUpdateTitle = (e) => {\n    const title = e.target.value;\n    setTitle(title);\n  };\n\n  useEffect(() => {\n    console.log('daaata', data)\n    if (data?.baseUrl) {\n      setBaseUrl(data?.baseUrl);\n      setPath(data?.baseUrl);\n    }\n    if (data?.path) {\n      setPath(data?.baseUrl + data?.path);\n    }\n    if (data?.label) {\n      setTitle(data?.label);\n    }\n\n  }, [data?.baseUrl, data?.path, data?.label]);\n\n  const submitUpdateLink = async (e) => {\n    e.preventDefault();\n    if (title === \"\") {\n      toast.error(\"Title Field is required.\");\n      return;\n    }\n    const finalPath = baseUrl ? path.replace(baseUrl, \"\") : path;\n    if (finalPath === \"\" || finalPath.length < 2) {\n        toast.error(\"Link Field is required with minimum of 2 characters.\");\n        return;\n    }\n    setLoading(true);\n    try {\n      const response = await axiosInstance.post(\"/addPlatform\", {\n        platform_id: data?.user_platforms_id,\n        path: finalPath,\n        profile_id: id,\n        label: title,\n      });\n      if (response.status === 200) {\n        dispatch(pushPlatform({\n          id: data?.id,\n          user_platforms_id: data?.user_platforms_id,\n          title: data?.title,\n          icon: data?.icon,\n          path: baseUrl ? path.replace(baseUrl, \"\") : path,\n          label: title,\n          baseUrl: data?.baseUrl,\n        }))\n        toast.success(response.data.message);\n        closeModal();\n      }\n    } catch (error) {\n      toast.error(error.response.data.message);\n    } finally {\n        setLoading(false);\n    }\n  };\n\n  return ReactDOM.createPortal(\n    <div\n      id=\"authentication-modal\"\n      tabIndex=\"-1\"\n      aria-hidden=\"false\"\n      className=\"overflow-y-auto overflow-x-hidden fixed top-0 right-0 left-0 z-50 flex justify-center items-center w-full h-full bg-black bg-opacity-50\"\n    >\n      <div className=\"relative p-4 w-full max-w-lg max-h-full\">\n        <div className=\"relative bg-white rounded-lg shadow \">\n          <div className=\"flex items-center justify-between p-4 md:p-5 border-b rounded-t dark:border-gray-600\">\n            <h3 className=\"text-xl font-semibold text-gray-900 dark:text-gray-900\">\n              {data?.path ? \"Edit\" : \"Add\"} Link Info\n            </h3>\n            <button\n              type=\"button\"\n              onClick={closeModal}\n              className=\"text-gray-400 bg-transparent hover:bg-gray-200 hover:text-gray-900 rounded-lg text-sm w-8 h-8 inline-flex justify-center items-center dark:hover:bg-gray-900 dark:hover:text-white\"\n            >\n              <svg\n                className=\"w-3 h-3\"\n                aria-hidden=\"true\"\n                xmlns=\"http://www.w3.org/2000/svg\"\n                fill=\"none\"\n                viewBox=\"0 0 14 14\"\n              >\n                <path\n                  stroke=\"currentColor\"\n                  strokeLinecap=\"round\"\n                  strokeLinejoin=\"round\"\n                  strokeWidth=\"2\"\n                  d=\"m1 1 6 6m0 0 6 6M7 7l6-6M7 7l-6 6\"\n                />\n              </svg>\n              <span className=\"sr-only\">Close modal</span>\n            </button>\n          </div>\n          <div className=\"p-4 md:p-5\">\n            <form\n              onSubmit={submitUpdateLink}\n              className=\"space-y-4 text-center w-full\"\n            >\n              <div className=\"flex justify-center items-center size-10 rounded-full bg-tertiary-green-30 mx-auto\">\n                <img\n                  src={`${process.env.REACT_APP_SERVER}${data.icon}`}\n                  className=\"size-6\"\n                  alt=\"\"\n                />\n              </div>\n\n              <h1 className=\"text-black dark:text-black\">\n                Add {data.title}\n              </h1>\n\n              <div>\n                <h1 className=\"text-black text-left\">\n                  Title\n                </h1>\n                <Input\n                    intent={\"primary\"}\n                    size={\"lg\"}\n                    roundness={\"round-md\"}\n                    label={\"Title\"}\n                    placeholder={\"Enter Title\"}\n                    custom={\"custom\"}\n                    classes={\"w-full\"}\n                    name={\"title\"}\n                    value={title}\n                    eventAction={handleUpdateTitle}\n                />\n              </div>\n              <div>\n                <h1 className=\"text-black text-left\">\n                  Link\n                </h1>\n                <Input\n                  intent={\"primary\"}\n                  size={\"lg\"}\n                  roundness={\"round-md\"}\n                  label={\"Link\"}\n                  placeholder={\n                    data?.baseUrl ? data?.baseUrl : \"Enter Link\"\n                  }\n                  custom={\"custom\"}\n                  classes={\"w-full\"}\n                  name={\"link\"}\n                  value={path}\n                  eventAction={handleUpdatePath}\n                />\n              </div>\n\n              <Button\n                intent={\"primary\"}\n                size={\"md\"}\n                roundness={\"round\"}\n                children={\"Submit\"}\n                classes={\"!w-1/2 !p-2 !mx-auto\"}\n                loading={loading}\n              />\n            </form>\n          </div>\n        </div>\n      </div>\n    </div>,\n    document.body\n  );\n};\n\nexport default AddLinkBaseModal;\n","import React, { useState, useEffect, useRef } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { FiPlus } from \"react-icons/fi\";\nimport axiosInstance from \"../../utils/axiosInstance\";\nimport { toast } from \"react-toastify\";\nimport AddLinkInfoModal from \"./AddLinkInfoModal\";\nimport AddLinkBaseModal from \"./AddLinkBaseModal\";\n\nconst AddLinksModal = ({ id, closeModal }) => {\n  const [categories, setCategories] = useState([]);\n  const [activeCategory, setActiveCategory] = useState(null);\n  const [isLinkInfoOpenModal, setIsLinkInfoOpenModal] = useState(false);\n  const [selectedPlatform, setSelectedPlatform] = useState(null);\n  const categoryRefs = useRef({});\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    const fetchCategories = async () => {\n      try {\n        const response = await axiosInstance.post(\"/categories\", {\n          profile_id: id,\n        });\n        setCategories(response.data.categories);\n        setActiveCategory(response.data.categories[0]?.id || null);\n      } catch (error) {\n        console.log(error.data)\n        toast.error(error?.data?.message ?? \"Failed to fetch categories\");\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchCategories();\n  }, [id]);\n\n  const handleTabClick = (categoryId) => {\n    setActiveCategory(categoryId);\n    categoryRefs.current[categoryId]?.scrollIntoView({ behavior: \"smooth\" });\n  };\n\n  const handlePlatformClick = (platform) => {\n    setSelectedPlatform({\n      id: Date.now(),\n      user_platforms_id: platform?.id,\n      title: platform.title,\n      icon: platform.icon,\n      baseUrl: platform.baseURL,\n      path: \"\",\n      label: \"\",\n    });\n    setIsLinkInfoOpenModal(true);\n  };\n\n  const handleCloseModalLink = () => {\n    setIsLinkInfoOpenModal(false);\n  };\n\n  return ReactDOM.createPortal(\n      <div\n          id=\"authentication-modal\"\n          tabIndex=\"-1\"\n          aria-hidden=\"false\"\n          className=\"overflow-y-auto overflow-x-hidden fixed top-0 right-0 left-0 z-50 flex justify-center items-center w-full h-full bg-black bg-opacity-50\"\n      >\n        <div className=\"relative p-4 w-full max-w-4xl max-h-full\">\n          <div className=\"relative bg-white rounded-lg shadow dark:bg-gray-700\">\n            <div className=\"flex items-center justify-between p-4 md:p-5 border-b rounded-t dark:border-gray-600\">\n              <h3 className=\"text-xl font-semibold text-gray-900 dark:text-white\">\n                Add Links\n              </h3>\n              <button\n                  type=\"button\"\n                  onClick={closeModal}\n                  className=\"text-gray-400 bg-transparent hover:bg-gray-200 hover:text-gray-900 rounded-lg text-sm w-8 h-8 inline-flex justify-center items-center dark:hover:bg-gray-600 dark:hover:text-white\"\n              >\n                <svg\n                    className=\"w-3 h-3\"\n                    aria-hidden=\"true\"\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                    fill=\"none\"\n                    viewBox=\"0 0 14 14\"\n                >\n                  <path\n                      stroke=\"currentColor\"\n                      strokeLinecap=\"round\"\n                      strokeLinejoin=\"round\"\n                      strokeWidth=\"2\"\n                      d=\"m1 1 6 6m0 0 6 6M7 7l6-6M7 7l-6 6\"\n                  />\n                </svg>\n                <span className=\"sr-only\">Close modal</span>\n              </button>\n            </div>\n            <div className=\"p-4 md:p-5\">\n              {loading ? (\n                  <div className=\"flex justify-center items-center h-64\">\n                    <span className=\"loader\"></span>\n                  </div>\n              ) : (\n                  <>\n                    {/* Tabs for Categories */}\n                    <div className=\"flex overflow-x-auto space-x-4 mb-4\">\n                      {categories.map((category) => (\n                          <button\n                              key={category.id}\n                              className={`px-4 py-2 rounded-lg ${\n                                  activeCategory === category.id\n                                      ? \"bg-gray-200 text-gray-900\"\n                                      : \"bg-gray-100 text-gray-600\"\n                              }`}\n                              onClick={() => handleTabClick(category.id)}\n                          >\n                            {category.name}\n                          </button>\n                      ))}\n                    </div>\n                    {/* Categories and Platforms */}\n                    <div className=\"flex flex-col gap-4 w-full pr-3 max-h-[400px] overflow-y-auto\">\n                      {categories.map((category) => (\n                          <div\n                              key={category.id}\n                              ref={(el) => (categoryRefs.current[category.id] = el)}\n                              className=\"space-y-4\"\n                          >\n                            <h4 className=\"text-lg font-semibold text-gray-900\">\n                              {category.name}\n                            </h4>\n                            <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-4\">\n                              {category.platforms.map((platform) => (\n                                  <div\n                                      key={platform.id}\n                                      className=\"flex items-center justify-between p-4 bg-white hover:bg-gray-100 cursor-pointer rounded-lg border border-gray-300\"\n                                      onClick={() => handlePlatformClick(platform)}\n                                  >\n                                    <div className=\"flex items-center gap-4\">\n                                      <img\n                                          src={`${process.env.REACT_APP_SERVER}${platform.icon}`}\n                                          className=\"size-5 text-center\"\n                                          alt={platform.title[0]}\n                                      />\n                                      <p className=\"text-base font-inter font-medium text-gray-900\">\n                                        {platform.title}\n                                      </p>\n                                    </div>\n                                    <FiPlus className=\"text-xl text-gray-600\" />\n                                  </div>\n                              ))}\n                            </div>\n                          </div>\n                      ))}\n                    </div>\n                  </>\n              )}\n            </div>\n          </div>\n        </div>\n        {isLinkInfoOpenModal && (\n            <AddLinkBaseModal\n                closeModal={handleCloseModalLink}\n                data={selectedPlatform}\n                id={id}\n            />\n        )}\n      </div>,\n      document.body\n  );\n};\n\nexport default AddLinksModal;","import React, { useState, useEffect } from \"react\";\nimport {FiPlus, FiEdit, FiTrash2} from \"react-icons/fi\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport AddLinksModal from \"../modal/AddLinksModal\";\nimport AddLinkInfoModal from \"../modal/AddLinkInfoModal\";\nimport axiosInstance from \"../../utils/axiosInstance\";\nimport { useParams } from \"react-router-dom\";\nimport AddLinkBaseModal from \"../modal/AddLinkBaseModal\";\nimport { toast } from \"react-toastify\";\nimport {Button} from \"../form\";\nimport {removePlatform} from \"../../context/slice/profileSlice\";\n\nconst Link = () => {\n  const { id } = useParams();\n  const dispatch = useDispatch();\n  const [isOpenModal, setIsOpenModal] = useState(false);\n  const [addLinkOpenModal, setAddLinkOpenModal] = useState(false);\n  const [confirmationModalOpen, setConfirmationModalOpen] = useState(false);\n  const [platformToDelete, setPlatformToDelete] = useState(null);\n  const [addLinkData, setAddLinkData] = useState({\n    id: \"\",\n    title: \"\",\n    img: \"\",\n    baseUrl: \"\",\n  });\n\n  const [loading, setLoading] = useState(false);\n  const { profileData } = useSelector((state) => state.profile);\n\n  const handleAddLink = () => {\n    setIsOpenModal(true);\n  };\n\n  const handleCloseModal = () => {\n    setIsOpenModal(false);\n  };\n\n  const handleAddBaseLink = (id, title, icon, baseUrl, path, label, plaformId) => {\n    setAddLinkOpenModal(true);\n    setAddLinkData((prev) => ({\n      ...prev,\n      id: id,\n      user_platforms_id: plaformId,\n      title: title,\n      icon: icon,\n      baseUrl: baseUrl,\n      path: path,\n      label: label,\n    }));\n  };\n\n  const handleCloseLinkBaseModal = async () => {\n    setAddLinkOpenModal(false);\n  };\n\n  const openConfirmationModal = (platformId) => {\n    setPlatformToDelete(platformId);\n    setConfirmationModalOpen(true);\n  };\n\n  const closeConfirmationModal = () => {\n    setConfirmationModalOpen(false);\n    setPlatformToDelete(null);\n  };\n\n  const handleDeletePlatform = async () => {\n    setLoading(true);\n    try {\n      await axiosInstance.post(\"/removePlatform\", {\n        user_platform_id: platformToDelete,\n      });\n      dispatch(removePlatform(platformToDelete));\n      toast.success(\"Platform removed successfully\");\n      closeConfirmationModal();\n    } catch (error) {\n      toast.error(\"Failed to remove platform\");\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n      <section className=\"h-full flex justify-center grow bg-primary border-r-2 border-r-white\">\n        <div className=\"flex flex-col w-full p-8 bg-white rounded-lg\">\n          {/* Header */}\n          <header className=\"text-start w-full z-40 flex justify-between items-center mb-8\">\n            <h1 className=\"font-inter font-bold text-2xl\">Links</h1>\n            <Button\n                intent={\"primary\"}\n                children={\"Add Link\"}\n                size={\"md\"}\n                roundness={\"round\"}\n                eventAction={handleAddLink}\n            />\n          </header>\n          {isOpenModal && (\n              <AddLinksModal\n                  id={id}\n                  closeModal={handleCloseModal}\n              />\n          )}\n          {addLinkOpenModal && (\n              <AddLinkBaseModal\n                  closeModal={handleCloseLinkBaseModal}\n                  data={addLinkData}\n                  id={id}\n              />\n          )}\n          {/* Content Area */}\n          <div\n              className=\"lg:h-[520px] md:h-[420px] h-[320px] overflow-y-auto flex flex-col gap-4 w-full\"\n              id=\"linksSection\"\n          >\n            {/* Display Existing Links */}\n            <div className=\"flex flex-col gap-4 w-full\">\n              {profileData?.platforms.length > 0 ? (\n                  <>\n                    {profileData?.platforms?.map((platform) => (\n                        <div key={platform.id} className=\"space-y-4\">\n                          <div className=\"flex items-center justify-between p-4 bg-gray-100 hover:bg-gray-200 cursor-pointer rounded-lg\">\n                            <div className=\"flex items-center gap-4\">\n                              <img\n                                  src={`${process.env.REACT_APP_SERVER}${platform.icon}`}\n                                  className=\"size-5 text-center\"\n                                  alt={platform.label}\n                              />\n                              <p className=\"text-base font-inter font-medium text-gray-900\">\n                                {platform.label}\n                              </p>\n                            </div>\n                            <div className=\"flex items-center gap-2\">\n                              <FiEdit\n                                  className=\"text-xl text-gray-600\"\n                                  onClick={() =>\n                                      handleAddBaseLink(\n                                          platform.id,\n                                          platform.title,\n                                          platform.icon,\n                                          platform.baseUrl,\n                                          platform.path,\n                                          platform.label,\n                                          platform.user_platforms_id,\n                                      )\n                                  }\n                              />\n                              <FiTrash2\n                                  className=\"text-xl text-gray-600\"\n                                  onClick={() => openConfirmationModal(platform.user_platforms_id)}\n                              />\n                            </div>\n                          </div>\n                        </div>\n                    ))}\n                  </>\n              ) : (\n                  <div className=\"space-y-4\">\n                    <h2 className=\"font-inter font-medium animate-pulse\">\n                      This profile doesn’t have any linked content yet.\n                    </h2>\n                  </div>\n              )}\n            </div>\n          </div>\n        </div>\n        {confirmationModalOpen && (\n            <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\n              <div className=\"bg-white rounded-lg shadow-lg p-6 w-full max-w-md\">\n                <h2 className=\"text-xl font-semibold mb-4\">Confirm Deletion</h2>\n                <p className=\"mb-6\">Are you sure you want to delete?</p>\n                <div className=\"flex justify-end gap-4\">\n                  <Button\n                      type=\"button\"\n                      intent={\"secondary\"}\n                      children={\"Cancel\"}\n                      size={\"sm\"}\n                      roundness={\"round\"}\n                      eventAction={closeConfirmationModal}\n                  />\n                  <Button\n                      type=\"button\"\n                      intent={\"primary\"}\n                      children={\"Confirm\"}\n                      size={\"sm\"}\n                      roundness={\"round\"}\n                      loading={loading}\n                      eventAction={handleDeletePlatform}\n                  />\n                </div>\n              </div>\n            </div>\n        )}\n      </section>\n  );\n};\n\nexport default Link;\n","import React, { useState, useEffect } from \"react\";\nimport {FiUpload} from \"react-icons/fi\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport axiosInstance from \"../../utils/axiosInstance\";\nimport { useParams } from \"react-router-dom\";\nimport { toast } from \"react-toastify\";\nimport {setProfileData, setQrColor, setQrPhoto, setThemeColor as updateThemeColor} from \"../../context/slice/profileSlice\";\nimport {Button} from \"../form\";\nimport imageCompression from \"browser-image-compression\";\nimport {base64ToBlob} from \"../../utils/base64ToBlob\";\n\nconst MAX_FILE_SIZE = 6 * 1024 * 1024;\n\nconst QrCodeEdit = () => {\n    const { id } = useParams();\n    const dispatch = useDispatch();\n    const { profileData } = useSelector((state) => state.profile);\n    const userData = useSelector((state) => state?.auth?.user);\n\n    const [qrColors, setQrColors] = useState([]);\n\n    const [selectedQrColor, setSelectedQrColor] = useState(null);\n    const [qrLogo, setQrLogo] = useState(null);\n    const [qrLogoPreview, setQrLogoPreview] = useState(null);\n\n    const [loading, setLoading] = useState(false);\n    const [update, setUpdate] = useState(true);\n    const [qrLoading, setQrLoading] = useState(false);\n\n    useEffect(() => {\n        const fetchQrColors = async () => {\n            setQrLoading(true);\n            try {\n                const response = await axiosInstance.get(\"/buttonColors\");\n                setQrColors(response.data.buttonColors);\n            } catch (error) {\n                console.error(\"Error fetching button colors:\", error);\n            }\n            setQrLoading(false);\n        }\n\n        if (profileData) {\n            setSelectedQrColor(profileData.qr_color || null);\n            if (profileData.qr_logo) {\n                setQrLogo(profileData.qr_logo);\n            }\n            dispatch(setQrColor(profileData.qr_color ?? \"#2A9562\"))\n            dispatch(setQrPhoto(profileData.qr_logo ?? null))\n        }\n\n        console.log(userData)\n        fetchQrColors();\n        setUpdate(false);\n    }, [update]);\n\n    const handleQrColor = (color) => {\n        setSelectedQrColor(color);\n        dispatch(setQrColor(color))\n    };\n\n    const handleLogoChange = async (e) => {\n        const file = e.target.files[0];\n        if (!file || file.size > MAX_FILE_SIZE) {\n            toast.error(`logo size must be less than 6MB.`);\n            return;\n        }\n\n        try {\n            const compressedFile = await imageCompression(file, { maxSizeMB: 4, useWebWorker: true });\n            const reader = new FileReader();\n            reader.onloadend = () => {\n                setQrLogo(base64ToBlob(reader.result));\n                setQrLogoPreview(reader.result);\n                dispatch(setQrPhoto(reader.result))\n            };\n            reader.readAsDataURL(compressedFile);\n        } catch (error) {\n            console.error(`Error compressing qr logo:`, error);\n        }\n    };\n\n    const handleRemoveLogo = () => {\n        setQrLogo(null);\n        setQrLogoPreview(null);\n        dispatch(setQrPhoto(null))\n    };\n\n    const resetQr = () => {\n        setSelectedQrColor(profileData.qr_color || null);\n        if (profileData.qr_logo) {\n            setQrLogo(profileData.qr_logo);\n            setQrLogoPreview(null);\n            dispatch(setQrPhoto(profileData.qr_logo ?? null))\n        }\n        dispatch(setQrColor(profileData.qr_color ?? \"#2A9562\"))\n    }\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n\n        if (!userData?.is_pro && !userData?.is_subscribed) {\n            toast.error('Upgrade to Pro to create a customize QR Code')\n            return;\n        }\n\n        setLoading(true);\n\n        try {\n            const body = {\n                profile_id: id,\n                qr_color: selectedQrColor,\n                qr_logo: qrLogo\n            }\n\n            console.log(body, 'body');\n            const response = await axiosInstance.post(\"/updateProfile\", body);\n\n            if (response.status === 200) {\n                toast.success(\"QR Code updated successfully\");\n\n                // Update profile data in redux\n                dispatch(setProfileData({\n                    ...profileData,\n                    qr_color: selectedQrColor,\n                    qr_logo: qrLogo\n                }));\n            }\n        } catch (error) {\n            toast.error(error.response?.data?.message || \"Error updating QR code\");\n            console.error(\"Error updating QR code:\", error);\n        } finally {\n            setLoading(false);\n        }\n    };\n\n    return (\n        <section className=\"h-full flex justify-center grow bg-white border-r-2 border-r-white overflow-y-auto\">\n            <div className=\"flex flex-col w-full p-8 bg-white rounded-lg\">\n                {/* Header */}\n                <header className=\"text-start w-full z-40 flex justify-between items-center mb-8\">\n                    <h1 className=\"font-inter font-bold text-2xl\">Qr Code</h1>\n                </header>\n\n                <form onSubmit={handleSubmit} className=\"space-y-6\">\n                    {/* QR Color Selection */}\n                    <div className=\"w-full bg-primary rounded-lg p-3\">\n                        <div className=\"w-full rounded-lg flex lg:flex-row md:flex-row flex-col lg:gap-0 md:gap-0 gap-3 items-center justify-between bg-white border border-primary p-3\">\n                        <label\n                            htmlFor=\"\"\n                            className=\"block text-sm font-inter font-medium text-gray-900\"\n                        >\n                            Choose QR Code Theme\n                        </label>\n                        <div className=\"flex items-center justify-end flex-grow gap-2\">\n                            {qrColors?.map((color) => (\n                                <div\n                                    key={color.id}\n                                    className={`rounded-full w-6 h-6 cursor-pointer border ${selectedQrColor === color.color_code ? 'ring-2 ring-black ring-offset-2' : ''}`}\n                                    style={{ backgroundColor: color.color_code }}\n                                    onClick={() => handleQrColor(color.color_code)}\n                                ></div>\n                            ))}\n                            {qrLoading && (\n                                <p>Loading...</p>\n                            )}\n                        </div>\n                    </div>\n                    </div>\n\n                    {/* QR Logo Upload */}\n                    <div className=\"w-full bg-primary rounded-lg p-3\">\n                        <div className=\"bg-white p-3 rounded-lg\">\n                            <label\n                                htmlFor=\"qr-logo\"\n                                className=\"block text-sm font-inter font-medium text-gray-900 mb-2\"\n                            >\n                                Custom logo\n                            </label>\n\n                            <div className=\"flex flex-col items-center space-y-4\">\n                                {qrLogo && !qrLogoPreview ? (\n                                    <div className=\"relative\">\n                                        <img\n                                            src={`${process.env.REACT_APP_SERVER}${qrLogo}`}\n                                            alt=\"QR Logo Preview\"\n                                            className=\"h-24 w-24 object-contain border border-gray-200 rounded-md\"\n                                        />\n                                        <button\n                                            type=\"button\"\n                                            onClick={handleRemoveLogo}\n                                            className=\"absolute -top-2 -right-2 bg-red-500 text-white rounded-full p-1 text-xs\"\n                                        >\n                                            ✕\n                                        </button>\n                                    </div>\n                                ) : qrLogoPreview ? (\n                                    <div className=\"relative\">\n                                        <img\n                                            src={qrLogoPreview}\n                                            alt=\"QR Logo Preview\"\n                                            className=\"h-24 w-24 object-contain border border-gray-200 rounded-md\"\n                                        />\n                                        <button\n                                            type=\"button\"\n                                            onClick={handleRemoveLogo}\n                                            className=\"absolute -top-2 -right-2 bg-red-500 text-white rounded-full p-1 text-xs\"\n                                        >\n                                            ✕\n                                        </button>\n                                    </div>\n                                ) : (\n                                    <div className=\"flex items-center justify-center w-full\">\n                                        <label\n                                            htmlFor=\"qr-logo-input\"\n                                            className=\"flex flex-col items-center justify-center w-1/2 mx-auto h-32 border-2 border-gray-300 border-dashed rounded-lg cursor-pointer bg-gray-50 hover:bg-gray-100\"\n                                        >\n                                            <div className=\"flex flex-col items-center justify-center pt-5 pb-6\">\n                                                <FiUpload className=\"w-8 h-8 text-gray-500 mb-2\" />\n                                                <p className=\"mb-2 text-sm text-gray-500\">\n                                                    <span className=\"font-semibold\">Click to upload</span>\n                                                </p>\n                                            </div>\n                                            <input\n                                                id=\"qr-logo-input\"\n                                                type=\"file\"\n                                                accept=\"image/*\"\n                                                className=\"hidden\"\n                                                onChange={handleLogoChange}\n                                            />\n                                        </label>\n                                    </div>\n                                )}\n\n                                <p className=\"text-sm text-gray-500 italic\">\n                                    Add custom logo to be displayed in the middle of the QR Code\n                                </p>\n                            </div>\n                        </div>\n                    </div>\n\n                    {/* Submit Button */}\n                    <div className=\"flex justify-end gap-4 pb-2\">\n                        <Button\n                            type=\"submit\"\n                            intent={\"primary\"}\n                            children={\"Save QR Code\"}\n                            size={\"sm\"}\n                            loading={loading}\n                            roundness={\"round\"}\n                            classes={\"!bg-black !text-white\"}\n                        />\n                        <Button\n                            type=\"button\"\n                            intent={\"secondary\"}\n                            children={\"Reset\"}\n                            size={\"lg\"}\n                            classes={\"gap-2 !py-2 !px-5\"}\n                            eventAction={resetQr}\n                        />\n                    </div>\n                </form>\n            </div>\n        </section>\n    );\n};\n\nexport default QrCodeEdit;\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport About from \"./About\";\nimport Link from \"./Link\";\nimport QrCodeEdit from \"./QrCodeEdit\";\n\nconst ProfileEd = () => {\n  const linkData = useSelector((state) => state.profile.sectionLnk);\n\n  return (\n    <div className={`w-full lg:w-[55%] overflow-hidden rounded-2xl`}>\n      {linkData === \"about\" && <About />}\n      {linkData === \"links\" && <Link />}\n      {linkData === \"qrCode\" && <QrCodeEdit />}\n    </div>\n  );\n};\n\nexport default ProfileEd;\n","import React, { useEffect, useState } from \"react\";\nimport avatar from \"../../assets/svgs/avatar.svg\";\nimport { ReactSVG } from \"react-svg\";\nimport { useSelector } from \"react-redux\";\nimport {Button} from \"../form\";\n\nconst ProfileViewCard = () => {\n  const userData = useSelector((state) => state.profile.profileViewData);\n  const selectedThemeColor = useSelector((state) => state.profile.themeColor);\n  const selectedTextColor = useSelector((state) => state.profile.textColor);\n  const [layout, setLayout] = useState(\"center\");\n\n  console.log(userData, 'userData');\n  const [photoData, setProfilePicData] = useState({\n    url: \"\",\n    base64Str: \"\",\n  });\n\n  const [coverPhotoData, setCoverPicData] = useState({\n    url: \"\",\n    base64Str: \"\",\n  });\n\n  useEffect(() => {\n    setLayout(userData?.work_position ?? \"center\");\n    if (userData?.photo) {\n      if (userData?.photo.startsWith(\"data:image/\")) {\n        setProfilePicData((prev) => ({\n          ...prev,\n          base64Str: userData.photo,\n        }));\n      }\n      if (userData?.photo.startsWith(\"uploads/\")) {\n        setProfilePicData((prev) => ({\n          ...prev,\n          url: userData.photo,\n        }));\n      }\n    }\n    if (userData?.cover_photo) {\n      if (userData?.cover_photo.startsWith(\"data:image/\")) {\n        setCoverPicData((prev) => ({\n          ...prev,\n          base64Str: userData.cover_photo,\n        }));\n      }\n      if (userData?.cover_photo.startsWith(\"uploads/\")) {\n        setCoverPicData((prev) => ({\n          ...prev,\n          url: userData.cover_photo,\n        }));\n      }\n    }\n  }, [userData]);\n\n  // console.log(photoData, 'photoData');\n  //   console.log(coverPhotoData, 'coverPhotoData');\n\n  return (\n    <div className=\"space-y-4 h-full\">\n\n      <div className={`w-full min-h-full rounded-t-3xl shadow-lg border`} style={{ background: selectedThemeColor }}>\n        <div className=\"h-32 relative\">\n          <div className={\"w-full h-full rounded-t-3xl\"}>\n            {userData?.cover_photo ? (\n                  <>\n                    {coverPhotoData?.base64Str ? (\n                        <img\n                            src={userData?.cover_photo}\n                            className=\"w-full h-full rounded-t-3xl object-cover\"\n                            alt=\"cover-pic\"\n                        />\n                    ) : coverPhotoData?.url ? (\n                        <img\n                            src={`${process.env.REACT_APP_SERVER}${coverPhotoData.url}`}\n                            className=\"w-full h-full rounded-t-3xl object-cover\"\n                            alt=\"cover-pic\"\n                        />\n                    ) : (\n                        <div className=\"w-full h-full bg-gray-500 rounded-t-3xl\"></div>\n                    )}\n                  </>\n              ) :\n              <div className=\"w-full h-full bg-tertiary-gray-700 rounded-t-3xl\"></div>\n            }\n          </div>\n          <div className={`absolute ${layout === 'left' ? 'left-4'\n              : (layout === 'right' ? 'right-4' : 'left-1/2 -translate-x-1/2') } -bottom-1/2 w-[40%] aspect-square overflow-hidden rounded-full border-white border-4`}>\n            {userData?.photo ? (\n                <>\n                  {photoData.base64Str ? (\n                      <img\n                          src={userData.photo}\n                          className=\"rounded-full w-full h-full object-cover\"\n                          alt=\"profile\"\n                      />\n                  ) : photoData?.url ? (\n                      <img\n                          src={`${process.env.REACT_APP_SERVER}${photoData.url}`}\n                          className=\"rounded-full w-full h-full object-cover\"\n                          alt=\"profile\"\n                      />\n                  ) : (\n                      <ReactSVG src={avatar} />\n                  )}\n                </>\n            ) : (\n                <div className=\"w-full h-full flex items-center justify-center bg-gray-100\">\n                  <img src={avatar} alt=\"\" className={\"w-1/2\"}/>\n                </div>\n            )}\n          </div>\n        </div>\n        <div className={`w-full flex flex-col \n            ${layout === 'left' ? 'justify-start items-start text-left' \n            : (layout === 'right' ? 'justify-end items-end text-right' : 'justify-center items-center text-center') }\n             mt-20 px-4`}>\n          <h3 style={{ color: selectedTextColor }}>{userData?.name}</h3>\n          <p style={{ color: selectedTextColor }}>{userData?.job_title}</p>\n          <p style={{ color: selectedTextColor }}>{userData?.company}</p>\n          <p style={{ color: selectedTextColor }}>{userData?.address}</p>\n          <p style={{ color: selectedTextColor }} className={`break-all mt-1`}>{userData?.bio}</p>\n        </div>\n        <div className={\"w-full flex justify-center items-center mt-4 px-4\"}>\n          <Button\n              style={{ background: selectedTextColor, color: 'white', borderColor: selectedTextColor }}\n              intent={\"secondary\"}\n              children={\"Update\"}\n              size={\"md\"}\n              roundness={\"round\"}\n              classes={`w-full`}\n          />\n        </div>\n        <div className={\n          layout === 'left' ? 'w-full flex flex-col items-start text-left gap-2 px-4 my-4' : layout === 'right' ? 'w-full flex flex-col items-end text-right gap-2 px-4 my-4' : 'w-full flex flex-wrap items-start justify-center gap-2 px-4 my-4'\n        }>\n          {userData?.platforms?.map((platform, index) => (\n              <div key={index}\n                   className={\n                     layout === 'left' ? 'w-full flex flex-row items-center justify-start gap-2' : layout === 'right' ? 'w-full flex flex-row-reverse items-center justify-start gap-2' : 'flex flex-col items-center justify-start gap-2'\n                   }\n                   style={{ width: layout === 'center' ? 'calc(33.33% - 8px)' : '100%' }}>\n                <div style={{ width: layout === 'center' ? '100%' : '80px' }}>\n                  <img className=\"w-full\" src={`${process.env.REACT_APP_SERVER}${platform.icon}`} alt={platform.title}/>\n                </div>\n                <p className={`font-inter text-base font-normal text-center`} style={{ color: selectedTextColor }}>\n                  {platform.label ?? platform.title}\n                </p>\n              </div>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ProfileViewCard;\n","import React from \"react\";\nimport ProfileViewCard from \"./ProfileViewCard\";\nimport { CiShare1 } from \"react-icons/ci\";\nimport {BsShare} from \"react-icons/bs\";\nimport {Link} from \"react-router-dom\";\n\nconst ProfileView = () => {\n  return (\n    <section\n      className=\"w-full lg:w-3/12 lg:col-span-2 justify-center overflow-y-auto\"\n      id=\"profileView\"\n    >\n      <div className=\"w-full flex-col gap-4 py-4 h-full\">\n        <div className=\"flex flex-col gap-4 text-center mb-2\">\n          <div className=\"text-start w-full\">\n            <h1 className=\"font-inter font-bold text-xl\">\n              Card live preview\n            </h1>\n          </div>\n          <Link className=\"font-normal text-md text-blue-400\" to={\"\"}>\n            View Card <CiShare1 className=\"font-extrabold text-base inline-block\" />\n          </Link>\n        </div>\n        <ProfileViewCard />\n      </div>\n    </section>\n  );\n};\n\nexport default ProfileView;\n","import {Link, useParams} from \"react-router-dom\";\nimport {CiShare1} from \"react-icons/ci\";\nimport ProfileViewCard from \"./ProfileViewCard\";\nimport React, { useState, useEffect } from \"react\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {useForm} from \"react-hook-form\";\nimport QRCode from \"react-qr-code\";\nimport logo from \"../../assets/svgs/logo.svg\";\n\n\nconst QrCodePreview = () => {\n    const { id } = useParams();\n    const { profileData } = useSelector((state) => state.profile);\n    const qrColor = useSelector((state) => state.profile.qrColor);\n    const qrLogo = useSelector((state) => state.profile.qrPhoto);\n\n    console.log(qrLogo, qrColor);\n\n    return (\n        <section\n            className=\"w-full lg:w-3/12 lg:col-span-2 justify-center overflow-y-auto\"\n        >\n            <div className=\"w-full flex-col gap-4 py-4 h-full\">\n                <div className=\"flex flex-col gap-4 text-center mb-2\">\n                    <div className=\"text-start w-full\">\n                        <h1 className=\"font-inter font-bold text-xl\">\n                            {profileData?.name} QR Code\n                        </h1>\n                    </div>\n                </div>\n                {/* QR Code Display */}\n                <div className=\"flex items-center justify-center my-6\">\n                    <div className=\"relative bg-white p-4 rounded-lg shadow-md inline-block\">\n                        <QRCode\n                            value={profileData?.card_uuid}\n                            size={250}\n                            fgColor={qrColor}\n                            level=\"H\"\n                        />\n\n                        <div className=\"absolute inset-0 flex items-center justify-center\">\n                            {qrLogo ? (\n                                <>\n                                    {qrLogo.startsWith(\"data:image/\") ? (\n                                        <img\n                                            src={qrLogo}\n                                            className=\"h-11 w-11 object-contain bg-white rounded-md\"\n                                            alt=\"QR logo\"\n                                        />\n                                    ) : qrLogo.startsWith(\"uploads/\") ? (\n                                        <img\n                                            src={`${process.env.REACT_APP_SERVER}${qrLogo}`}\n                                            className=\"h-11 w-11 object-contain bg-white rounded-md\"\n                                            alt=\"QR logo\"\n                                        />\n                                    ) : (\n                                        <img\n                                            src={logo}\n                                            className=\"h-11 w-11 object-contain bg-white rounded-md\"\n                                            alt=\"QR logo\"\n                                        />\n                                    )}\n                                </>\n                            ) : (\n                                <img\n                                    src={logo}\n                                    className=\"h-11 w-11 object-contain bg-white rounded-md\"\n                                    alt=\"QR logo\"\n                                />\n                            )}\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </section>\n    );\n}\n\nexport default QrCodePreview;","import React from \"react\";\nimport ProfileNav from \"./ProfileNav\";\nimport ProfileEd from \"./ProfileEd\";\nimport ProfileView from \"./ProfileView\";\nimport {useSelector} from \"react-redux\";\nimport QrCodePreview from \"./QrCodePreview\";\nconst ProfileEdit = () => {\n    const linkData = useSelector((state) => state.profile.sectionLnk);\n\n    return (\n    <section className=\"w-full h-full lg:h-[calc(100vh-100px)] flex flex-col lg:flex-row gap-4 rounded-2xl bg-primary p-4\">\n        <ProfileNav />\n        <ProfileEd />\n        {linkData === \"qrCode\" ?  <QrCodePreview /> : <ProfileView />}\n    </section>\n  );\n};\n\nexport default ProfileEdit;\n","import React, {useState, useEffect} from \"react\";\nimport { ReactSVG } from \"react-svg\";\nimport avatar from \"../../assets/svgs/avatar.svg\";\nimport {Button, Input} from \"../form\";\nimport edit from \"../../assets/svgs/edit.svg\";\nimport NavLink from \"../NavLink\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {sectionLink, setProfileData} from \"../../context/slice/profileSlice\";\nimport {toast} from \"react-toastify\";\nimport QRCode from \"react-qr-code\";\nimport logo from \"../../assets/svgs/logo.svg\";\n\n\nconst ProfileCard = (result) => {\n  const profileId = useSelector((state) => state.profile.profileId);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [qrValue, setQrValue] = useState(\"\");\n  const [qrColor, setQrColor] = useState(\"#2A9562\");\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (result?.card_uuid) {\n      setQrValue(result.card_uuid);\n    }\n\n    // Get QR color from profile if available\n    if (result?.button_color) {\n      setQrColor(result.button_color?.color_code || \"#000000\");\n    }\n  }, [result]);\n  const profileDataDispatch = (data) => {\n    dispatch(sectionLink(\"about\"));\n    dispatch(setProfileData(data));\n  };\n\n  const handleCopyLink = () => {\n    navigator.clipboard.writeText(result?.card_uuid);\n    toast.success(\"Link copied to clipboard!\");\n  };\n\n  return (\n    <div\n      key={result?.id}\n      className={`bg-primary  p-4 rounded-2xl relative flex flex-col justify-between ${\n        Number(profileId) === result?.id\n          ? \"border border-tertiary-green-50\"\n          : \"\"\n      }`}\n    >\n      <div className=\"bg-tertiary-gray-700 rounded-t-2xl w-full h-32\">\n      {result.cover_photo && (\n          <img\n              src={`${process.env.REACT_APP_SERVER}${result.cover_photo}`}\n              className=\"w-full h-32 rounded-t-2xl object-cover\"\n              alt=\"cover_photo\"\n          />\n      )}\n      </div>\n      {result.photo && (\n          <img\n              src={`${process.env.REACT_APP_SERVER}${result.photo}`}\n          className=\"size-20 rounded-full border border-secondary object-cover flex justify-center items-center z-10 absolute top-24 left-1/2 transform -translate-x-1/2\"\n          alt=\"profile\"\n        />\n      )}\n      {!result.photo && (\n        <div className=\"size-20 rounded-full border border-secondary bg-primary flex justify-center items-center z-10 absolute top-24 left-1/2 transform -translate-x-1/2\">\n          <ReactSVG src={avatar} />\n        </div>\n      )}\n      <div className=\"flex flex-col justify-center items-center gap-2 mt-12\">\n        <h3 className=\"font-inter font-semibold text-lg\">{result?.name}</h3>\n        <p className=\"font-inter font-normal text-base\">{result?.job_title}</p>\n        <div className=\"flex gap-2 items-center\">\n          <Button\n            type={\"button\"}\n            intent={\"primary\"}\n            size={\"md\"}\n            children={\"Share\"}\n            classes={\"\"}\n            eventAction={() => setIsModalOpen(true)}\n          />\n\n          <NavLink\n            intent={\"secondary\"}\n            size={\"md\"}\n            content={\"Edit\"}\n            classes={\"gap-2\"}\n            iconLeft={edit}\n            href={`/profile/${result?.id}`}\n            eventAction={() => profileDataDispatch(result)}\n          />\n        </div>\n      </div>\n      {isModalOpen && (\n          <div className=\"fixed inset-0 bg-black bg-opacity-50 flex justify-center items-center z-50\">\n            <div className=\"relative bg-white rounded-lg shadow w-full max-w-lg\">\n              <div className=\"flex items-center justify-between p-2 md:p-5 border-b rounded-t\">\n                <h3 className=\"text-xl font-semibold text-gray-900 \">\n                  {\"Share Card\"}\n                </h3>\n                <button\n                    type=\"button\"\n                    onClick={() => setIsModalOpen(false)}\n                    className=\"text-gray-400 bg-transparent hover:bg-gray-200 hover:text-gray-900 rounded-lg text-sm w-8 h-8 inline-flex justify-center items-center \"\n                >\n                  <svg\n                      className=\"w-3 h-3\"\n                      aria-hidden=\"true\"\n                      xmlns=\"http://www.w3.org/2000/svg\"\n                      fill=\"none\"\n                      viewBox=\"0 0 14 14\"\n                  >\n                    <path\n                        stroke=\"currentColor\"\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                        strokeWidth=\"2\"\n                        d=\"m1 1 6 6m0 0 6 6M7 7l6-6M7 7l-6 6\"\n                    />\n                  </svg>\n                  <span className=\"sr-only\">Close modal</span>\n                </button>\n              </div>\n              {/* QR Code Section */}\n              <div className=\"my-4 flex flex-col items-center\">\n                <h4 className=\"text-lg font-medium mb-2 text-center\">Scan QR Code</h4>\n                <div className=\"bg-white rounded-lg shadow-sm inline-block\">\n                  <div className=\"relative\">\n                    <QRCode\n                        id=\"profile-qr-code\"\n                        value={qrValue}\n                        size={170}\n                        fgColor={result?.qr_color_code || qrColor}\n                        style={{ maxWidth: \"100%\", height: \"auto\" }}\n                        level=\"H\"\n                    />\n\n                    <div className=\"absolute inset-0 flex items-center justify-center\">\n                      <img\n                          src={ result?.qr_logo ? `${process.env.REACT_APP_SERVER}${result.qr_logo}` : logo}\n                          className=\"h-11 w-11 object-contain bg-white rounded-md\"\n                          alt=\"QR logo\"\n                      />\n                    </div>\n                  </div>\n                </div>\n                <p className=\"text-xs text-gray-500 mt-2\">Scan the code by placing camera in front of code</p>\n              </div>\n              <div className=\"px-8\">\n                <div className=\"py-6 border-t\">\n                  <p className=\"text-lg font-medium mb-2 text-center\">Share Profile Link</p>\n                  <div className=\"w-full flex items-center justify-between bg-gray-50 border border-gray-200 rounded-lg overflow-hidden\">\n                    <div className=\"w-full px-3 py-2 overflow-hidden overflow-ellipsis whitespace-nowrap text-gray-600\">\n                      {result?.card_uuid}\n                    </div>\n                    <button\n                        onClick={handleCopyLink}\n                        className=\"bg-secondary hover:bg-tertiary-green-65 transition-colors text-white px-4 py-2 h-full flex items-center justify-center gap-1\"\n                    >\n                      <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                        <path d=\"M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z\" />\n                        <path d=\"M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z\" />\n                      </svg>\n                      Copy\n                    </button>\n                  </div>\n                  <p className=\"text-xs text-gray-500 mt-2 text-center\">\n                    Share this link to let others view your profile\n                  </p>\n                </div>\n              </div>\n            </div>\n          </div>\n      )}\n    </div>\n  );\n};\n\nexport default ProfileCard;\n","import React from \"react\";\nimport QRCode from \"react-qr-code\";\nimport {Button} from \"../form\";\n\nconst QRCodeModal = ({ onClose }) => {\n    return (\n        <div className=\"fixed inset-0 flex items-center justify-center bg-black bg-opacity-50\">\n            <div className=\"bg-white p-6 rounded-lg shadow-lg max-w-lg\">\n                <div className={\"flex items-end mb-4\"}>\n                    <div className={`flex items-end border-r-2 pr-4`}>\n                        <p className=\"font-inter font-bold text-3xl\">\n                            Solve\n                        </p>\n                        <span className=\"font-inter font-medium text-xl\">\n                          Card\n                        </span>\n                    </div>\n                    <h6 className=\"ps-4 text-xl font-lg\">Download the app</h6>\n                </div>\n                <p className=\"mb-4\">The SolveCard app is needed to share your digital business card.</p>\n                <div className=\"flex justify-center mb-4\">\n                    <QRCode value=\"https://example.com/download-app\" />\n                </div>\n                <p className=\"text-center\">Scan this QR code to get the app on</p>\n                <p className=\"text-center\">iPhone or Android</p>\n                <div className={\"flex justify-end mt-4\"}>\n                    <Button\n                        type={\"button\"}\n                        intent={\"secondary\"}\n                        size={\"md\"}\n                        children={\"Close\"}\n                        classes={\"\"}\n                        eventAction={onClose}\n                    />\n                </div>\n\n            </div>\n        </div>\n    );\n};\n\nexport default QRCodeModal;","import React, { useState } from \"react\";\nimport axiosInstance from \"../../utils/axiosInstance\";\nimport { Button, Input } from \"../form\";\nimport { toast } from \"react-toastify\";\n\nconst AddProfileModal = ({ onClose, onProfileAdded }) => {\n    const [loading, setLoading] = useState(false);\n    const [formData, setFormData] = useState({\n        card_title: \"\",\n        name: \"\",\n        company: \"\",\n        job_title: \"\"\n    });\n\n    const handleChange = (e) => {\n        const { name, value } = e.target;\n        setFormData({ ...formData, [name]: value });\n    };\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        setLoading(true);\n        const { card_title, name, company, job_title } = formData;\n\n        if (!card_title || !name || !company || !job_title) {\n            toast.error(\"All fields are required.\");\n            return;\n        }\n\n        try {\n            const response = await axiosInstance.post(\"/addProfile\", formData);\n            if (response.status === 200) {\n                toast.success(response?.data?.message);\n                setLoading(false);\n                onProfileAdded(); // Trigger the callback to reload profiles\n                onClose();\n            }\n        } catch (error) {\n            console.error(error);\n            toast.error(error.response?.data?.message);\n            setLoading(false);\n        }\n    };\n\n    return (\n        <div className=\"fixed inset-0 flex items-center justify-center bg-black bg-opacity-50 z-50\">\n            <div className=\"relative bg-white rounded-lg shadow w-full max-w-lg\">\n                <div className=\"flex items-center justify-between p-4 md:p-5 border-b rounded-t\">\n                    <h3 className=\"text-xl font-semibold text-gray-900 \">\n                        {\"Add Card\"}\n                    </h3>\n                    <button\n                        type=\"button\"\n                        onClick={onClose}\n                        className=\"text-gray-400 bg-transparent hover:bg-gray-200 hover:text-gray-900 rounded-lg text-sm w-8 h-8 inline-flex justify-center items-center \"\n                    >\n                        <svg\n                            className=\"w-3 h-3\"\n                            aria-hidden=\"true\"\n                            xmlns=\"http://www.w3.org/2000/svg\"\n                            fill=\"none\"\n                            viewBox=\"0 0 14 14\"\n                        >\n                            <path\n                                stroke=\"currentColor\"\n                                strokeLinecap=\"round\"\n                                strokeLinejoin=\"round\"\n                                strokeWidth=\"2\"\n                                d=\"m1 1 6 6m0 0 6 6M7 7l6-6M7 7l-6 6\"\n                            />\n                        </svg>\n                        <span className=\"sr-only\">Close modal</span>\n                    </button>\n                </div>\n                <form onSubmit={handleSubmit} className=\"p-4 md:p-5\">\n                    <div className=\"mb-4\">\n                        <label className=\"block text-gray-700 text-sm font-bold mb-2\" htmlFor=\"card_title\">\n                            Card Title\n                        </label>\n                        <Input\n                            type={\"text\"}\n                            name={\"card_title\"}\n                            intent={\"primary\"}\n                            id={\"card-title\"}\n                            size={\"md\"}\n                            value={formData.card_title}\n                            classes={\"w-full block p-2.5\"}\n                            roundness={\"round-sm\"}\n                            placeholder={\"Card Title\"}\n                            custom={\"custom\"}\n                            eventAction={handleChange}\n                        />\n                    </div>\n                    <div className=\"mb-4\">\n                        <label className=\"block text-gray-700 text-sm font-bold mb-2\" htmlFor=\"name\">\n                            Name\n                        </label>\n                        <Input\n                            type=\"text\"\n                            name=\"name\"\n                            value={formData.name}\n                            eventAction={handleChange}\n                            intent=\"primary\"\n                            size=\"md\"\n                            classes=\"w-full block p-2.5\"\n                            roundness=\"round-sm\"\n                            placeholder=\"Name\"\n                            custom=\"custom\"\n                            required\n                        />\n                    </div>\n                    <div className=\"mb-4\">\n                        <label className=\"block text-gray-700 text-sm font-bold mb-2\" htmlFor=\"company\">\n                            Company\n                        </label>\n                        <Input\n                            type=\"text\"\n                            name=\"company\"\n                            value={formData.company}\n                            eventAction={handleChange}\n                            intent=\"primary\"\n                            size=\"md\"\n                            classes=\"w-full block p-2.5\"\n                            roundness=\"round-sm\"\n                            placeholder=\"Company\"\n                            custom=\"custom\"\n                            required\n                        />\n                    </div>\n                    <div className=\"mb-4\">\n                        <label className=\"block text-gray-700 text-sm font-bold mb-2\" htmlFor=\"job_title\">\n                            Job Title\n                        </label>\n                        <Input\n                            type=\"text\"\n                            name=\"job_title\"\n                            value={formData.job_title}\n                            eventAction={handleChange}\n                            intent=\"primary\"\n                            size=\"md\"\n                            classes=\"w-full block p-2.5\"\n                            roundness=\"round-sm\"\n                            placeholder=\"Job Title\"\n                            custom=\"custom\"\n                            required\n                        />\n                    </div>\n                    <div className=\"flex justify-end mt-4\">\n                        <Button\n                            type=\"button\"\n                            intent=\"secondary\"\n                            size=\"md\"\n                            children=\"Close\"\n                            classes=\"\"\n                            eventAction={onClose}\n                        />\n                        <Button\n                            type=\"submit\"\n                            intent=\"primary\"\n                            size=\"md\"\n                            children=\"Submit\"\n                            classes=\"ml-2\"\n                            loading={loading}\n                        />\n                    </div>\n                </form>\n            </div>\n        </div>\n    );\n};\n\nexport default AddProfileModal;","import React, {useState} from \"react\";\nimport { IoMdAdd } from \"react-icons/io\";\nimport QRCodeModal from \"../modal/QRCodeModal\";\nimport {useSelector} from \"react-redux\";\nimport AddProfileModal from \"../modal/AddProfileModal\";\n\nconst AddProfileCard = ({ onProfileAdded }) => {\n    const [isModalOpen, setIsModalOpen] = useState(false);\n    const [ModalType, setModalType] = useState(\"\");\n    const userData = useSelector((state) => state?.auth?.user);\n\n    const handleOpenModal = () => {\n        if (userData?.is_pro && userData?.is_subscribed) {\n            setModalType(\"addProfile\")\n            setIsModalOpen(true);\n        } else {\n            setModalType(\"qrCode\")\n            setIsModalOpen(true);\n        }\n    };\n\n    const handleCloseModal = () => {\n        setIsModalOpen(false);\n    };\n  return (\n      <>\n          <div\n              className=\"bg-primary p-4 rounded-2xl h-full min-h-64 relative flex flex-col gap-2 justify-center items-center cursor-pointer\"\n              onClick={handleOpenModal}\n          >\n              <div className=\"bg-gradient-to-t from-tertiary-green-60 to-tertiary-green-70 size-16 rounded-full flex justify-center items-center\">\n                  <IoMdAdd className=\"size-8\" />\n              </div>\n              <p className=\"font-inter font-medium text-lg text-center\">New Card</p>\n          </div>\n          {isModalOpen && ModalType === 'qrCode' && <QRCodeModal onClose={handleCloseModal} />}\n          {isModalOpen && ModalType === 'addProfile' && <AddProfileModal onClose={handleCloseModal} onProfileAdded={onProfileAdded} />}\n      </>\n  );\n};\n\nexport default AddProfileCard;\n","export const base64ToBlob = (base64, mimeType = \"image/jpeg\") => {\n  // Split the base64 string to handle the data URL format\n  const byteString = atob(base64.split(\",\")[1]); // Decode base64 string\n  const arrayBuffer = new ArrayBuffer(byteString.length); // Create an ArrayBuffer\n  const uint8Array = new Uint8Array(arrayBuffer); // Create a typed array\n\n  // Fill the typed array with the binary data\n  for (let i = 0; i < byteString.length; i++) {\n    uint8Array[i] = byteString.charCodeAt(i);\n  }\n\n  // Create and return a Blob with the specified MIME type\n  return new Blob([uint8Array], { type: mimeType });\n};\n"],"names":["ProfileNav","dispatch","useDispatch","handleLinks","link","sectionLink","_jsx","className","id","children","_jsxs","onClick","CiUser","AiOutlineLink","MdOutlineQrCode2","About","useParams","register","useForm","userData","useSelector","state","profile","profileData","photoInputRef","useRef","coverPhotoInputRef","themeColor","setThemeColor","useState","textColor","setTextColor","backgroundColors","setBackgroundColors","buttonColors","setButtonColors","loading","setLoading","colorLoading","setColorLoading","picData","setPicData","photo","cover_photo","blobCon","setBlobCon","userProfile","setUserProfile","card_title","name","company","job_title","address","bio","work_position","user_direct","private","useEffect","_userData$button_colo","prev","console","log","background_color_code","updateThemeColor","updateTextColor","button_color_code","setProfileViewData","async","response","axiosInstance","get","data","Backgrounds","error","fetchBackgroundColors","fetchButtonColors","handleFileUpload","e","type","file","target","files","size","toast","compressedFile","imageCompression","maxSizeMB","useWebWorker","reader","FileReader","onloadend","base64ToBlob","result","readAsDataURL","handleInputChange","value","handleCheckChange","Number","checked","removeImage","onSubmit","preventDefault","requiredFields","field","replace","body","profile_id","branding_color","undefined","selectedTheme","find","theme","color_code","selectedTextColor","post","_body$cover_photo","_body$photo","status","bg_color_id","btn_color_id","setTimeout","message","success","setProfileData","_error$response","_error$response$data","encType","htmlFor","Input","intent","classes","roundness","placeholder","custom","eventAction","onChange","IoInformationCircleOutline","title","src","alt","MdCancel","current","click","RxAvatar","ref","accept","MdOutlinePhotoLibrary","TextArea","rows","map","color","style","backgroundColor","handleThemeColor","handleTextColor","Button","disabled","NavLink","content","href","_ref","closeModal","setTitle","baseUrl","setBaseUrl","path","setPath","label","ReactDOM","tabIndex","xmlns","fill","viewBox","stroke","strokeLinecap","strokeLinejoin","strokeWidth","d","finalPath","length","platform_id","user_platforms_id","pushPlatform","icon","document","categories","setCategories","activeCategory","setActiveCategory","isLinkInfoOpenModal","setIsLinkInfoOpenModal","selectedPlatform","setSelectedPlatform","categoryRefs","_response$data$catego","_error$data$message","_error$data","fetchCategories","_Fragment","category","categoryId","_categoryRefs$current","scrollIntoView","behavior","handleTabClick","el","platforms","platform","Date","now","baseURL","handlePlatformClick","FiPlus","AddLinkBaseModal","handleCloseModalLink","Link","_profileData$platform","isOpenModal","setIsOpenModal","addLinkOpenModal","setAddLinkOpenModal","confirmationModalOpen","setConfirmationModalOpen","platformToDelete","setPlatformToDelete","addLinkData","setAddLinkData","img","closeConfirmationModal","handleAddLink","AddLinksModal","handleCloseModal","FiEdit","handleAddBaseLink","plaformId","FiTrash2","openConfirmationModal","platformId","user_platform_id","removePlatform","QrCodeEdit","_state$auth","auth","user","qrColors","setQrColors","selectedQrColor","setSelectedQrColor","qrLogo","setQrLogo","qrLogoPreview","setQrLogoPreview","update","setUpdate","qrLoading","setQrLoading","_profileData$qr_color","_profileData$qr_logo","qr_color","qr_logo","setQrColor","setQrPhoto","fetchQrColors","handleRemoveLogo","is_pro","is_subscribed","handleQrColor","FiUpload","resetQr","_profileData$qr_color2","_profileData$qr_logo2","ProfileEd","linkData","sectionLnk","ProfileViewCard","_userData$platforms","profileViewData","selectedThemeColor","layout","setLayout","photoData","setProfilePicData","url","base64Str","coverPhotoData","setCoverPicData","_userData$work_positi","startsWith","background","ReactSVG","avatar","borderColor","index","_platform$label","width","ProfileView","to","CiShare1","QrCodePreview","qrColor","qrPhoto","QRCode","card_uuid","fgColor","level","logo","ProfileEdit","profileId","isModalOpen","setIsModalOpen","qrValue","setQrValue","_result$button_color","button_color","iconLeft","edit","profileDataDispatch","qr_color_code","maxWidth","height","handleCopyLink","navigator","clipboard","writeText","onClose","onProfileAdded","formData","setFormData","handleChange","_response$data","required","ModalType","setModalType","handleOpenModal","IoMdAdd","QRCodeModal","AddProfileModal","base64","mimeType","arguments","byteString","atob","split","arrayBuffer","ArrayBuffer","uint8Array","Uint8Array","i","charCodeAt","Blob"],"sourceRoot":""}